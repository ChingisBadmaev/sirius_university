#   IMSL C/MATH/LIBRARY error messages
#   Recommended maximum message length: 1280 characters.
#
%shift 2 
#                                       
101   IMSL_WRONG_NUM_ARGS              Wrong number of arguments.
102   IMSL_MAJOR_VIOLATION             Major violation occurred.
103   IMSL_UNKNOWN_OPTION              There is an error with argument number
                                       & %(I2).  This may be caused by an
                                       & incorrect number of values following
                                       & a previous optional argument name.
104   IMSL_OPTIONAL_ARG_NULL_1         The argument "%(S1)" following the
                                       & optional argument "%(S2)" is NULL.
105   IMSL_OPTIONAL_ARG_NULL_2         The second argument "%(S1)" following
                                       & the optional argument "%(S2)" is
                                       & NULL.
109   IMSL_INVALID_OPTION_VALUE        For "option" = %(S1), the option value
                                       & must be between %(I1) and %(I2),
                                       & inclusive, but "option_value" = %(I3).
110   IMSL_INVALID_OPT_VALUE           For "option" = %(S1), the option value
                                       & must be greater than or equal to
                                       & %(I1), but "option_value" = %(I2).
120   IMSL_REAL_OUT_OF_RANGE           "%(S1)" must be between %(F1) and
                                       & %(F2), but "%(S1)" = %(F3).
122   IMSL_ILLEGAL_INTEGER_2           "%(S1)" must be either %(I1) or %(I2),
                                       & but "%(S1)" = %(I3).
132   IMSL_INTEGER_OUT_OF_RANGE        "%(S1)" must be between %(I1) and
                                       & %(I2), but "%(S1)" = %(I3).
150   IMSL_UNEXPECTED_NULL_POINTER     The argument "%(S1)" is a NULL pointer
                                       & when a NULL pointer is not allowed.
151   IMSL_UNEXPECTED_NULL_POINT       The argument "%(S1)[%(I1)]" is a NULL
                                       & pointer when a NULL pointer is not
                                       & allowed.
160   IMSL_BAD_ERROR_TYPE              Error type must be -1,...,8, but
                                       & "type" = %(I1).  Message = "%(S1)"
161   IMSL_NEED_RARG_GT                "%(S1)" = %(F1).  "%(S1)" must be
                                       & greater than %(F2).
162   IMSL_NEED_RARG_GE                "%(S1)" = %(F1).  "%(S1)" must be
                                       & greater than or equal to %(F2).
166   IMSL_NEED_IARG_GE                "%(S1)" = %(I1).  "%(S1)" must be greater
                                        & than or equal to %(I2).
170   IMSL_INT_ARG_GT                  "%(S1)" = %(I1), "%(S1)" must be greater
                                       & than %(I2).
180   IMSL_ARG_NONNEGATIVE             "%(S1)" = %(i1).  It must be
                                       & nonnegative.
181   IMSL_INT_ARG_OUT_OF_RANGE        "%(S1)[%(i1)]" = %(i2).  It is out of
                                       & range.
                                       & Valid values are between %(i3) and
                                       & %(i4).
200   IMSL_OUT_OF_MEMORY               Not enough memory.
201   IMSL_OUT_OF_MEMORY_1             Not enough memory, with "%(S1)" = %(I1).
202   IMSL_OUT_OF_MEMORY_2             Not enough memory, with "%(S1)" = %(I1)
                                       & and "%(S2)" = %(I2).
203   IMSL_OUT_OF_MEMORY_3             Not enough memory, with "%(S1)" = %(I1),
                                       & "%(S2)" = %(I2) and "%(S3)" = %(I3).
204   IMSL_OUT_OF_MEMORY_4             Not enough memory, with "%(S1)" = %(I1),
                                       & "%(S2)" = %(I2), "%(S3)" = %(I3),
                                       & and "%(S4)" = %(I4).
206   IMSL_OUT_OF_MEMORY_6             Not enough memory, with "%(S1)" = %(I1),
                                       & "%(S2)" = %(I2), "%(S3)" = %(I3),
                                       & "%(S4)" = %(I4), "%(S5)" = %(I5),
                                       & and "%(S6)" = %(I6).
220   IMSL_WORKSPACE_ERROR             Error in workspace.  Probably
                                       & overwrote past the start of the
                                       & allocation.
221   IMSL_ERROR_ACTIVE_ALLOC_SIZE     The maximum allocation size = %(I2)
                                       & is less than the current active
                                       & allocation size.
222   IMSL_INEQUALITY_VIOLATION_7      "%(S1)" = %(F1).  "%(S1)" must be
                                       & greater than %(F2).
223   IMSL_INEQUALITY_VIOLATION_8      "%(S1)" = %(F1).  "%(S1)" must be less
                                       & than %(F2).
499   IMSL_NO_MT_SIGNAL_HANDLING       C/Math/Library signal handling
                                       & must be turned off
                                       & when using multiple threads.  See
                                       & imsl_err_options for instructions
                                       & on turning off
                                       & signal handling by C/Math/Library.
502   IMSL_SIGNAL_INT                  Interrupt.
504   IMSL_SIGNAL_ILL                  Illegal instruction.
506   IMSL_SIGNAL_ABRT                 Abnormal termination.
508   IMSL_SIGNAL_FPE                  Floating point exception error.
510   IMSL_SIGNAL_BUS                  Bus error.
511   IMSL_SIGNAL_SGEV                 Segmentation violation.
                                       & This can be caused by:\n
                                       & (1) A missing argument or a missing
                                       & parameter after an optional 
                                       & argument.\n
                                       & (2) An incorrectly set pointer.  If
                                       & the procedure expects a pointer to
                                       & be set on input, and it is not set,
                                       & then the procedure will attempt to
                                       & reference a random location in 
                                       & memory.  This can cause this error.
601    IMSL_INEQUALITY_VIOLATION       "%(S1)" = %(I1) and "%(S2)" = %(I2).
                                       & "%(S1)" must be less than or equal
                                       & to "%(S2)".
602    IMSL_INEQUALITY_VIOLATION_2     "%(S1)" = %(I1).  "%(S1)" must be
                                       & greater than or equal to %(I2) and
                                       & less than or equal to %(I3).
603    IMSL_INEQUALITY_VIOLATION_3     "%(S1)" = %(I1).  "%(S1)" must be
                                       & greater than or equal to %(I2).
604    IMSL_LARGER_N_VALUE_NEEDED      The argument "n" = %(I1).  It must be at
                                       & least 1.
605    IMSL_LARGER_LDA_VALUE_NEEDED    The argument "lda" = %(I1).  It must be
                                       & at least as large as "n" = %(I2).
606    IMSL_LARGER_LDB_VALUE_NEEDED    The argument "ldb" = %(I1).  It must be
                                       & at least as large as "n" = %(I2).
607    IMSL_COMPLEX_DIVIDE_BY_ZERO     Complex division by zero.
608    IMSL_LEADING_DIM_OF_A_TOO_SMALL The argument "lda" = %(I1).  It must
                                       & be at least as large as "nlca+nuca+1"
                                       & = %(I2)+%(I3)+1 = %(I4).
609    IMSL_NEED_ZERO_LE_NLCA_LT_N     The argument "nlca" = %(I1).  It must be
                                       & at least 0 and less than "n" = %(I2).
610    IMSL_NEED_ZERO_LE_NUCA_LT_N     The argument "nuca" = %(I1).  It must be
                                       & at least 0 and less than "n" = %(I2).
611    IMSL_LEADING_DIM_OF_B_TOO_SMALL The argument "ldb" = %(I1).  It must
                                       & be at least as large as "nlcb+nucb+1"
                                       & = %(I2)+%(I3)+1 = %(I4).  
612    IMSL_NEED_NLCA_LE_NLCB_LT_N     The argument "nlcb" = %(I1).  It must be
                                       & at least as large as "nlca" = %(I2)
                                       & and less than "n" = %(I3).
613    IMSL_NEED_NUCA_LE_NUCB_LT_N     The argument "nucb" = %(I1).  It must be
                                       & at least as large as "nuca" = %(I2)
                                       & and less than "n" = %(I3).
614    IMSL_LENGTH_OF_VECTORS          The length of vectors "ra" and "rb" must
                                       & be greater than or equal to one.
                                       & On input the length, "n", is given
                                       & as %(I1).
615    IMSL_LENGTH_OF_VECTORS_2        "n" = %(I1).  The length of "ra" and
                                       & "rb", "n", must be greater than or
                                       & equal to one.
616    IMSL_LENGTH_OF_VECTORS_3        The length of vectors "ra", "rb" and
                                       & "iperm" must be greater than or equal
                                       & to one.  On input the length, "n", is
                                       & given as %(I1).
617    IMSL_TOO_MANY_CODIAGONALS       The number of upper codiagonals plus
                                       & the number of lower codiagonals
                                       & plus one must be less than or equal to
                                       & its leading dimension while 
                                       & "nuca+nlca+1" = %(I1) and "lda" =
                                       & %(I2) are given.
618    IMSL_LOWER_CODIAGONALS          The number of lower codiagonals must
                                       & be greater than or equal to zero and
                                       & less than "n" while "nlca" = %(I1) and
                                       & "n" = %(I2) are given.
619    IMSL_UPPER_CODIAGONALS          The number of upper codiagonals must
                                       & be greater than or equal to zero and
                                       & less than "n" while "nuca" = %(I1) and
                                       & "n" = %(I2) are given.
620    IMSL_NOT_ENOUGH_ROWS            The number of rows must be greater
                                       &  than zero. "nra" = %(I1)
621    IMSL_NOT_ENOUGH_COLUMNS         The number of columns must be greater
                                       & than zero.  "nca" = %(I1)
1001  IMSL_NUM_OF_EQUATIONS            The number of equations must be positive
                                       & while "n" = %(I1) is given.
1003  IMSL_ILL_CONDITIONED             The matrix is too ill-conditioned.  An
                                       & estimate of the reciprocal of its L1
                                       & condition number is "rcond" = %(F1).
                                       & The solution might not be accurate.
1004  IMSL_SINGULAR_MATRIX             The input matrix is singular.
1009  IMSL_SINGULAR_TRI_MATRIX         The input triangular matrix is
                                       & singular.  The index of the first
                                       &  zero diagonal element is equal
                                       & to %(I1).
1010  IMSL_NEGATIVE_ORDER              The order of the matrix must be
                                       & positive while "n" = %(I1) is given.
1011  IMSL_LDA_LESS_ORDER              The order of the matrix must be less
                                       & than or equal to its leading  
                                       & dimension while "n" = %(I1) and "lda"
                                       & = %(I2) are given.
1012  IMSL_LDFAC_LESS_ORDER            The order of the matrix must be less
                                       & than or equal to its leading
                                       & dimension while "n" = %(I1) and
                                       & "ldfac" = %(I2) are given.
1013  IMSL_LDAINV_LESS_ORDER           The order of the matrix must be less
                                       & than or equal to its leading
                                       & dimension while "n" = %(I1) and
                                       & "ldainv" = %(I2) are given.
1014  IMSL_COL_DIM_LESS_ORDER          The order of the matrix must be less
                                       & than or equal to its column
                                       & dimension while for "%(S1)" the order
                                       & is %(I1) and the column dimension is
                                       & %(I2).
1015  IMSL_NEED_NUM_ROWS_LT_LEAD       The number of rows of the input matrix
                                       & must be less than or equal to the
                                       & leading dimension while "nra" = %(I1)
                                       & and "lda" = %(I2) are given.
1016  IMSL_NEED_NUM_ROWS_GT_ZERO       The number of rows of the input matrix
                                       & must be greater than zero while
                                       & "nra" = %(I1) is given.
1017  IMSL_NEED_NUM_COLS_GT_ZERO       The number of columns of the input
                                       & matrix must be greater than zero
                                       & while "nca" = %(I1) is given.
1018  IMSL_NONPOSITIVE_MATRIX          The leading %(I1) by %(I1) submatrix
                                       & of the input matrix is not positive
                                       & definite.
1019  IMSL_TRANS_MUST_EQUAL_N_T_OR_C   "trans" must be set equal to "n" or "t"
                                       & or "c" while "%(S1)" is given.
1020  IMSL_NEED_LDA_GE_M               "lda" must be greater than or equal to
                                       & M and greater than zero while "lda" =
                                       & %(I1) and "m" = %(I2) are given.
1021  IMSL_NEED_COL_A_LT_DIM           The number of columns of A must be
                                       & less than or equal to its column
                                       & dimension while "nra" = %(I1) and
                                       & "a_col_dim" = %(I2) are given.
1022  IMSL_NEED_QT_GT_NUM_COL          The column dimension of QR must be
                                       & greater than or equal to the number
                                       & of columns in "a" while "nca" = %(I1)
                                       & and "fac_col_dim" = %(I2) are given.
1023  IMSL_NEED_Q_GT_NUM_COL           The column dimension of "q" must be
                                       & greater than or equal to the number
                                       & of rows in "a", while "nca" = %(I1)
                                       & and "qr_col_dim" = %(I2) are given.
1024  IMSL_COL_DIM_LESS_COL            The number of columns in the matrix must
                                       & be less than or equal to its column
                                       & dimension while for "%(S1)" the number
                                       & of columns is %(I1) and the column
                                       & dimension is %(I2).
1025  IMSL_SPECIFY_FACTOR_ONLY         "IMSL_FACTOR" must be specified with
                                       & "IMSL_FACTOR_ONLY".
1027  IMSL_SPECIFY_SOLVE_ONLY          "IMSL_FACTOR_USER" must be specified
                                       & with "IMSL_SOLVE_ONLY".
1028  IMSL_BASIS_SOLVE_ONLY            "IMSL_BASIS" must be specified with
                                       & "IMSL_SOLVE_ONLY".
1029  IMSL_OUT_OF_MEMORY_FOR_Q         Not enough memory to compute "q".
1030  IMSL_NEED_POS_COL_ROWS           Both the number of rows and the number
                                       & of columns of the input matrix have
                                       & to be positive while "nrqr" = %(I1)
                                       & and "ncqr" = %(I2) are given.
1031  IMSL_NRQR_GT_LDQR                The number of rows of QR must be less
                                       & than or equal to its leading 
                                       & dimension while "nrqr" = %(I1) and
                                       & "ldqr" = %(I2) are given.
1032  IMSL_NEED_ROWS_LE_LEAD_DIM       The number of rows of "q" must be less
                                       & than or equal to its leading 
                                       & dimension while "nrqr" = %(I1) and
                                       & "ldq" = %(I2) are given.
1033  IMSL_IPATH_RANGE                 "ipath" must be between %(I1) and %(I2),
                                       & inclusive, while a value of %(I3) is
                                       & given.
1034  IMSL_IPATH_RANGE_4               "ipath" must be either 1, 2, 3 or 4
                                       & while a value of %(I1) is given.
1035  IMSL_NO_MEM_FOR_FAC              Not enough memory to perform the
                                       & factorization.
1036  IMSL_NO_MEM_FOR_SYS              Not enough memory to solve the system.
1037  IMSL_HERMITIAN_DIAG_REAL_2       The matrix element "a[%(I1)][%(I1)]" =
                                       & %(C1).  The diagonal of a Hermitian
                                       & matrix must be real.  The imaginary
                                       & part will be used as zero in the
                                       & algorithm.
1038  IMSL_CONDITION_ONLY_SPECIFIER    "IMSL_CONDITION" cannot be used with
                                       & "IMSL_SOLVE_ONLY".
1039  IMSL_INVERSE_ONLY_SPECIFIER      "IMSL_INVERSE" or "IMSL_INVERSE_USER"
                                       & must be specified with 
                                       & "IMSL_INVERSE_ONLY".
1040  IMSL_FACTOR_ONLY_SPECIFIER       "IMSL_FACTOR" or "IMSL_FACTOR_USER" must
                                       & be specified with "IMSL_FACTOR_ONLY".
1041  IMSL_NO_SPACE_FOR_INVERSE        Not enough space to compute the
                                       & generalized inverse with "%(S1)" =
                                       & %(I1) and "%(S2)" = %(I2).
1042  IMSL_NEED_LDU_GT_ZERO            The leading dimension of "u" must be
                                       & greater than zero.  "ldu" = %(I1) is
                                       & given.
1043  IMSL_NEED_LDV_GT_ZERO            The leading dimension of "v" must be
                                       & greater than zero.  "ldv" = %(I1) is
                                       & given.
1044  IMSL_CONTROL_FLAG_ERROR          Error in computation control flag. 
                                       & The "ij" decimal expansion of "ipath"
                                       & is "i" = %(I1) and "j" = %(I2).  I
                                       & must be either 0, 1 or 2 and J must be
                                       & either 0 or 1.
1045  IMSL_SLOWCONVERGENT_MATRIX       Convergence can only be obtained for
                                       & the %(I1), ... , %(I2) singular
                                       & values and their corresponding
                                       & singular vectors.
1046  IMSL_BAD_MAX_ITERATIONS          "%(S1)" = %(I1). The maximum number of
                                       & iterations must be positive.
1048  IMSL_TOL_OUT_OF_RANGE            "tol" = %(F1).  "tol" must be between
                                       & 0.0 and 1.0, inclusive.
1049  IMSL_NOT_NONNEG_DEFINITE         The leading %(I1) by %(I1) submatrix
                                       & of the input matrix is not
                                       & nonnegative definite within the
                                       & tolerance defined by "tol" = %(F1).
1050  IMSL_INCONSISTENT_EQUATIONS      The linear system of equations is
                                       & inconsistent within the computed
                                       & tolerance.  Elements of row %(I1) are
                                       & zero, but "b[%(I1)][%(I2)]" = %(F1).
                                       & "x[%(I1)][%(I2)]" is set to zero.
1051  IMSL_INCONSISTENT_EQUATIONS_2    The linear system of equations is
                                       & inconsistent within the computed
                                       & tolerance.  "x[%(I1)]" is set
                                       & to zero.
1052  IMSL_ROW_ELMNTS_MUST_BE_ZERO     "r[%(I1)][%(I1)]" = %(F1).  Remaining
                                       & elements for the row must also be
                                       & zero, but "r[%(I1)][%(I2)]" = %(F2)
                                       & is not.
1053  IMSL_NOT_POSITIVE_DEFINITE_M     The preconditioning matrix, "m", is not
                                       & positive definite.
1054  IMSL_SINGULAR_M_MATRIX           The preconditioning matrix, "m", is
                                       & singular.
1055  IMSL_NOT_POSITIVE_DEFINITE_A     The "a" matrix is not positive definite.
1056  IMSL_SINGULAR_A_MATRIX           The "a" matrix is nearly singular.
1057  IMSL_NO_CONVERGENCE              No convergence after %(I1) iterations.
1058  IMSL_BAD_JACOBI_PRECONDITION     "IMSL_JACOBI" was specified, but the
                                       & elements of "diagonal" are not
                                       & strictly positive or negative.
1059  IMSL_NEED_NCODA_GE_ZERO          "ncoda" must be greater than or equal to
                                       & zero while %(I1) is given.
1060  IMSL_NEED_LDA_GT_NCODA           "lda" must be greater than "ncoda" while
                                       & "lda" = %(I1) and "ncoda" = %(I2) are
                                       & given.
1062  IMSL_COLUMN_DIM_ERROR            Column dimension for "%(S1)" is %(I1).
                                       & The column dimension of "%(S1)" must
                                       & be greater than or equal to "%(S2)" =
                                       & %(I2).
1063  IMSL_WRONG_IDO_VALUE             "ido" = %(I1).  It must be 0, 1 or 2.
1068  IMSL_BEST_ESTIMATE_RETURNED      The iteration for an eigenvalue failed
                                       & to converge.  The best estimate will
                                       & be returned.
1069  IMSL_NRA_EXCEEDS_LDA_VALUE       The number of rows of the matrix must
                                       & be less than or equal to its leading
                                       & dimension while "nra" = %(I1) and
                                       & "lda" = %(I2) are given.
1070  IMSL_POSITIVE_NRB_NCB_VALUES     Both the number of rows and the number
                                       & of columns of a matrix have to be
                                       & positive while "nrb" = %(I1) and "ncb"
                                       & = %(I2) are given.
1072  IMSL_BAD_DIMENSIONS_FOR_TRANS    The following must hold "nrb" = "nca"
                                       & and "ncb" = "nra" while "nrb" = %(I3),
                                       & "nca" = %(I2), "ncb" = %(I4) and "nra"
                                       & = %(I1).
1074  IMSL_BAD_NLCA_VALUE_SPECIFIED    The number of lower codiagonals must
                                       & be greater than or equal to zero and
                                       & less than "n" while "nlca" = %(I1) is
                                       & given.
1075  IMSL_BAD_NUCA_VALUE_SPECIFIED    The number of upper codiagonals must
                                       & be greater than or equal to zero
                                       & and less than "n" while "nuca" = %(I1)
                                       & is given.
1076  IMSL_TOO_MANY_ROWS_IN_MATRIX_A   The number of rows of matrix A must be
                                       & less than or equal to its leading 
                                       & dimension while "nlca" + "nuca" + 1 =
                                       & %(I1) and "lda" = %(I2) are given.
1077  IMSL_TOO_MANY_ROWS_IN_FAC        The number of rows of matrix "fac" must
                                       & be less than or equal to its
                                       & leading dimension while 2*"nlca" +
                                       & "nuca" + 1 = %(I1) and "ldfac" = %(I2)
                                       & are given.
1078  IMSL_INVALID_MULT_STRING         Invalid matrix multiplication string:
                                       & "%(S1)".
1079  IMSL_MATMUL_DIM_MISMATCH_2       Cannot multiply a %(I1) by %(I2) matrix
                                       & and a %(I3) by %(I4) matrix.
1080  IMSL_MATMUL_DIM_MISMATCH_3       Cannot multiply a %(I1) by %(I2) matrix
                                       & times a %(I3) by %(I4) matrix times
                                       & a %(I5) by %(I6) matrix.
1090  IMSL_MAT_MUL_UNDEFINED           The array "%(S1)" is used but has not
                                       & been set via an optional argument.
1091  IMSL_BAD_SOLVE_FACTOR_INVERSE    Only one of "IMSL_FACTOR_ONLY" or 
                                       & "IMSL_SOLVE_ONLY" or
                                       & "IMSL_INVERSE_ONLY" can be specified.
1092  IMSL_BAD_SOLVE_ONLY              The inverse of A cannot be returned when
                                       & "IMSL_SOLVE_ONLY" is specified.
1093  IMSL_BAD_FACTOR_ONLY             The inverse of A cannot be returned when
                                       & "IMSL_FACTOR_ONLY" is specified.
1094  IMSL_BAD_INVERSE_ONLY            The factorization of A cannot be
                                       & returned when "IMSL_INVERSE_ONLY" is
                                       & specified.
1095  IMSL_BAD_RESULT_COL_DIM          The specified column dimension for the
                                       & result is %(i1). For the matrix
                                       & operation %(l1), the column dimension
                                       & of the result must be greater than or
                                       & equal to %(i2).
1096  IMSL_BAD_SOLVE_FACTOR            Both "IMSL_FACTOR_ONLY" and
                                       & "IMSL_SOLVE_ONLY" cannot be specified.
1097  IMSL_NUM_OF_LS_EQUATIONS         The number of least squares equations
                                       & must be positive while "nra" = %(i1)
                                       & is given.
1098  IMSL_NUM_OF_LS_VARIABLES         The number of variables must be positive
                                       & while "nca" = %(i1) is given.
1099  IMSL_NUM_OF_LS_CONSTRAINTS       The number of constraints must be
                                       & nonnegative while "ncon" = %(i1) is
                                       & given.
1100  IMSL_BAD_CONSTRAINT_BOUNDS       The bounds given for constraint %(i1)
                                       & are inconsistent: "bl[%(i1)]" = %(r2)
                                       & must not be greater than "bu[%(i1)]"
                                       & = %(r3).
1101  IMSL_BAD_CONSTRAINT_TYPE         "con_type" must be one of 0, 1, 2, or 3
                                       & while "con_type[%(i1)]" = %(i2) is
                                       & given.
1102  IMSL_BAD_SCALING                 "iscale" must be one of 1, 2, or 3 while
                                       & "iscale" = %(i1) is given.
1103  IMSL_BAD_OFFSET                  The offset past "x[nvar]" for
                                       & user-provided column scaling must be
                                       & positive, while an offset of %(i1)
                                       & is given.
1104  IMSL_BAD_SCALE_FACTOR            Each user-provided column scale factor
                                       & must be positive, while factor %(i1)
                                       & has value %(r1).
1105  IMSL_BAD_LS_OPTION               Option number %(i1) is not defined.
1106  IMSL_BAD_LS_ROW_ACCUMULATION     The number of rows for equation
                                       & accumulation must be between 0 and
                                       "ldw" = %(i1) while "mnew" = %(i2).
1107  IMSL_BAD_COLUMN_ORDER            The input order of columns must be
                                       & between 1 and "nvar" while input
                                       & order = %(i1) and "nvar" = %(i2)
                                       & are given.
1108  IMSL_BAD_POLARITY_FLAGS          The bound polarity flags must be
                                       & positive while component %(i1) had
                                       & flag "ibb[%(i2)]".
1110  IMSL_BAD_OFFSET_FOR_BLOWUP       The offset beyond position "nvar" must
                                       & be positive for the blowup factor
                                       & option while "ioff" = %(i1) is
                                       & given.
1111  IMSL_BAD_BLOWUP_RECIPROCAL       The reciprocal of the blow-up factor
                                       & for rejecting variables must be
                                       & positive, while "tolsze" = %(r1)
                                       & is given.
1112  IMSL_BAD_OFFSET_FOR_PRETRI       The offset beyond position "nvar" must
                                       & be positive for the pretriangularizing
                                       & option, while "ioff" = %(i1) is
                                       & given.
1113  IMSL_NEG_PRETRI_FACTOR           The factor where pretriangularizing
                                       & is performed must be nonnegative,
                                       & while "fac" = %(r1) is given.
1114  IMSL_BAD_ROW_SEPARATOR           The row separator to apply the
                                       & weighting must lie betweem 0 and
                                       & "mrows", while "mval" = %(i1) is
                                       & is given.
1115  IMSL_N_GT_ZERO                   The order of the matrix must be
                                       & greater than zero. "n" = %(i1)
                                       & is given.
1116  IMSL_NEED_ZERO_LE_NLCB_LT_N      The argument "nlcb" = %(i1). It must be
                                       & at least 0 and less than "n" = %(i2).
1117  IMSL_NEED_ZERO_LE_NUCB_LT_N      The argument "nucb" = %(i1). It must be
                                       & at least 0 and less than "n" = %(i2).
1118  IMSL_SYMMETRIC_TRANS             The "symmetric" optional argument can
                                       & not be specified with the "transpose"
                                       & optional argument.
1119  IMSL_M_GT_ZERO                   The order of the matrix must be
                                       & greater than zero. "m" = %(i1)
                                       & is given.
1120  IMSL_NZ_GE_ZERO_LT_MN            The number of non-zero elements
                                       & must be greater than or equal to
                                       & zero and less than or equal to
                                       & "m * n". "nz" = %(i1), "m * n" =
                                       & %(i2).
1121  IMSL_NZ_GE_ZERO_LT_NN            The number of non-zero elements
                                       & in matrix "%(S1)" must be greater
                                       & than or equal to zero and less
                                       & than or equal to "n * n". "%(S2)"
                                       & =  %(i1), "n * n" = %(i2).
1122  IMSL_A_COL_EQ_B_ROW              The column dimension of A must be
                                       & equal to the row dimension of B.
1123  IMSL_MATRIX_ROW_ZERO             Row %(i1) of the input matrix is
                                       & identically zero.
1124  IMSL_MATRIX_COL_ZERO             Column %(i1) of the input matrix is
                                       & identically zero.
1125  IMSL_BAD_HB_COL_PTR_FIRST        The first entry in HB_col_ptr must
                                       & point to zero but HB_col_ptr[0]
                                       & = %(i1).
1126  IMSL_BAD_HB_COL_PTR_LAST         The last entry in HB_col_ptr must
                                       & point to the first free location
                                       & in HB_values which is %(i2), but
                                       & HB_col_ptr[%(i1)] = %(i3).
1127  IMSL_HB_COL_PTR_NOT_INCREASING   The entries in HB_col_ptr must be in
                                       & increasing order but
                                       & HB_col_ptr[%(i1)] = %(i3) > %(i4)
                                       & = HB_col_ptr[%(i2)].
1128  IMSL_SOLVE_ONLY_REQUIRES_SUPPLY  Setting argument "factsol" = 2
                                       & requires optional argument
                                       & "IMSL_SUPPLY_SPARSE_LU_FACTOR".
1130  IMSL_SINGULAR_U_MATRIX           The upper triangular matrix U from the
                                       & LU factorization defined by optional
                                       & argument IMSL_SUPPLY_SPARSE_LU_FACTOR
                                       & is singular. The index of the first
                                       & zero diagonal element is equal
                                       & to %(I1).
2001  IMSL_MATRIX_ORDER_TOO_SMALL      The argument "n" = %(I1).  The order of
                                       & the matrix must be at least 1.
2002  IMSL_NUMBER_MAX_EIGENVALUES      The argument "mxeval" = %(I1).  The
                                       & maximum number of eigenvalues to be
                                       & calculated must be greater than zero
                                       & and less than or equal to "n" = %(I2).
2003  IMSL_LDA_VALUE_TOO_SMALL         The argument "lda" = %(I1).  The leading
                                       & dimension of the matrix must be at
                                       & least equal to the order of the
                                       & matrix, "n" = %(I2).
2004  IMSL_NEED_ELOW_LESS_THAN_EHIGH   The lower limit of the interval in
                                       & which the eigenvalues are to be
                                       & sought, "elow" = %(F1), must be
                                       & strictly less than the upper limit,
                                       & "ehigh" = %(F2).
2005  IMSL_LDEVEC_VALUE_TOO_SMALL      The argument "ldevec" = %(I1).  The
                                       & leading dimension of the eigenvector
                                       & matrix must be at least equal to the
                                       & order of the matrix, "n" = %(I2).
2006  IMSL_NEVAL_MXEVAL_MISMATCH       The determined number of eigenvalues
                                       & in the interval (%(F3),%(F4)) is
                                       & "neval" = %(I1).  However, the input
                                       & value for the maximum number of
                                       & eigenvalues in this interval is
                                       & "mxeval" = %(I2).
2007  IMSL_LOST_ORTHOGONALITY          The iteration for at least one
                                       & eigenvector failed to converge.
                                       & Some of the eigenvectors may be
                                       & inaccurate.
2008  IMSL_SLOW_CONVERGENCE_SYM        The iteration for the eigenvalue
                                       & failed to converge in 100
                                       & iterations before deflating.
2009  IMSL_SLOW_CONVERGENCE_GEN        The iteration for the eigenvalues
                                       & did not converge after %(I1)
                                       & iterations.
2010  IMSL_HERMITIAN_DIAG_REAL         The matrix element "a[%(I1)][%(I1)]" =
                                       & %(C1).  The diagonal of a Hermitian
                                       & matrix must be real.
2011  IMSL_HERMITIAN_DIAG_REAL_1       The matrix element "a[%(I1)][%(I1)]" =
                                       & %(C1).  The diagonal of a Hermitian
                                       & matrix must be real; its imaginary
                                       & part is set to zero.
2012  IMSL_NEED_LDA_GE_N               The leading dimension of "a" must be
                                       & at least as large as "n" while "lda" =
                                       & %(I1) and "n" = %(I2) are given.
2013  IMSL_NEED_LDB_GE_N               The leading dimension of "b" must be
                                       & at least as large as "n" while "ldb" =
                                       & %(I1) and "n" = %(I2) are given.
2014  IMSL_NEED_N_GE_ZERO              "n" must be greater than or equal to
                                       & zero while %(I1) is given.
2015  IMSL_INCX_EQUALS_ZERO            "incx" must not be equal to zero while
                                       & %(I1) is given.
2016  IMSL_INCY_EQUALS_ZERO            "incy" must not be equal to zero while
                                       & %(I1) is given.
2017  IMSL_INVALID_UPLO_VALUE          "uplo" must be set equal to "u" or "l"
                                       & while "%(S1)" is given.
2018  IMSL_NRA_MUST_BE_AT_LEAST_1      The number of rows in "a" must be at
                                       & least one while "nra" = %(I1) is
                                       & given.
2019  IMSL_NCA_MUST_BE_AT_LEAST_1      The number of columns in "a" must be at
                                       & least one while "nca" = %(I1) is
                                       & given.
2020  IMSL_NEED_NRB_EQUAL_TO_NRA       The number of rows in "b" must be equal
                                       & to the number of rows in "a" while
                                       & "nrb" = %(I1) and "nra" = %(I2) are
                                       & given.
2021  IMSL_NEED_NCB_EQUAL_TO_NCA       The number of columns in "b" must be
                                       & equal to the number of columns in
                                       & "a" while "ncb" = %(I1) and "nca" =
                                       & %(I2) are given.
2022  IMSL_NEED_LDA_GE_NRA             The leading dimension of "a" must be
                                       & at least as large as the number of
                                       & rows in "a" while "lda" = %(I1) and
                                       & "nra" = %(I2) are given.
2023  IMSL_NEED_LDB_GE_NRB             The leading dimension of "b" must be
                                       & at least as large as the number of
                                       & rows in "b" while "ldb" = %(I1) and
                                       & "nrb" = %(I2) are given.
2024  IMSL_INVALID_LDA_VALUE_GIVEN     "lda" must be greater than or equal
                                       & to "n" and greater than zero while
                                       & "lda" = %(I1) and "n" = %(I2) are
                                       & given.
2025  IMSL_NEED_A_AND_N_GT_ZERO        "n" = %(I1).  The order of "a", "n",
                                       & must be greater than zero.
2026  IMSL_NEED_N_LE_LDA               "n" = %(I1) and "lda" = %(I2).  The
                                       & order of "a", "n", must be less than
                                       & or equal to the leading dimension of
                                       & "a", "lda".
2027  IMSL_NEED_LDB_GE_MATRIX_ORDER    The argument "ldb" = %(I1).  The leading
                                       & dimension of the matrix "b" must be at
                                       & least equal to the order of the
                                       & matrix, "n" = %(I2).
2028  IMSL_MATRIX_B_NOT_POS_DEFINITE   Matrix "b" is not positive definite.
2029  IMSL_MATRIX_ORDER_NOT_POSITIVE   The order of the matrix must be
                                       & positive while "n" = %(I1) is given.
2030  IMSL_NEED_MATRIX_ORDER_LE_LDA    The order of the matrix must be less
                                       & than or equal to its leading 
                                       & dimension while "n" = %(I1) and "lda"
                                       & = %(I2) are given.
2031  IMSL_NEED_N_LE_LDFAC             The order of the matrix must be less
                                       & than or equal to its leading dimension
                                       & while "n" = %(I1) and "ldfac" = %(I2)
                                       & are given.
2032  IMSL_SUBMATRIX_NOT_POS_DEFINITE  The leading %(I1) by %(I1) submatrix
                                       & of the input matrix is not positive
                                       & definite.
2033  IMSL_NEED_M_GE_ZERO              "m" must be greater than or equal to
                                       & zero while %(I1) is given.
2034  IMSL_NEED_LDB_GE_M_AND_GT_ZERO   "ldb" must be greater than or equal to
                                       & "m" and greater than zero while "ldb"
                                       & = %(I1) and "m" = %(I2) are given.
2035  IMSL_SIDE_EQ_L_LDA_TOO_SMALL     "lda" must be greater than or equal to
                                       & M and greater than zero when "side"
                                       & = "l", but "lda" = %(I1) and M = %(I2)
                                       & are given.
2036  IMSL_NEED_NEW_LDA_SIDE_EQUALS_R  "lda" must be greater than or equal to
                                       & "n" and greater than zero when "side"
                                       & = "r", but "lda" = %(I1) and "n" =
                                       & %(I2) are given.
2037  IMSL_SIDE_MUST_EQUAL_L_OR_R      "side" must be set equal to "l" or "r"
                                       & while "%(S1)" is given.
2038  IMSL_UPLO_MUST_EQUAL_U_OR_L      "uplo" must be set equal to "u" or "l"
                                       & while "%(S1)" is given.
2039  IMSL_TRANSA_MUST_EQUAL_N_T_OR_C  "transa" must be set equal to "n", "t",
                                       & or "c" while "%(S1)" is given.
2040  IMSL_DIAG_MUST_EQUAL_U_OR_N      "diag" must be set equal to "u" or "n"
                                       & while "%(S1)" is given.
2041  IMSL_NO_EIGENVALUES_RETURNED     The number of eigenvalues in the
                                       & specified interval exceeds "mxeval".
                                       & "neval" contains the number of 
                                       & eigenvalues in the interval. No
                                       & eigenvalues will be returned.
2042  IMSL_SLOW_CONVERGENCE_2          Inverse iteration did not converge.
                                       & Eigenvector is not correct for the
                                       & specified eigenvalue.
2043  IMSL_LOST_ORTHOGONALITY_2        The eigenvectors have lost
                                       & orthogonality.
2044  IMSL_USE_IMSL_VECTORS_OPTION     Optional arguments "IMSL_RANGE" and
                                       & "IMSL_VECTORS_USER" are incompatible.
                                       & Use "IMSL_VECTORS" instead.
2055  IMSL_BAD_C_MAT_ADD_COORD         The routine imsl_c_mat_add_coordinate
                                       & does not return correct results.  Use
                                       & imsl_z_mat_add_coordinate instead.
3001  IMSL_SPLINE_ORDER_X              The order of the spline in the X
                                       & direction must be at least one while
                                       & the order given is %(I1).
3002  IMSL_SPLINE_ORDER_Y              The order of the spline in the Y
                                       & direction must be at least one while
                                       & the order given is %(I1).
3003  IMSL_SPLINE_DERIV_X              The order of the derivative in the X
                                       & direction must be at least zero,
                                       & while the order given is %(I1).
3004  IMSL_SPLINE_DERIV_Y              The order of the derivative in the Y
                                       & direction must be at least zero,
                                       & while the order given is %(I1).
3005  IMSL_SPLINE_COEFF_X              The number of spline coefficients
                                       & in the X direction must be at least
                                       & as large as the order of the spline
                                       & in the X direction while the number
                                       & of coefficients specified is %(I1)
                                       & and the order given is %(I2).
3006  IMSL_SPLINE_COEFF_Y              The number of spline coefficients
                                       & in the Y direction must be at least
                                       & as large as the order of the spline
                                       & in the Y direction while the number
                                       & of coefficients specified is %(I1)
                                       & and the order given is %(I2).
3007  IMSL_X_NOT_WITHIN_KNOTS          The point "x" = %(F1) does not lie
                                       & within the knot sequence for the X
                                       & direction.  The value zero is returned
                                       & in this case.
3008  IMSL_Y_NOT_WITHIN_KNOTS          The point "y" = %(F1) does not lie
                                       & within the knot sequence for the Y
                                       & direction.  The value zero is returned
                                       & in this case.
3009  IMSL_SPLINE_ORDER_ARB            The order of the spline in the %(S1)
                                       & direction must be at least one while
                                       & the order given is %(I1).
3010  IMSL_SPLINE_COEFF_XY             The number of coefficients of the
                                       & spline in the %(S1) direction must
                                       & be at least as large as the order
                                       & of the spline in the %(S1) direction
                                       & while the number of coefficients
                                       & specified is %(I1) and the order
                                       & given is %(I2).
3011  IMSL_SPLINE_LEFT_ENDPT           The left endpoint of X integration is
                                       & not within the knot sequence.
                                       & Integration occurs only from the
                                       & leftmost knot to "b".
3012  IMSL_SPLINE_RIGHT_ENDPT          The right endpoint of X integration
                                       & is not within the knot sequence.
                                       & Integration occurs only from the
                                       & leftmost knot to "a".
3013  IMSL_SPLINE_RIGHT_ENDPT_1        The right endpoint of X integration is
                                       & not within the knot sequence.
                                       & Integration occurs only from the
                                       & "a" to the rightmost knot.
3014  IMSL_SPLINE_LEFT_ENDPT_1         The left endpoint of X integration is
                                       & not within the knot sequence.
                                       & Integration occurs only from
                                       & "b" to the rightmost knot.
3015  IMSL_SPLINE_LEFT_ENDPT_2         The left endpoint of Y integration is
                                       & not within the knot sequence.
                                       & Integration occurs only from the
                                       & leftmost knot to "d".
3016  IMSL_SPLINE_RIGHT_ENDPT_2        The right endpoint of Y integration is
                                       & not within the knot sequence.
                                       & Integration occurs only from the
                                       & leftmost knot to "c".
3017  IMSL_SPLINE_RIGHT_ENDPT_3        The right endpoint of Y integration is
                                       & not within the knot sequence.
                                       & Integration occurs only from
                                       & "c" to the rightmost knot.
3018  IMSL_SPLINE_LEFT_ENDPT_3         The left endpoint of Y integration is
                                       & not within the knot sequence.
                                       & Integration occurs only from
                                       & "d" to the rightmost knot.
3019  IMSL_SPLINE_LIMITS_X             At least one of the limits of
                                       & integration of the X variable is
                                       & not within the knot sequence.  The
                                       & integration region of the X variable
                                       & is set to the intersection of the
                                       & interval defined by the knot sequence
                                       & and the closed interval ("a", "b").
3020  IMSL_SPLINE_LIMITS_Y             At least one of the limits of 
                                       & integration of the Y variable is
                                       & not within the knot sequence.  The
                                       & integration region of the Y variable
                                       & is set to the intersection of the
                                       & interval defined by the knot sequence
                                       & and the closed interval ("c", "d").
3021  IMSL_SPLINE_DATA_X               The number of data points of the spline
                                       & in the X direction must be at least
                                       & as large as the order of the spline
                                       & in the X direction while the number
                                       & of data points specified is %(I1)
                                       & and the order given is %(I2).
3022  IMSL_SPLINE_DATA_Y               The number of data points of the spline
                                       & in the Y direction must be at least
                                       & as large as the order of the spline
                                       & in the Y direction while the number
                                       & of data points specified is %(I1)
                                       & and the order given is %(I2).
3023  IMSL_SPLINE_LD_FDATA             The leading dimension of "fdata" must
                                       & be at least as large as "nxdata"
                                       & while "ldf" = %(I1) and "nxdata" =
                                       & %(I2) are given.
3024  IMSL_XDATA_NOT_INCREASING        The X data values must be strictly
                                       & increasing, but "xdata[%(I1)]" =
                                       & %(F1) and ""xdata"[%(I2)]" = %(F2).
3025  IMSL_YDATA_NOT_INCREASING        The "y" data values must be strictly
                                       & increasing, but "ydata[%(I1)]" =
                                       & %(F1) and "ydata"[%(I2)] = %(F2).
3026  IMSL_SPLINE_ORDER_X_OR_Y         The order of the spline in the %(S1)
                                       & direction must be at least one while
                                       & the order given is %(I1).
3027  IMSL_SPLINE_BAD_XYDATA           The number of data points in the %(S1)
                                       & direction must be at least as large
                                       & as the order in the %(S1) direction
                                       & while the number of data points
                                       & specified is %(I1) and the order
                                       & specified is %(I2).
3028  IMSL_KNOT_MULTIPLICITY           The multiplicity of the knots in the
                                       & %(S1) direction must not exceed the
                                       & order in the %(S1) direction, while
                                       & knots %(I1) through %(I2) are
                                       & all equal to %(F1).
3029  IMSL_KNOT_NOT_INCREASING         The knots in the %(S1) direction
                                       & must be nondecreasing, while knot
                                       & number %(I1) is %(F1) and knot number
                                       & %(I2) is %(F2).
3030  IMSL_ILL_COND_INTERP_PROB        The interpolation matrix in the %(S1)
                                       & direction is nearly singular, try
                                       & higher precision if possible.
3031  IMSL_SPLINE_BAD_ORDER            The order of the spline must be at
                                       & least one while the order given is
                                       & %(I1).
3032  IMSL_SPLINE_BAD_COEFFS           The number of coefficients must be
                                       & at least as large as the order of
                                       & the spline while the number of
                                       & coefficients specified is %(I1)
                                       & and the order given is %(I2).
3033  IMSL_SPLINE_ORDER_DERIV          The order of the derivative must be
                                       & at least zero, while "ideriv" = %(I1)
                                       & is given.
3034  IMSL_DUPLICATE_XDATA_VALUES      Points in the data point abscissas
                                       & array must be distinct, but
                                       & "xdata[%(I1)]" = "xdata[%(I2)]"
                                       & = %(F1).
3035  IMSL_SPLINE_NEED_DATA_PTS        The number of data points must be
                                       & at least as large as the order of
                                       & the spline while the number of
                                       & data points specified is %(I1) and
                                       & the order given is %(I2).
3036  IMSL_SPLINE_EQUAL_LIMITS         The upper and lower endpoints of
                                       & integration are equal.  The indefinite
                                       & integral is zero.
3037  IMSL_LIMITS_LOWER_TOO_SMALL      The left endpoint of integration is
                                       & not within the knot sequence.
                                       & Integration occurs only from the
                                       & leftmost knot to "b".
3038  IMSL_LIMITS_UPPER_TOO_SMALL      The right endpoint of integration is
                                       & not within the knot sequence.
                                       & Integration occurs only from the
                                       & leftmost knot to "a".
3039  IMSL_LIMITS_UPPER_TOO_BIG        The right endpoint of integration is
                                       & not within the knot sequence.
                                       & Integration occurs only from the
                                       & leftmost knot to "a".
3040  IMSL_LIMITS_LOWER_TOO_BIG        The left endpoint of integration is
                                       & not within the knot sequence.
                                       & Integration occurs only from
                                       & "b" to the rightmost knot.
3041  IMSL_SPLINE_LD_FDATA_1           The leading dimension of "fdata" must
                                       & be at least as large as "nxdata"
                                       & while "nxdata" = %(I1) and "ldf" =
                                       & %(I2) are given.
3042  IMSL_SPLINE_POS_DATA_PTS         The number of data points in the
                                       & %(S1)-direction must be positive
                                       & while the number specified is %(I1).
3043  IMSL_SPLINE_ORDER_POSI           The order of the spline in the
                                       & %(S1)-direction must be positive while
                                       & the order given is %(I1).
3044  IMSL_SPLINE_MORE_COEF_REQ        The number of spline coefficients
                                       & in the %(S1)-direction must not be
                                       & larger than the number of data points
                                       & in the %(S1)-direction while the
                                       & number of coefficients specified is
                                       & %(I1) and the number of data points
                                       & specified is %(I2).
3045  IMSL_SPLINE_LOW_ACCURACY         There may be less than one digit of
                                       & accuracy in the least squares fit.
                                       & Try higher precision if possible.
3046  IMSL_NEGATIVE_WEIGHTS            All weights in the %(S1)-direction must
                                       & be greater than or equal to zero,
                                       & but weight number %(I1) is %(F1).
3047  IMSL_SPLINE_NONDEC_DATA          Data points in the %(S1)-direction
                                       & must be nondecreasing, while data
                                       &  point number %(I1) is %(F1) and
                                       &  data point number %(I2) is %(F2).
3048  IMSL_SPLINE_SMLST_ELEMNT         The smallest data point in the
                                       & %(S1)-direction must be greater than
                                       & or equal to "knot[order-1]" in the
                                       & %(S1)-direction, while the smallest
                                       & data points is %(F1) and
                                       & "knot[order-1]" is %(F2).
3049  IMSL_SPLINE_LRGST_ELEMNT         The largest data point in the
                                       & %(S1)-direction must be less than
                                       & or equal to "knot[spline_space_dim]"
                                       & in the %(S1)-direction, while
                                       & the largest data points is %(F1)
                                       & "knot[spline_space_dim]" is %(F2).
3050  IMSL_SPLINE_NO_POS_ELMNT         At least one element of the weights
                                       & must be greater than zero, but all
                                       & weights given are equal to zero.
3051  IMSL_SPLINE_BAD_COEFFS_2         The number of coefficients must be less
                                       & than or equal to the number of data
                                       & points while the number of
                                       & coefficients specified is %(I1) and
                                       & the number of data points specified
                                       & is %(I2).
3052  IMSL_XDATA_TOO_LARGE             The largest data point in the
                                       & %(S1)-direction must be less than
                                       & or equal to "knot[spline_space_dim]"
                                       & in the %(S1)-direction, while the
                                       & largest data points is %(F1) and
                                       & "knot[spline_space_dim]" is %(F2).
3053  IMSL_XDATA_TOO_SMALL             The smallest data point in the
                                       & %(S1)-direction must be greater than
                                       & or equal to "knot[order-1]" in the
                                       & %(S1)-direction, while the smallest
                                       & data points is %(F1) and
                                       & "knot[order-1]" is %(F2).
3054  IMSL_SPLINE_BAD_ORDER_2          The order of the spline must be at
                                       & least 3 while the order given is
                                       & %(I1).
3055  IMSL_ILL_COND_LIN_SYS            The algorithm has detected
                                       & ill-conditioning in a linear system
                                       & and can not proceed.  Higher
                                       & precision may help.
3056  IMSL_NO_CONV_NEWTON              No convergence after %(I1) Newton
                                       & iterations.
3057  IMSL_XGUESS_MULTIPLICITY         The knots "xguess[%(I1)]" through
                                       & "xguess[%(I2))]" are all equal to
                                       & %(F1).  The multiplicity of the
                                       & knots must not exceed the order of
                                       & the spline where the order given
                                       & is %(I3).
3058  IMSL_XGUESS_NOT_INCREASING       The knot "xguess[%(I1)]" = %(F1) and
                                       & "xguess[%(I2)]" = %(F2).
                                       & The knots must be nondecreasing.
3059  IMSL_OPT_KNOTS_STACKED_1         The knots found to be optimal are
                                       & stacked more than korder.  This
                                       & indicates fewer knots will produce the
                                       & same error sum of squares.  The knots
                                       & have been separated slightly.
3060  IMSL_OPT_KNOTS_STACKED_2         The knots found to be optimal are
                                       & stacked more than korder.  This
                                       & indicates fewer knots will produce
                                       & the same error sum of squares.
3061  IMSL_INTERVAL_TOO_SMALL          The interval between bounds is too
                                       & small.  No change in "x" can be made.
3062  IMSL_INIT_GUESS_OUT_BOUNDS       The initial guess is out of bound.
                                       & Rerun with a new guess.
3063  IMSL_ROUNDING_ERRORS_IN_X        Computer rounding errors prevent further
                                       & refinement of "x".
3064  IMSL_FINAL_VALUE_AT_BOUND        The final value for "x" is at a bound.
                                       & The minimum is probably beyond the
                                       & bound.
3065  IMSL_MAX_FCN_EVAL_EXCEEDED       The maximum number of function
                                       & evaluations, "maxfn" = %(I1), has been
                                       & exceeded.
3066  IMSL_NEED_AT_LEAST_2_PTS         The number of data points must be
                                       & 2 or more while the number of data
                                       & points specified is %(I1).
3067  IMSL_WRONG_ILEFT_VALUE           The argument "ileft" = %(I1).  It must
                                       & be 0, 1 or 2.
3068  IMSL_WRONG_IRIGHT_VALUE          The argument "iright" = %(I1).  It must
                                       & be 0, 1 or 2.
3069  IMSL_NEED_AT_LEAST_4_PTS         The number of data points must be 4
                                       & or more while the number specified
                                       & is %(I1);
3070  IMSL_NOT_PERIODIC                The function values at smallest and
                                       & largest "xdata" points, %(F1) and
                                       & %(F2), are not equal.  They are
                                       & %(F3) and %(F4), respectively.
                                       & %(F3) is used.
3071  IMSL_NEED_AT_LEAST_3_PTS         The number of data points must be at
                                       & least 3 while the number specified
                                       & is %(I1).
3072  IMSL_NEED_LARGER_ITMAX           The maximum number of iterations must
                                       & be at least 2 while "itmax" = %(I1)
                                       & is given.
3073  IMSL_MAX_ITERATIONS_REACHED      The maximum number of iterations was
                                       & reached in Newtons Method.  The best
                                       & answer will be returned.  "itmax" =
                                       & %(I1) was used, a larger value may
                                       & help.
3074  IMSL_DIAG_ELMNT_NEAR_ZERO        The diagonal of the matrix has a near
                                       & zero element.  The matrix is
                                       & ill-conditioned.
3075  IMSL_NEGATIVE_SMPAR_VALUE        The smoothing parameter must be
                                       & non-negative while "sigma" = %(F1)
                                       & is given.
3076  IMSL_INTCEP_SHOULD_BE_ZERO       The intercept option must be a zero
                                       & or a one while "intcep" = %(I1) is
                                       & given.
3077  IMSL_NBASIS_FCNS_TOO_SMALL       The number of basis functions must be
                                       & at least one while "nbasis" = %(I1)
                                       & is given.
3078  IMSL_NEED_AT_LEAST_1_PT          The number of data points must be at
                                       & least one while the number specified
                                       & is %(I1).
3079  IMSL_BAD_IWT_OPTION              The weighting option must be a zero
                                       & or a one while "iwt" = %(I1) is given.
3080  IMSL_LINEAR_DEPENDENCE           Linear dependence of the basis functions
                                       & was declared.  Appropriate 
                                       & coefficients are set to zero.
3081  IMSL_LINEAR_DEPENDENCE_CONST     Linear dependence of the constant
                                       & function (the intercept) and the basis
                                       & functions was declared.  Appropriate
                                       & coefficients are set to zero.
3082  IMSL_NEED_NXOUT_GT_ZERO          The number of elements in "xout" must
                                       & be greater than zero while "nx_out"
                                       & = %(I1) is given.
3083  IMSL_NEED_NYOUT_GT_ZERO          The number of elements in "yout" must
                                       & be greater than zero while "ny_out"
                                       & = %(I1) is given.
3084  IMSL_LDSUR_TOO_SMALL             The leading dimension of "sur" must
                                       & be at least as big as the number of
                                       & elements in "xout", while "ldsur" =
                                       & %(I2) and "nx_out" = %(I1) are given.
3085  IMSL_XOUT_NOT_STRICTLY_INCRSING  The elements in "xout" must be
                                       & increasing, while "xout[%(I1)]" =
                                       & %(F1) and "xout[%(I2)" = %(F2)
                                       & are given.
3086  IMSL_YOUT_NOT_STRICTLY_INCRSING  The elements in "yout" must be
                                       & increasing, while "yout[%(I1)] =
                                       & %(F1) and "yout[%(I2)] = %(F2)
                                       & are given.
3087  IMSL_ALL_POINTS_COLLINEAR        All points are collinear.
3088  IMSL_DUPLICATE_XYDATA_VALUES     Two data points are equal.
                                       &"xydata[%(I1)][I]" = (%(F1),%(F2))
                                       & and "xydata[%(I2)][I]" =
                                       & (%(F3),%(F4)).  These points must be
                                       & distinct.
3089  IMSL_NEED_NRA_AND_NCA_GT_ZERO    Both the number of rows and the
                                       & number of columns of the input
                                       & matrix have to be positive while
                                       & "nra" = %(I1) and "nca" = %(I2) are
                                       & given.
3090  IMSL_NEED_SMALLER_NRA_VALUE      The number of rows of A must be less
                                       & than or equal to its leading
                                       & dimension while "nra" = %(I1) and
                                       & "lda" = %(I2) are given.
3091  IMSL_NRA_MUST_BE_POSITIVE        The number of rows of the input matrix
                                       & must be positive while "nra" = %(I1)
                                       & is given.
3092  IMSL_NRQR_GREATER_THAN_LDQR      The number of rows of "qr" must be less
                                       & than or equal to its leading
                                       & dimension while "nra" = %(I1) and
                                       & "ldqr" = %(I2) are given.
3093  IMSL_KBASIS_IS_NEGATIVE          The number of columns of the submatrix
                                       & "ak" of "a" must be positive while
                                       & "kbasis" = %(I1) is given.
3095  IMSL_MATRIX_R_EXACTLY_SINGULAR   Computation of the least squares
                                       & solution has been requested but
                                       & the upper triangular matrix "r" is
                                       & exactly singular; the index of the
                                       & first zero diagonal element of R
                                       & is %(I1).
3096  IMSL_X_AND_XPERMU_LENGTH_LE_0    The length of the arrays "x" and
                                       & "xpermu" must be positive while
                                       & "n" = %(I1) is given.
3097  IMSL_IPATH_RANGE_3               "ipath" must be equal to 1 or 2 while
                                       & a value of %(I1) is given.
3098  IMSL_IPERMU_RANGE                "ipermu[%(I1)]" = %(I3) is not allowed.
                                       & It must be between 1 and "n" = %(I2).
3099  IMSL_SPLINE_ORDER_ARB_2          The order of the spline in the %(S1)
                                       & direction must be at least one while
                                       & "order" = %(I1) is given.
3100  IMSL_SPLINE_DATA_PTS_XY          The number of data points in the
                                       & %(S1) direction must be at least as
                                       & large as the order of the spline in
                                       & the %(S1) direction while the number
                                       & of data points specified is %(I1)
                                       & and the order is %(I2).
3101  IMSL_KNOT_DATA_INTERLACING       The "i"-th smallest data point
                                       & ("i"=%(I1)) in the %(S1)-direction
                                       & must be in the interval ("knot[i]",
                                       & "knot[i+order]") while the "i"-th
                                       & smallest data point is %(F1),
                                       & "knot[%(I1)]" = %(F2) and
                                       & "knot[%(I2)]" = %(F3).  This
                                       & causes the interpolation matrix to
                                       & be singular.
3102  IMSL_DATA_TOO_LARGE              The largest data point in the %(S1)
                                       & direction must be greater than
                                       & "knot[ndata-1]" and less than
                                       & or equal to
                                       & "knot[ndata+order-1]" while the
                                       & largest data point is %(F1),
                                       & "knot[ndata-1]" = %(F2), and
                                       & "knot[ndata+order-1]" =
                                       & %(F3).  This causes the
                                       & interpolation matrix to be singular.
3103  IMSL_DATA_TOO_SMALL              The smallest data point in the %(S1)
                                       & direction must be greater than or
                                       & equal to "knot[0]" and less than
                                       & "knot[order]" while the smallest data
                                       & point is %(F1), "knot[0]" = %(F2),
                                       & and "knot[order]" = %(F3).
                                       &  This causes the interpolation matrix
                                       & to be singular.
3104  IMSL_SPLINE_CD_FDATA             The column dimension of "fdata" must
                                       & be at least as large as "num_ydata"
                                       & while "col_dim_fdata" = %(I1) and
                                       & "num_ydata" = %(I2) are given.
3105  IMSL_COL_DIM_SUR                 The column dimension of "sur" must be
                                       & at least as large as "ny_out" while
                                       & "sur_col_dim" = %(I1) and "ny_out" =
                                       & %(I2) are given.
3106  IMSL_NEGATIVE_WEIGHTS_2          An element of the weight vector is not
                                       & positive.  All elements must be
                                       & positive.
3107  IMSL_SPLINE_BAD_ORDER_1          The order of the spline must be at
                                       & least 2 while the order given is
                                       & %(I1).
3108  IMSL_IDERIV_NOT_POSITIVE         The order of the derivative must be
                                       & positive while "ideriv" = %(I1) is
                                       & given.
3109  IMSL_NINTV_NOT_POSITIVE          The number of intervals must be at
                                       & least one while "nintv" = %(I1) is
                                       & given.
3110  IMSL_KORDER_NOT_POSITIVE         The order of the interpolating
                                       & polynomial must be positive while
                                       & "korder" = %(I1) is given.
3111  IMSL_X_NOT_POSITIVE              The length of the vector "x" must be
                                       & positive while "nx" = %(i1) is given.
3112  IMSL_Y_NOT_POSITIVE              The length of the vector "y" must be
                                       & positive while "ny" = %(i1) is given.
3113  IMSL_INVALID_RADIAL_STRUCT       The pointer "radial_fit" is invalid.
3114  IMSL_DIM_LESS_THAN_ONE           The dimension specified must be
                                       & greater than zero while
                                       & "dimension" = %(i1) is
                                       & given.
3115  IMSL_NUM_CENTERS_LESS_THAN_ONE   The number of centers specified must be
                                       & greater than zero while
                                       & "num_centers" = %(i1) is
                                       & given.
3116  IMSL_INVALID_CENTERS_POINTER     The pointer to the array of centers,
                                       & "radial_fit->centers", is invalid.
3117  IMSL_INVALID_COEFF_POINTER       The pointer to the array of
                                       & coefficients,
                                       & "radial_fit->coefficients", is
                                       & invalid.
3118  IMSL_INVALID_RAD_FUNC_POINTER    The pointer to the radial function,
                                       & "radial_fit->radial_function", is
                                       & invalid.
3119  IMSL_NUM_POINTS_LESS_THAN_ONE    The number of points at which the fit
                                       & will be evaluated must be greater than
                                       & zero while "n" = %(i1) is given.
3120  IMSL_CENTERS_GT_POINTS           The number of centers must be less than
                                       & or equal to the number of data points
                                       & while "num_centers" = %(i1) and
                                       & "num_points" = %(i2).
3121  IMSL_SEED_NEGATIVE               The random seed must be positive while
                                       & "seed" = %(i1).
3122  IMSL_XVEC_NOT_INCREASING         The X data values must be strictly
                                       & increasing, but "xvec[%(i1)]" = %(r1)
                                       & and "xvec[%(i2)]" = %(r2).
3123  IMSL_XVEC_LENGTH                 The length of xvec must be at least 1
                                       & while "nx" = %(i1) is given.
3124  IMSL_NXVAL_POSITIVE              The number of points xval must be
                                       & greater than or equal to zero, but
                                       & "num_con_pts" = %(i1) is given.
3125  IMSL_NHARD_GT_TOTAL              The number of points involved in the
                                       & hard constraints must be less than
                                       & or equal to the total number of
                                       & points involved in the constraints,
                                       & but "nhard" = %(i2) and the total
                                       & number of is  = %(i1).
3126  IMSL_XVAL_WITHIN_KNOTS           The elements of "constraints.xval" must
                                       & lie within the given knot sequence,
                                       &  while "xknot[korder-1]" = %(r1),
                                       & "contraints[%(i1)].xval" = %(r2), and
                                       & "xknot[%(i2)]" = %(r3) are given.
3127  IMSL_DER_TOO_SMALL               The entries of "constraints.der" must be
                                       & greater than or equal to negative one,
                                       & while "constraints[%(i1)].der" = %(i2)
                                       & is given.
3128  IMSL_BAD_CNSTR_TYPE              The values of "constraints.type" must be
                                       & one of the following: 1, 2, 3, 4, 5,
                                       & 6, 7, 8, 9, 10, 11, 12, 20, or 99,
                                       & while "constraints[%(i2)].itype" =
                                       & %(i1) is given.
3129  IMSL_BAD_RANGE                   For all range constraints, the
                                       & lowerbound must be less than or
                                       & equal to the upperbound, while
                                       & "constraints[%(i3)].bl" = %(r1) and
                                       & "constraints[%(i3)].bu" = %(r2) are
                                       & given.
3130  IMSL_BAD_PERIODIC_DER            The entries of "constraints.der" must be
                                       & greater than or equal to zero when
                                       & setting periodic end conditions,
                                       & while "constaints[%(i1)].type" = %(i2)
                                       & and "constraints[%(i1)].der" = %(i3)
                                       & are given.
3131  IMSL_HALF_CONSTRAINT             The I-th constraint, started at
                                       & "constraints[%(i1)].type", is a
                                       & constraint on the  integral of the
                                       & approximation, while I =
                                       & "num_con_points"-1, thus the second
                                       & half of the constraint is missing.
3132   IMSL_BAD_TYPE_PAIR              The constraint starting at
                                       & "constraints[%(i3)].type" requires
                                       & "constraints[%(i3)].type" =
                                       & "constraints[%(i4)].type" while
                                       & "constraints[%(i3)].type" = %(i1) and
                                       & "constraints[%(i4)].type" = %(i2) are
                                       & given.
3133  IMSL_BAD_INTGR_CNSTR             Constraints on the integral of the
                                       & spline require that "constraints.type"
                                       & be one of 5,6,7,8 or 99, but
                                       & "constraints[%(i1)].der" = -1, and
                                       & "constraints[%(i1)].type" = %(i2) are
                                       & given.
3134  IMSL_BAD_INTGR_RANGE             When constraining the integral of the
                                       & approximation, the left endpoint must
                                       & be less than the right endpoint, but
                                       & "constraints[%(i1)].xval" = %(r1) and
                                       & "constraints[%(i2)].xval" = %(r2) are
                                       & given.
3135  IMSL_BAD_INTGR_DER               Constraints on the integral of the
                                       & approximation require
                                       & "constraints[I].der" =
                                       & "constraints[I+1].der = -1, while
                                       & "constraints[%(i1)].der" = %(i2) and
                                       & "constraints[%(i3)].der" = %(i4) are
                                       & given.
3136  IMSL_ONLY_HALF_CONSTR            The I-th constraint, started at
                                       & "constraints[%(i1)]", is a two point
                                       & constraint while I =
                                       & ("num_con_pts"-1), thus the second
                                       & half of the constraint is missing.
3137  IMSL_DER_GE_ZERO                 Two point constraints require
                                       & "constraints[i].der" to be greater
                                       & than or equal to zero, while the two
                                       & point constraint started at
                                       & "constraints[%(i1)].type" = %(i2) has
                                       & "constraints[%(i3)].der" = %(i4).
3138 IMSL_CONSTR_REMOVED               The fit was obtained after the
                                       & constraints specified in the
                                       & last %(i1) entries of "constraints"
                                       & were removed.
3139  IMSL_NO_FIT_OBTAINED             After removing the soft constraints
                                       & specified in the last %(i2) entries
                                       & of "constraints", the remaining
                                       & system of constraints was
                                       & inconsistent.  The hard constraints
                                       & could not be met, there is no
                                       & solution.
3140  IMSL_WEIGHT_LE_ZERO              All elements of the argument "weight"
                                       & must be greater than zero, but
                                       & "weight[%(i1)]" = %(r1).
3141  IMSL_FCN_DERIV_ORDER             The order of the derivative desired
                                       & "order" = %(i1).  It must be either 1,
                                       & 2, or 3.
3142  IMSL_BGSTEP_GT_ZERO              The beginning step size "stepsize" =
                                       & %(r1).  It must be greater than 0.
3143  IMSL_TOL_GE_ZERO                 The tolerance desired "tolerance" =
                                       & %(r1). It must be at least zero.
3144  IMSL_TOL_GE_ONE                  The tolerance desired "tolerance" =
                                       & %(r1).  When "tolerance" is greater
                                       & than or equal to one, zero can always
                                       & be returned as an answer.
3145  IMSL_ROUNDOFF_DOMINANT           Roundoff error may become dominant with
                                       & "stepsize" = %(r1) and "tolerance" =
                                       & %(r2).  Increase precision, increase
                                       & "tolerance" and/or change "stepsize".
                                       &  The last approximation is returned.
3146  IMSL_TOL_NOT_REACHED             Unable to achieve desired tolerance.
                                       & Increase precision, increase
                                       & "tolerance" = %(r1) and/or change
                                       "stepsize" = %(r2).  If this error
                                       & continues the function may not
                                       & have a derivative at X = %(r3)
3300  IMSL_NDATA_GE_SEVEN              The number of data points must be at
                                       & least 7 while "ndata" = %(i1) is
                                       & given.
3301  IMSL_PROPORTION_PARAM            The proportion parameter must be in the
                                       & range 0.0 to 1.0, inclusive
                                       & while "dis" = %(r1) is given.
3302  IMSL_SC_RANGE                    The stopping criteria must be at
                                       & least 0.0 while "sc" = %(r1) is given.
3303  IMSL_ITMAX_EXCEEDED              Maximum number of iterations limit
                                       & "itmax" = %(i1) exceeded.  The best
                                       & answer found is returned.
4001  IMSL_MAX_SUBINTER_SMALL          The maximum number of subintervals
                                       & "maxsubinter" = %(I1).  It must be
                                       & at least 1.
4002  IMSL_RULE_SMALL                  The quadrature rule "irule" = %(I1).
                                       & It must be in the range 1 to 6.
4003  IMSL_ERR_ABS_SMALL               The absolute error desired
                                       & "err_abs" = %(F1).  It must be at
                                       & least zero.
4004  IMSL_ERR_REL_SMALL               The relative error desired "err_rel"
                                       & = %(F1).  It must be at least zero.
4005  IMSL_ERR_TOL_ZERO                The error tolerance arguments
                                       & "err_abs" and "err_rel" are both equal
                                       & to zero.  At least one of them must
                                       & be greater than zero.
4006  IMSL_ERR_REL_BIG                 The relative error desired "err_rel"
                                       & = %(F1).  When "err_rel" is greater
                                       & than or equal to one zero can always
                                       & be returned as an answer.
4007  IMSL_MAX_SUBINTERVALS            The maximum number of subintervals
                                       & allowed "maxsub" = %(I1) has been
                                       & reached.  Increase "maxsub".
4008  IMSL_ROUNDOFF_CONTAMINATION      Roundoff error has been detected.
                                       & The requested tolerances, 
                                       & "err_abs" = %(F1) and "err_rel" =
                                       & %(F2) cannot be reached.
4009  IMSL_PRECISION_DEGRADATION       Precision is degraded due to too fine
                                       & a subdivision relative to the
                                       & requested tolerance.  This may be
                                       & due to bad integrand behavior in
                                       & the interval (%(F1),%(F2)). Higher
                                       & precision may alleviate this problem.
4010  IMSL_EXTRAPOLATION_ROUNDOFF      Roundoff error has been detected in
                                       & the extrapolation table.  The
                                       & requested tolerances, "err_abs" =
                                       & %(F1) and "err_rel" = %(F2) cannot
                                       & be reached.
4011  IMSL_DIVERGENT                   Integral is probably divergent or
                                       & slowly convergent.
4012  IMSL_INTERVAL_BOUNDS             Invalid choice for "interval".
                                       & Valid choices for
                                       & the variable "interval" include
                                       & "IMSL_INF_BOUND", "IMSL_BOUND_INF",
                                       & and "IMSL_INF_INF".
4013  IMSL_NUM_BREAK_POINTS            The number of break points "%(S1)" =
                                       & %(I1).  It must be at least zero.
4014  IMSL_MAX_MOMENTS_REACHED         The maximum number of moments, "maxcby",
                                       & is equal to %(I1).  It must be at
                                       & least one.
4015  IMSL_WEIGHT_CHOICE               Invalid choice for "weight".  Valid
                                       & choices for the variable "weight"
                                       & include "IMSL_COS" and "IMSL_SIN".
4016  IMSL_MAX_CYCLES_REACHED          The maximum number of cycles "maxcyl" =
                                       & %(I1).  It must be at least 3.
4017  IMSL_BAD_INTEGRAND_BEHAVIOR      Bad integrand behavior occurs within 
                                       & one or more of the cycles.
4018  IMSL_MAX_CYCLES_ACHIEVED         Maximum number of cycles allowed,
                                       & "maxcyl" = %(I1), has been achieved.
4019  IMSL_EXTRAPOLATION_PROBLEMS      Extrapolation table constructed for
                                       & convergence acceleration of the
                                       & series formed by the integral
                                       & contributions of the cycles, does
                                       & not converge to the requested
                                       & accuracy, "err_abs" = %(F1).
4020  IMSL_BAD_WEIGHT_CHOICE           Invalid choice for "weight".  Valid
                                       & choices for the variable "weight"
                                       & include "IMSL_ALG",
                                       & "IMSL_ALG_LEFT_LOG",
                                       & "IMSL_ALG_RIGHT_LOG",
                                       & and "IMSL_ALG_LOG".
4021  IMSL_ALPHA_ARGUMENT              The argument "alpha" = %(F1).  It must
                                       & greater than -1.0.
4022  IMSL_BETA_ARGUMENT               The argument "beta" = %(F1).  It must
                                       & greater than -1.0.
4023  IMSL_INTEGRATION_LIMITS          The limits of integration are "a" =
                                       & %(F1) and "b" = %(F2).  The value of
                                       & the lower limit, "a", must be less
                                       & than "b".
4024  IMSL_C_AND_A_DIFFERENT           Argument "c" and argument "a" both equal
                                       & to %(F1).  They must be different.
4025  IMSL_C_AND_B_DIFFERENT           Argument "c" and argument "b" both equal
                                       & to %(F1).  They must be different.
4026  IMSL_MAX_STEPS_ALLOWED           The maximum number of steps allowed has
                                       & been executed.  The integral is too
                                       & difficult for imsl_f_int_fcn_smooth;
                                       & try imsl_f_int_fcn_sing.
4027  IMSL_NUM_QUADRATURE_POINTS       The number of quadrature points
                                       & "n" = %(I1).  "n" must be at least
                                       & one.
4028  IMSL_DIM_OF_HYPER_REC            The dimension of the hyper-rectangle
                                       & "n" = %(I1).  "n" must be greater than
                                       & zero and less than or equal to twenty.
4029  IMSL_MAX_EIGEN_GT_ZERO           The maximum number of function
                                       & evaluations "max_eval" = %(I1).
                                       & It must be greater than zero.
4030  IMSL_MAX_EVALS_TOO_LARGE         The maximum number of function
                                       & evaluations "max_eval" = %(I1),
                                       & "n" = %(I2).  "maxfcn" was greater
                                       & than 256**n.  It is reset to 256**n.
4031  IMSL_NOT_CONVERGENT              The maximum number of function
                                       & evaluations, "max_evals" = %(I1), and
                                       & convergence has not been attained.
4032  IMSL_RECURRENCE_COEFF            The number of recurrence coefficients
                                       & "n" = %(I1).  It must be at least 1.
4033  IMSL_IWEIGHT_OUT_OF_RANGE        The index of the weight function
                                       & "iweigh" = %(I1).  It must be in the
                                       & range 1 to 7.
4034  IMSL_WEIGHT_FCN_PARAMETER        The parameter in weight function
                                       & "%(S1)" = %(F1).  It must be greater
                                       than -1.0.
4035  IMSL_WRONG_NFIX_VALUE            The number of fixed points "nfix"
                                       & = %(I1).  It must be 0, 1 or 2.
4036  IMSL_NEED_MORE_QUAD_POINTS       The number of quadrature points
                                       & "n" = %(I1) and the number of fixed
                                       & points "nfix" = %(I2).  "n" must be
                                       & greater than "nfix".
4037  IMSL_RECURRENCE_COEFF_C          The recurrence coefficient
                                       & "c(%(I1))" = %(F1).  Each element of
                                       & the vector "c" must be greater than
                                       & zero.
4038  IMSL_FIXED_POINT_LOCATION        Let "i" be the smallest interval
                                       & containing the zeros of the "k"-th
                                       & orthogonal polynomial, where
                                       & k = n-2 = %(I1).  Either one of
                                       & the fixed points in the vector
                                       & "qxfix" lies in "i", or both lie on
                                       & one side of "i".  They must be on
                                       & opposite sides of "i".
4039  IMSL_NO_CONVERGE_100_ITERATIONS  No convergence in 100 iterations.
4040  IMSL_NFIX_CANNOT_EQUAL_TWO       The number of fixed quadrature points
                                       & is 2.  Only 0 or 1 fixed points may
                                       & be specified when using Generalized
                                       & Laguerre weighting.
4041  IMSL_BAD_FIXED_POINT_VALUE       The fixed quadrature point "a" = %(F1).
                                       & The fixed point must be chosen
                                       & less than or equal to zero when
                                       & using Generalized Laguerre weighting.
4042  IMSL_NO_FIXED_POINTS_ALLOWED     Fixed quadrature points have been
                                       & specified.  No fixed points may
                                       & be specified for Hermite or COSH
                                       & weighting.
4043  IMSL_A_MUST_BE_OUTSIDE_INTERVAL  The fixed point, "a" = %(F1), must be
                                       & outside the interval (-1,+1).
4044  IMSL_B_MUST_BE_OUTSIDE_INTERVAL  The fixed point, "b" = %(F1), must be
                                       & outside the interval (-1,+1).
4045  IMSL_A_AND_B_ON_OPPOSITE_SIDES   The fixed points, "a" = %(F1) and "b" =
                                       & %(F2), must be on opposite sides of
                                       & the interval (-1, 1).
5001  IMSL_ODE_T_CHANGED               Independent variable "t" = %(F1) is
                                       & changed from the previous call.
5002  IMSL_ODE_TEND_UNCHANGED          Final point tend = %(F1) is not changed
                                       & from the previous call.
5003  IMSL_ODE_TOO_MANY_EVALS          Completion of the next step would
                                       & make the number of function
                                       & evaluations %(I1), but only %(I2)
                                       & evaluations are allowed.
5004  IMSL_ODE_TOO_MANY_STEPS          Maximum number of steps allowed,
                                       & %(I1), used.  The problem may be
                                       & stiff.
5005  IMSL_HMIN_GT_HMAX                "hmin" = %(F1) is greater than
                                       & "hmax" = %(F2).
5006  IMSL_ODE_FAIL                    Unable to satisfy the error
                                       & requirement.  "tol" = %(F1) may be
                                       & too small.
5007  IMSL_ODE_NEG_NEQ                 The number of equations "neq" = %(I1).
                                       & It must be at least 1.
5010  IMSL_ODE_NEG_TOL                 The tolerance "tol" = %(F1).  It must be
                                       & greater than 0.0.
5011  IMSL_MIN_STEPSIZE_TOO_SMALL      "hmin" = %(F1). The minimum stepsize,
                                       & hmin, must be greater than or
                                       & equal to zero.
5012  IMSL_MAX_STEPSIZE_TOO_SMALL      "hmax" = %(F1). The maximum stepsize,
                                       & "hmax", must be greater than or equal
                                       & to zero.
5013  IMSL_INVALID_IMSL_FLOOR_USAGE    The optional argument "IMSL_FLOOR" may
                                       & only be specified  when norm = 2.
5014  IMSL_INORM_OUTSIDE_OF_RANGE      "inorm" = %(I1). Valid values for inorm
                                       & include 0, 1, 2, and 3.
5015  IMSL_INPUT_MATRIX_A_IS_SINGULAR  The input matrix A is singular.  If
                                       & used, A must be non-singular.
5016  IMSL_INCORRECT_LDA_VALUE_GIVEN   The number of rows of matrix A must
                                       & be less than or equal to its leadin
                                       &g dimension while NLC + NUC + 1 =
                                       & %(i1) and PARAM(20) = LDA = %(r1)
                                       & are given.
5017  IMSL_INCORRECT_LDA_GIVEN         The number of rows of matrix A must
                                       & be less than or equal to its leadin
                                       &g dimension while NUC + 1 = %(i1)
                                       &and PARAM(20) = LDA = %(r1) are given.
5018  IMSL_ARGUMENT_X_CHANGED_VALUE    Argument X = %(r1) is changed from the
                                       & previous call.
5019  IMSL_ARGUMENT_XEND_IS_UNCHANGED  Argument XEND = %(r1) is not changed
                                       & from the previous call.
5020  IMSL_REPEATED_ERR_TEST_FAILURE   After some initial success, the inte
                                       &gration was halted by repeated erro
                                       &r test failures.
5021  IMSL_INTEGRATION_HALTED_1        Integration halted after failing to pass
                                       & the error test, even after reducing
                                       & the stepsize by a factor of 1.0E+10 to
                                       & H = %(r1).  TOL = %(r2) may be too
                                       & small.
5022  IMSL_INTEGRATION_HALTED_2        Integration halted after failing to
                                       & achieve corrector convergence, even
                                       & after reducing the stepsize by a
                                       & factor of 1.0E+10 to H = %(r1).  TOL
                                       & = %(r2) may be too small.
5023  IMSL_TOL_TOO_SMALL_OR_STIFF      On the next step X+H will equal X, with
                                       & X = %(r1) and H = %(r2).  Either TOL =
                                       & %(r3) is too small or the problem is
                                       & stiff.
5027  IMSL_WORKSPACE_REQUIREMENT       The workspace requirement is based on
                                       & NEQ = %(i1), NMETH = %(i2), NPW =
                                       & %(i3).
5028  IMSL_BAD_NCODA_VALUE_GIVEN       NCODA must be greater than or equal to
                                       & zero and less than N while NCODA =
                                       & %(i1) and N = %(i2) are given.
5029  IMSL_NEED_ZERO_LE_NLCA_LT_M      NLCA must be greater than or equal to
                                       & zero and less than M while NLCA =
                                       & %(i1) and M = %(i2) are given.
5030  IMSL_WANT_ZERO_LE_NUCA_LT_N      NUCA must be greater than or equal to
                                       & zero and less than N while NUCA =
                                       & %(i1) and N = %(i2) are given.
5031  IMSL_INCREASE_LDA_VALUE          LDA must be greater than NLCA + NUCA
                                       & while LDA = %(i1), NLCA = %(i2), and
                                       & NUCA = %(i3) are given.
5032  IMSL_IDO_OUT_OF_RANGE            The status indicator "ido" = %(i1).  It
                                       & must be in the range 1 to 7.
5033  IMSL_INVALID_IDO_VALUE           "ido" = 1.  "ido" can only be set to 1
                                       & in the initial call to the routine, or
                                       & if the previous call was made with
                                       & "ido" = 3.
5034  IMSL_INVALID_IDO_VALUE_2         "ido" has been set to %(i1), but the
                                       & routine has not been initialized in a
                                       & call with "ido" = 1.
5036  IMSL_NX_GTE_ONE                  The number of mesh points "nx" = %(i1).
                                       & It must be at least 1.
5037  IMSL_NPDES_GTE_ONE               The number of equations "npdes" = %(i1).
                                       & It must be at least 1.
5038  IMSL_TOL_GT_ZERO                 The tolerance "tol" = %(r1).
                                       & It must be greater than zero.
5039  IMSL_HINIT_NON_NEG               The initial step size "hinit" = %(r1).
                                       & It must be non-negative.
5040  IMSL_LDY_GTE_NPDES               The leading dimension of "y" cannot be
                                       & less than "npdes", but "ldy" = %(i1)
                                       & and "npdes" = %(i2) are given.
5041  IMSL_XBREAK_INCREASING           The array of mesh points "xbreak" must
                                       & be a strictly increasing sequence, but
                                       & "xbreak[%(i1)]" = %(r1) and
                                       & xbreak[%(i2)]" = %(r2) are given.
5042  IMSL_T_CHANGED                   Argument "t" = %(r1) is changed from the
                                       & previous call.
5043  IMSL_INTEGRATION_HALTED_3        After some initial success, the
                                       & integration was by a test on "tol" =
                                       & %(r1).
5044  IMSL_MAJOR_ERROR                 A major error has occured. This point in
                                       & the code should not have been reached,
                                       & as the user-supplied function expected
                                       & by ivpag routines has 4 arguments,
                                       & while the function passed to molch
                                       & routines has 7 arguments.
5045  IMSL_NX_GTE_FOUR                 The number of grid lines "nx" = %(i1).
                                       & It must be at least 4.
5046  IMSL_NY_GTE_FOUR                 The number of grid lines "ny" = %(i1).
                                       & It must be at least 4.
5047  IMSL_IORDER_TWO_OR_FOUR          The order of accuracy "iorder" = %(i1).
                                       &  It must be either 2 or 4.
5048  IMSL_BOUNDARY_COND_ERROR         The boundary condition type
                                       & bc_type(%(i2)) = %(i1). It must be
                                       & either 1, 2, or 3.
5049  IMSL_BX_GT_AX                    The argument "bx" = %(r1) and "ax" =
                                       & %(r2). "bx" must be greater than "ax".
5050  IMSL_BY_GT_AY                    The argument "by" = %(r1) and "ay" =
                                       & %(r2). "by" must be greater than "ay".
5051  IMSL_GRID_SIZE_ERROR             Grid spacing in the X direction is
                                       & %(r1), and in the Y direction it is
                                       & %(r2). The problem must be set up so
                                       & that these are equal.
5052  IMSL_BOUNDARY_ERROR              The left boundary must be less than the
                                       & right boundary, but "xl" = %(R1) and
                                       & "xr" = %(R2).'
5053  IMSL_TAU_GE_ZERO                 The time-smoothing parameter
                                       & "tau" = %(R1) must be greater than
                                       & or equal to zero.
5054  IMSL_KAPPA_GE_ZERO               The spatial-smoothing parameter
                                       & "kappa" = %(R1) must be greater
                                       & than or equal to zero.
5055  IMSL_ALPHA_GT_ZERO               The monitor-regularizing parameter
                                       & "alpha" = %(R1) must be greater
                                       & than zero.
5056  IMSL_M_OUT_OF_RANGE              The space coordinate type "m" = %(I1).
                                       &  It must be in the range 1 to 3.
5057  IMSL_NON_INCR_GRID               Non-increasing grid at T = %(R1).  The
                                       & values of grid points %(I1) and %(I2)
                                       & are %(R1) and %(R2).
5058  IMSL_PDE_USERFCN_ERROR           A user function indicated that a
                                       & solution value is unphysical.
5059  IMSL_ARRAY_NOT_INCREASING        The array of points "%(S1)" must be a
                                       & strictly increasing sequence, but
                                       & %(S1)[%(I1)]=%(R1) and %(S1)[%(I2)]=
                                       & %(R2) are given.
5061  IMSL_INVALID_ATOL_RTOL_SCALAR    "rtol" and "atol" are both 0.0.
5062  IMSL_BOUNDARY_INCONSISTENT       The %(S1) side (%(S2)) boundary
                                       & conditions are inconsistent.
                                       & The values a,b,c are such that
                                       & a*f+ b*f' + c*f'' = d has all values
                                       & of a,b,c = 0 with d != 0.
5064  IMSL_TOO_MUCH_ACCURACY_REQ_1     At t= %(R1), too much accuracy requested
                                       & for machine precision. "rtol" and
                                       & "atol" need to be increased.
5065  IMSL_DEA_TOO_MANY_STEPS_1        At the current t=%(R1), %(I1) steps were
                                       & taken on this call before reaching
                                       & tend=%(R2).
5066  IMSL_ERROR_TEST_FAILURE_1        At t = %(R1) and stepsize H = %(R2), the
                                       &  error test failed repeatedly.
5067  IMSL_CORRECTOR_FAILED_1          At t = %(R1) and stepsize H = %(R2), the
                                       & corrector failed to converge
                                       & repeatedly.
5068  IMSL_CORRECTOR_FAILED_2          At t = %(R1), the corrector failed to
                                       & converge repeatedly with singular
                                       & matrices flagged.
5069  IMSL_CANNOT_COMPUTE_YPR_1        At t = %(R1) and stepsize H = %(R2), the
                                       & initial yprime could not be computed.
                                       & Consider using larger tolerances.
5070  IMSL_T_H_TOUT_INCONSISTENT       With the current t = %(R1) and stepsize
                                       & H = %(R2), the TSTOP = %(R3) is
                                       & inconsistent.
5071  IMSL_CONSTRAINTS_BAND_MATRIX     Code does not handle constraints when
                                       & using a band matrix.
5072  IMSL_NO_CONSTRAINT_CORR_FLAG     Flag not set for computing constraint
                                       & correction as it must be with a user
                                       & defined matrix and constraints.
5073  IMSL_INIT_CONSTR_INCONSISTENT    At the initial point constraints were
                                       & not consistent.
5074  IMSL_CONSTRAINTS_INCONSIS_1      At t = %(r1), with stepsize H = %(r2),
                                       & the constraints appear inconsistent.
                                       & The norm of the residual with maximal
                                       & perturbation of the solution is %(r3)
                                       & and the norm was not reduced below
                                       & %(r4).
5075  IMSL_EVAL_PTS_OUT_OF_BOUNDS      At least one evaluation point in array
                                       & "%(S1)" is outside the limits defined
                                       & by the values in array "%(S2)".
6001  IMSL_SEQUENCE_LENGTH             The length of the sequence "n" = %(I1).
                                       &  It must be at least one.
6002  IMSL_REQ_ARGUMENT_IS_NULL        The required argument "%(S1)" is NULL.
6003  IMSL_NEED_NCA_GT_ZERO            The number of columns of A must be
                                       & greater than zero, while "nca" =
                                       & %(I1) is given.
6004  IMSL_NEED_NRA_GT_ZERO            The number of rows of "a" must be
                                       & greater than zero, while "nra" =
                                       & %(I1) is given.
6005  IMSL_NEED_NRCOEF_GT_ZERO         The number of rows of "coef" must be
                                       & greater than zero, while "nrcoef" =
                                       & %(I1) is given.
6006  IMSL_NEED_NCCOEF_GT_ZERO         The number of columns of "coef" must
                                       & be greater than zero, while "nccoef" =
                                       & %(I1) is given.
6007  IMSL_LDA_IS_LT_NRCOEF            The leading dimension of "a" must be
                                       & greater than or equal to the number
                                       & of rows of "coef", while "lda" = %(I1)
                                       & and "nrcoef" = %(I2) are given.
6008  IMSL_LDCOEF_IS_LT_NRCOEF         The leading dimension of "coef" must be
                                       & greater than or equal to the number
                                       & of rows of "coef", while "ldcoef" =
                                       & %(I1) and "nrcoef" = %(I2) are given.
7001  IMSL_NO_CONVERGE_MAX_ITER        Failure to converge within
                                       & "max_itn" = %(I1) iterations for at
                                       & least one of the "nroot" = %(I2)
                                       & roots.
7002  IMSL_POLYNOMIAL_DEGREE           The degree of the polynomial must be
                                       & less than 100 and greater than zero.
                                       & "ndeg" is given as %(I1).
7003  IMSL_ZERO_COEFF_1                The leading coefficient of the
                                       & polynomial is equal to zero.  The
                                       & last root will be set to
                                       & ("infinity",0.0) where "infinity"
                                       & is the largest machine constant.
7004  IMSL_ZERO_COEFF                  The %(I1) leading coefficients of the
                                       & polynomial are equal to zero.
                                       & The last %(I2) roots will be set
                                       & to ("infinity",0.0) where "infinity"
                                       & is the largest machine constant.
7005  IMSL_FEWER_ZEROS_FOUND           Only %(I1) roots were found.  The
                                       & "root" vector will contain the value
                                       & for machine infinity in the last
                                       & %(I2) locations.
7006  IMSL_POLYNOMIAL_DEGREE_50        The degree of the polynomial must be
                                       & less than 50 and greater than zero.
                                       & "ndeg" is given as %(I1).
7008  IMSL_NUMBER_EQUN_UNKN_LT_1       The argument "n" = %(I1).  The number
                                       & of equations to be solved and the
                                       & number of unknowns must be at least
                                       & equal to 1.
7009  IMSL_ERRREL_LESS_THAN_ZERO       The argument "err_rel" = %(F1).  The
                                       & bound for the relative error should be
                                       & at least equal to 0.
7010  IMSL_ITMAX_LESS_THAN_ZERO        The argument "max_itn" = %(I1).  The
                                       & maximum number of iterations must
                                       & be at least one.
7011  IMSL_TOO_MANY_FCN_EVALS          The number of calls to the function
                                       & has exceeded "max_itn"*("n"+1) =
                                       & %(I1). The user may try a new initial
                                       & guess.
7012  IMSL_NO_BETTER_POINT             The bound for the relative error,
                                       & "err_rel" = %(F1), is too small.  No
                                       & further improvement in the
                                       & approximate solution is possible.
                                       & The user should increase "err_rel".
7013  IMSL_NO_PROGRESS                 The iteration has not made good
                                       & progress. The user may try a new
                                       & initial guess.
7014  IMSL_NO_ZERO_W_GUESS             The zero cannot be determined using
                                       & an initial guess of "xguess" = %(F1).
8001  IMSL_MIN_AT_BOUND                The final value for "x" is at a bound.
8003  IMSL_NEED_A_LE_XGUESS_LE_B       The initial guess must lie between "a"
                                       & and "b", while "a" = %(F1), "xguess" =
                                       & %(F2) and "b" = %(F3) are given.
8004  IMSL_MIN_AT_LOWERBOUND           The final value of "x" is at the
                                       & lower bound.
8005  IMSL_MIN_AT_UPPERBOUND           The final value of "x" is at the
                                       & upper bound.
8006  IMSL_STEP_TOLERANCE              Scaled step tolerance satisfied; the
                                       & current point may be an approximate
                                       & local solution, or the algorithm is
                                       & making very slow progress and is not
                                       & near a solution, or "step_tol" is
                                       & too big.
8007  IMSL_LINEAR_CONSTRAINT_VALUE     The number of linear constraints,
                                       & "m" = %(I1), must be at least 0.
8008  IMSL_NEQ_CANNOT_BE_GT_NCON       The number of linear equality 
                                       & constraints, "meq" = %(I1), cannot be
                                       & greater than the number of constraints
                                       & "m" = %(I2).
8009  IMSL_NO_MORE_PROGRESS            Due to the effect of computer rounding
                                       & error, a change in the variables fail
                                       & to improve the objective function
                                       & value. Usually the solution is close
                                       & to optimum.
8010  IMSL_SYSTEM_INCONSISTENT         The system of equations is inconsistent.
                                       & There is no solution.
8011  IMSL_NEG_CONSTRAINT_VALUE        The number of constraints must be
                                       & positive, yet "m" = %(I1) is given.
8014  IMSL_BOUNDS_INCONSISTENT         The bounds given for "%(S1)[%(I1)]"
                                       & are inconsistent:  "%(S2)[%(I1)]"
                                       & = %(F2) must not exceed
                                       & "%(S3)[%(I1)]" = %(F3).
8015  IMSL_WRONG_CONSTRAINT_TYPE       The values for the type of constraint
                                       & must be either 0, 1 or 2, yet
                                       & "irtype(%(I1))" = %(I2) is given.
8016  IMSL_PROB_UNBOUNDED              The problem is unbounded.
8017  IMSL_TOO_MANY_ITN                Maximum number of iterations exceeded.
8018  IMSL_PROB_INFEASIBLE             The problem is infeasible.
8019  IMSL_NUMERIC_DIFFICULTY          Numerical difficulty occurred; using
                                       & double precision may help.
8020  IMSL_N_MUST_BE_POSITIVE          The number of variables must be positive
                                       & while "n" = %(I1) is given.
8021  IMSL_NONNEGATIVE_CONSTRAINTS     The number of constraints must be
                                       & nonnegative while "m" = %(I1) is
                                       & given.
8022  IMSL_WRONG_IBTYPE_VALUE          The bounds indicator must be equal
                                       & to 0, 1, 2, or 3 while "ibtype" =
                                       & %(I1) is given.
8023  IMSL_XSCALE_DIAGONAL_LT_ZERO     The values for the diagonal scaling
                                       & matrix, "xscale", must be greater
                                       & than zero.  "xscale[%(I1)]"  = %(F1)
                                       & was given.
8024  IMSL_UPHILL_DIRECTION            The algorithm calculated an uphill
                                       & search direction.
8025  IMSL_TOO_MANY_LINESEARCH         The line search used  more than
                                       & %(I1) function calls, therefore it
                                       & has been declared unsuccessful.
8026  IMSL_NO_PROGRESS_MADE            The search direction is close to zero.
8027  IMSL_QP_INCONSISTENT             The constraints for the QP subproblem
                                       & are inconsistent.
8029  IMSL_TOO_MANY_FCN_EVAL           Maximum number of function
                                       & evaluations exceeded.
8030  IMSL_TOO_MANY_GRAD_EVAL          Maximum number of gradient
                                       & evaluations exceeded.
8031  IMSL_TOO_MANY_HESSIAN_EVAL       Maximum number of Hessian
                                       & evaluations exceeded.
8032  IMSL_UNBOUNDED                   Five consecutive steps of length
                                       & "max_step" have been taken; either
                                       & the function is unbounded below,
                                       & or has a finite asymptote in some
                                       & direction or the maximum allowable
                                       & step size "max_step" is too small.
8034  IMSL_INEFFICIENT_PROB_SIZE       This routine may be inefficient
                                       & for a problem of size "n" = 1.
8035  IMSL_SCALING_WITH_IDENT_MATRIX   The diagonal scaling matrix for
                                       & the variables must be positive while
                                       & some of the entries are less than
                                       & or equal to zero.  The algorithm
                                       & will use the identity scaling matrix
                                       & for "xscale".
8039  IMSL_MAXGRAD_VALUE_TOO_SMALL     The maximum number of gradient
                                       & evaluations must be positive
                                       & while "max_grad" = %(I1) is given.
                                       & The algorithm will use "max_grad" =
                                       & 400.
8040  IMSL_MAXHES_VALUE_TOO_SMALL      The maximum number of Hessian
                                       & evaluations must be positive
                                       & while "max_hes" = %(I1) is given.
                                       & The algorithm will use "max_hes" =
                                       & 100.
8041  IMSL_FSCALE_VALUE_TOO_SMALL      The estimate of the scale of the
                                       & objective function must be positive
                                       & while "fscale" = %(F1) is given.  The
                                       & algorithm will use "fscale" = 1.0.
8049  IMSL_NO_FURTHER_PROGRESS         The last global step failed to locate
                                       & a lower point than the current X
                                       & value.  The current X may be an
                                       & approximate local minimizer and no
                                       & more accuracy is possible or the
                                       & step tolerance may be too large where
                                       & "step_tol" = %(F1) is given.
8050  IMSL_REL_FCN_TOLERANCE           Relative function convergence - Both
                                       & the actual and predicted relative
                                       & reductions in the function are less
                                       & than or equal to the relative
                                       & function convergence tolerance
                                       & "rfcn_tol" = %(F1).
8051  IMSL_FALSE_CONVERGENCE           False convergence - The iterates
                                       & appear to be converging to a
                                       & noncritical point.  Possibly
                                       & incorrect gradient information
                                       & is used, or the function is
                                       & discontinuous, or the other
                                       & stopping tolerances are too tight.
8052  IMSL_WRONG_EPSFCN_VALUE          The estimate for the relative noise
                                       & in the function must be between 0.0
                                       & and 0.1 while "epsfcn" = %(F1) is
                                       & given.
8053  IMSL_POS_XSCALE_ELMNTS_NEEDED    The values for the diagonal scaling
                                       & matrix must be positive while
                                       & "xscale(%(I1))" = %(F1) is given.
8054  IMSL_NEED_POSITIVE_NUM_FCNS      The number of functions must be positive
                                       & while "m" = %(I1) is given.
8057  IMSL_TOO_MANY_VARIABLES          The number of variables must be less
                                       & than or equal to the number of
                                       & functions while "n" = %(I1) and
                                       & "m" = %(I2) are given.
8058  IMSL_NEGATIVE_STEP_TOL           The step tolerance must be nonnegative
                                       & while "step_tol" = %(F1) is given.
                                       &  The algorithm will use "step_tol"
                                       & = %(F2).
8059  IMSL_NEGATIVE_REL_FCN_TOL        The relative function tolerance must
                                       & be nonnegative while "rfcn_tol" =
                                       & %(F1) is given.  The algorithm will
                                       & use "rfcn_tol" = %(F2). 
8060  IMSL_NEGATIVE_FALSE_CONV_TOL     The false convergence tolerance must
                                       & be nonnegative while "falstol" = %(F1)
                                       & is given.  The algorithm will
                                       & use "falstol" = %(F2).
8061  IMSL_NEGATIVE_ABS_FCN_TOL        The absolute function tolerance must
                                       & be nonnegative while "afcn_tol" =
                                       & %(F1) is given.  The algorithm will
                                       & use "afcn_tol" = %(F2).
8062  IMSL_NEED_NONNEGATIVE_STEPMX     The maximum allowable scaled step
                                       & length must be positive while
                                       & "max_step" = %(F1) is given.  The
                                       & algorithm will use "max_step" =
                                       & %(F2).
8063  IMSL_NEED_NONNEGATIVE_DELTA      The initial trust region radius must
                                       & be positive while "trust_region" =
                                       & %(F1) is given.  The algorithm will
                                       & use the length of the initial scaled
                                       & Cauchy step for "trust_region".
8064  IMSL_LITTLE_FCN_CHANGE           Relative function convergence - Both
                                       & the scaled actual and predicted
                                       & reductions in the function are less
                                       & than or equal to the relative
                                       & function convergence tolerance
                                       & "rfcn_tol" = %(F1).
8065  IMSL_TOO_MANY_JACOBIAN_EVAL      Maximum number of Jacobian evaluations
                                       & exceeded.
8066  IMSL_NEED_POSITIVE_XSCALE_ELEM   The values for the scaling matrix,
                                       & "xscale", must be positive while
                                       & at least one entry is less
                                       & than or equal to zero. The
                                       & algorithm will use the identity
                                       & scaling matrix for "xscale".
8067  IMSL_NEED_POSITIVE_FSCALE_ELEM   The values for the diagonal matrix,
                                       & "fscale", must be positive while at
                                       & least one entry is less than or
                                       & equal to zero. The algorithm will
                                       & use the identity scaling matrix
                                       & for "fscale".
8068  IMSL_NEED_POSITIVE_NDIGIT        The estimate of the number of good
                                       & digits in the functions must be
                                       & positive while "ndigit" = %(I1) is
                                       & given. The algorithm will assume
                                       & that the function is accurate to
                                       & the precision of the arithmetic.
8069  IMSL_NEED_POSITIVE_MXITER        The maximum number of iterations must
                                       & be positive while "max_itn" = %(I1)
                                       & is given.  The algorithm will use
                                       & "max_itn" = 100.
8070  IMSL_NEED_POSITIVE_MAXFCN        The maximum number of function
                                       & evaluations must be positive while
                                       & "max_fcn" = %(I1) is given.  The
                                       & algorithm will use "max_fcn" = 400.
8071  IMSL_NEED_POSITIVE_MAXJAC        The maximum number of Jacobian
                                       & evaluations must be positive while
                                       & "max_jacobian" = %(I1) is given.  The
                                       & algorithm will use "max_jacobian" =
                                       & 100.
8072  IMSL_NEED_POSITIVE_GRADTL        The gradient tolerance must be
                                       & nonnegative while "grad_tol" = %(F1)
                                       & is given.  The algorithm will
                                       & use "grad_tol" = %(F2).
8080  IMSL_NVAR_NEED_POSITIVE          The number of variables "nvar" = %(I1).
                                       & It must be greater than zero.
8081  IMSL_CONDITIONS_VIOLATED         A condition on "nvar" = %(I3), "neq"
                                       & = %(I2) or "ncon" = %(I1)
                                       & is violated.
8082  IMSL_NCON_NOT_NEGATIVE           The number of linear constraints
                                       & "ncon" = %(I1). It must be at
                                       & least zero.
8083  IMSL_NEQ_NOT_NEGATIVE            The number of linear equality
                                       & constraints "neq" = %(I1). It must
                                       & be greater than or equal to zero.
8084  IMSL_NEQ_LESS_EQUAL_NCON         The number of linear equality
                                       & constraints "neq" = %(I1) is greater
                                       & than the number of linear constraints
                                       & "ncon" = %(I2). "neq" must be less
                                       & than or equal to "ncon".
8085  IMSL_ACC_NOT_NEGATIVE            The first order tolerance "acc" =
                                       & %(F1). It must be greater than or
                                       & equal to zero.
8086  IMSL_XLB_LESS_XUB                The bounds given for x(%(I1)) are
                                       & inconsistent: xlb(%(I1)) = %(F2)
                                       & must not exceed xub(%(I1)) = %(F3).
8087  IMSL_MAXFCN_NOT_NEGATIVE         The maximum number of function
                                       & evaluations "maxfcn" = %(I1). It
                                       & must be greater than zero.
8088  IMSL_X_FEASIBLE_ACC_SATISFIED    "x" is feasible and the condition
                                       & that depends on "acc" is satisfied.
8089  IMSL_X_FEASIBLE_ROUND_ERROR      "x" is feasible but rounding errors
                                       & are preventing further progress.
8090  IMSL_X_FEASIBLE_FUNCTION_FAILS   "x" is feasible but the objective
                                       & function fails to decrease. Using
                                       & double precision may help.
8091  IMSL_CONSTRAINTS_INCONSISTENT    The equality constraints are
                                       & inconsistent.
8092  IMSL_VAR_BOUNDS_INCONSISTENT     The equality constraints and the
                                       & bounds on the variables are found
                                       & to be inconsistent.
8093  IMSL_CONSTRAINTS_NOT_SATISFIED   No vector X satisfies all of the
                                       & constraints.  Specifically, the
                                       & current active constraints prevent
                                       & any change in X that reduces the
                                       & sum of constraint violations.
8094  IMSL_FCN_EVAL_EXCEEDED_MAXFCN    Number of function evaluations
                                       & exceeded "maxfcn" = %(I1).
8095  IMSL_L2ONF_EQUALITY_CONSTRAINTS  "l2onf" finds that the variables
                                       & are determined by the equality
                                       & constraints.
8096  IMSL_L2ONG_EQUALITY_CONSTRAINTS  "l2ong finds that the variables
                                       & are determined by the equality
                                       & constraints.
8097  IMSL_MISSING_FILENAME            Argument filename is NULL.
8098  IMSL_MPS_READ_ERROR              Error reading input file at line %(I1).
8099  IMSL_MPS_MISSING_SECTION_TITLE   Missing section title at line %(I1).
8100  IMSL_MPS_MISSING_OBJECTIVE       No objective coefficients found.
                                       & Objective row name "%(S1)".
8101  IMSL_MPS_MISSING_RHS_VALUES      No RHS values found. RHS set name
                                       & "%(S1)".
8102  IMSL_MPS_MISSING_RANGES_VALUES   No range values found. RANGES set name
                                       & "%(S1)".
8103  IMSL_MPS_MISSING_BOUNDS_VALUES   No bounds found. BOUNDS set name is
                                       & "%(S1)".
8104  IMSL_MPS_UNEXPECTED_SECTION_NAM  Unexpected section name "%(S1)" at line
                                       & %(I1).
8105  IMSL_MPS_UNEXPECTED_SECTION      Unexpected section "%(S1)" header at
                                       & line %(I1).
8106  IMSL_MPS_UNKNOWN_ROW_TYPE        Unknown row type: "%(S1)" at line %(I1).
8107  IMSL_MPS_MARKER_ORDER            Out-of-order marker "%(S1)" at line
                                       & %(I1).
8108  IMSL_MPS_UNKNOWN_MARKER          Unknown marker type "%(S1)" at line
                                       & %(I1).
8109  IMSL_MPS_UNKNOWN_COLUMN          Unknown column name "%(S1)" at line
                                       & %(I1).
8110  IMSL_MPS_UNKNOWN_ROW             Unknown row name "%(S1)" at line %(I1).
8111  IMSL_MPS_BAD_NUMBER              Invalid number "%(S1)" at line %(I1).
8112  IMSL_MPS_BAD_FILENAME            Cannot open file "%(S1)".
8113  IMSL_MPS_UNKNOWN_BND_TYPE        Unknown bound type: "%(S1)" at line
                                       & %(I1).
8114  IMSL_NO_JTJ_INVERSE              J'J inverse cannot be computed for final
                                       & Jacobian J. Output array "jtj_inv" is
                                       & set to zeros.
9001  IMSL_CHEBY_NEG_TERMS             The number of terms in the series is
                                       & not positive. "n" = %(I1).
9002  IMSL_CHEBY_TOO_MANY_TERMS        The number of terms in the series is
                                       & greater than 1000. "n" = %(I1).
9003  IMSL_CHEBY_RANGE                 The argument X = %(F1) is outside the
                                       & interval (-1.1,+1.1).
9004  IMSL_CHEBY_EVAL_TERMS            The number of coefficients is less
                                       & than 1. "nos" = %(I1)."
9005  IMSL_CHEBY_EVAL_TOL              Too much accuracy may be requested.
                                       & "eta" should be increased.
9006  IMSL_NEGATIVE_INTEGER            The argument for the function can
                                       & not be a negative integer. Argument
                                       & "x" = %(F1).
9008  IMSL_F_INVERSE_OVERFLOW          Upon modifying the inverse value for
                                       & the F distribution from the value
                                       & obtained from IMSL inverse Beta
                                       & distribution, imsl_beta_inverse,
                                       & overflow would
                                       & occur.  Therefore, the value is set
                                       & to machine infinity.
9009  IMSL_LARGE_ARG_OVERFLOW          The function overflows because "x" =
                                       & %(F1) is greater than %(F2).
9010  IMSL_X_AND_A_ARE_TOO_LARGE       Since X = %(F1) and A = %(F2) are so
                                       & large, the algorithm would overflow.
9011  IMSL_ZERO_ARG_OVERFLOW           The function overflows because "x"
                                       & = %(F1) is too close to zero.
9012  IMSL_SMALL_ARG_OVERFLOW          The function overflows because "x" =
                                       & %(F1) is less than %(F2).
9013  IMSL_LARGE_ABS_ARG_OVERFLOW      The function overflows because
                                       & |%(F1)| is greater than %(F2).
9014  IMSL_SMALL_ARG_UNDERFLOW         The function underflows because "x"
                                       & = %(F1) is less than %(F2). The
                                       & result is set to zero.
9015  IMSL_LARGE_ARG_UNDERFLOW         The function underflows because "x"
                                       & = %(F1) is greater than %(F2).  The
                                       & result is set to zero.
9017  IMSL_SMALL_ABS_ARG_UNDERFLOW     The function underflows because
                                       & |%(F1)| is less than %(F2).  The
                                       & result is set to zero.
9018  IMSL_BETA_UNDERFLOW              The function underflows because "x" =
                                       & %(F1) and/or "y" = %(F2) is too large.
9020  IMSL_NEAR_NEG_INT_WARN           The result is accurate to less than
                                       & one half precision because "x" = %(F1)
                                       & is too close to a negative integer.
9021  IMSL_NEAR_NEG_INT_FATAL          The argument for the function can
                                       & not be a negative integer. Argument
                                       & "x" = %(F1).
9022  IMSL_CANNOT_FIND_XMIN            Unable to determine the value of "xmin".
9023  IMSL_CANNOT_FIND_XMAX            Unable to determine the value of "xmax".
9024  IMSL_ARG_ZERO                    The argument for the function can
                                       & not be zero.
9025  IMSL_LARGE_ABS_ARG_WARN          The result is accurate to less than
                                       & one half precision because |%(F1)|
                                       & is greater than %(F2).
9026  IMSL_LARGE_ABS_ARG_FATAL         All precision is lost.  |%(F1)| must
                                       & be less than %(F2).
9027  IMSL_NON_POSITIVE_ARGUMENT       "x" = %(F1) must be greater than zero.
9029  IMSL_LARGE_ARG_WARN              The result is accurate to less than
                                       & one half precision because %(F1) is
                                       & greater than %(F2).
9030  IMSL_ERF_ALGORITHM               Sufficiently accurate result was not
                                       &  achieved. An algorithmic problem
                                       & exists.
9031  IMSL_BETA_NEG_ARG                Both "x" = %(F1) and "y" = %(F2) must be
                                       & greater than zero.
9032  IMSL_FIRST_ARG_LT_ZERO           The first argument for the function
                                       & must be greater than zero. Argument
                                       & "a" = %(F1).
9033  IMSL_SECOND_ARG_LT_ZERO          The second argument for the function
                                       & must be greater than or equal to
                                       & zero. Argument X = %(F1).
9034  IMSL_NO_CONV_200_TS_TERMS        The function did not converge in 200
                                       & terms of Taylor series.
9035  IMSL_NO_CONV_200_CF_TERMS        The function did not converge in 200
                                       & terms of continued fraction.
9036  IMSL_NEED_ZERO_LT_X_LE_A         "x" = %(F1) must be greater than zero
                                       & and less than or equal to "a" = %(F2).
9037  IMSL_LT_HALF_ACCURATE            The result is accurate to less than
                                       & one half precision.
9038  IMSL_BOTH_ARGS_ARE_LT_ZERO       Both arguments for the function must
                                       & be greater than zero.
9039  IMSL_X_IS_LESS_THAN_MINUS_1      The argument X = %(F1) must be greater
                                       & than -1.0.
9040  IMSL_X_IS_TOO_CLOSE_TO_NEG_1     The result is accurate to less than one
                                       & half precision because "x" = %(F1) is
                                       & too close to -1.0.  "x" must be
                                       & greater than %(F2).
9041  IMSL_NEED_ZERO_LT_P_LT_ONE       The argument to the function must be
                                       & greater than 0.0 and less than 1.0.
                                       & "p" = %(F1).
9042  IMSL_DF_MUST_BE_AT_LEAST_ONE     The input number of degrees of freedom,
                                       & "df" = %(F1), must be at least one.
9043  IMSL_P_OUTSIDE_OPEN_INTERVAL     The input probability value, "p" =
                                       & %(F1), must be in the open interval
                                       & (0, 1).
9044  IMSL_PIN_MUST_BE_POSITIVE        The first parameter of the imsl_beta
                                       & distribution, "pin" = %(F1), must be
                                       & positive.
9045  IMSL_QIN_MUST_BE_POSITIVE        The second parameter of the imsl_beta
                                       & distribution, "qin" = %(F1), must be
                                       & positive.
9046  IMSL_P_OUTSIDE_EXCLUSIVE_INT     The probability which the inverse of
                                       & the imsl_beta distribution is based
                                       & on, "p" = %(F1), must be in the
                                       & exclusive interval (0.0, 1.0).
9047  IMSL_BEST_BETIN_APPROXIMATION    beta_inverse for the value "p" = %(F1)
                                       & could not
                                       & be found in 100 iterations of Newton's
                                       & method.  The best approximation
                                       & calculated is beta_inverse = %(F2).
9048  IMSL_DFN_OR_DFD_IS_NEGATIVE      The input value for the numerator or
                                       & denominator degrees of freedom for
                                       & the F distribution, "dfn" = %(F1),
                                       & "dfd" = %(F2), must be positive.
9051  IMSL_DF_MUST_BE_GE_POINT_5       The degrees of freedom, "df" = %(F1),
                                       & must be greater than or equal to 0.5.
9052  IMSL_UNABLE_TO_BRACKET_VALUE     Unable to bracket the value of the
                                       & inverse noncentral imsl_chi-squared
                                       & at "p" = %(F1), with parameters
                                       & "df" = %(F2) and "alam" = %(F3).
9053  IMSL_CHI_2_INV_CDF_CONVERGENCE   Over 100 iterations have occurred
                                       & without convergence.  Convergence
                                       & is assumed.
9054  IMSL_LESS_THAN_ZERO              Since "k" = %(I1) is less than zero,
                                       & the distribution function
                                       & is set to zero.
9055  IMSL_ARG_LESS_THAN_ZERO          Since "%(S1)" = %(F1) is less than zero,
                                       & the distribution function is zero
                                       & at "%(S1)".
9056  IMSL_SHAPE_PARAMETER_NEGATIVE    The shape parameter of the imsl_gamma
                                       & distribution must be positive.
9058  IMSL_NEED_N_GREATER_THAN_ZERO    "n" must be greater than zero, "n" =
                                       & %(I1).
9059  IMSL_BAD_PROBABILITY_VALUE       "p" = %(F1), but "p" must be nonnegative
                                       & and no greater than 1.0, since "p" is
                                       & a probability. Distribution function
                                       & is set to zero.
9060  IMSL_GREATER_THAN_N              Since "k" = %(I1) is greater than
                                       & "n" = %(I2), the distribution function
                                       & is set to 1.0.
9061  IMSL_NEED_ARGUMENT_GT_ZERO       The sample size and the number of
                                       & defectives must be greater than zero.
                                       & Sample size = %(I1).  Number of
                                       & defectives = %(I2).
9062  IMSL_LOT_SIZE_TOO_SMALL          The lot size must be greater than
                                       & the sample size and the number of
                                       & defectives in the lot.  Lot size
                                       & = %(I1).  Sample size  = %(I2).
                                       & Number of defectives in the lot
                                       & = %(I3).
9063  IMSL_K_GREATER_THAN_N            Since the argument to the function is
                                       & greater than the sample size, the
                                       & probability is set to 1. Argument
                                       & = %(I1). Sample size = %(I2).
9064  IMSL_THETA_MUST_BE_POSITIVE      The mean of the Poisson distribution,
                                       & "theta" = %(F1), must be positive.
9066  IMSL_PRESENT_VALUE_BIG           The present value cannot be calculated
                                       & using "nper" = %(I1) and "rate" =
                                       & %(F1). The function overflows.
9067  IMSL_PRESENT_VALUE_SMALL         The present value cannot be calculated
                                       & using "nper" = %(I1) and "rate" =
                                       & %(F1).  A divide by zero occurs.
9068  IMSL_PRESENT_VALUE_BIG2          The present value cannot be calculated.
9069  IMSL_COMPLEX_ABS_VALUE_1         The complex absolute value of the
                                       & input argument, Z = %(r1), is greater
                                       & than the square root of machine
                                       & infinity, %(r2).  The function is set
                                       & to 0.
9070  IMSL_LARGE_VALUE_EXP_FCN         The value Y*Y - X*X is too large for the
                                       & exponential function, %(r1). The value
                                       & for the error function will be set to
                                       & machine infinity.  Y = AIMAG(Z).
                                       &  X = REAL(Z). The argument Z = %(c1).
9080  IMSL_COT_1                       Error while calculating the cotangent.
                                       & All precision is lost. fabs(%(r1))
                                       & must be less than %(r2).
9081  IMSL_COT_2                       Error while calculating the cotangent.
                                       & The function overflows because
                                       & fabs(%(r1)) is less than %(r2).
9082  IMSL_COT_3                       Error while calculating the cotangent.
                                       & The result is accurate to less than
                                       & one half precision because
                                       & fabs(%(r1)) is too large or because
                                       & "x" is nearly a multiple of pi.
9083  IMSL_COT_4                       Error while calculating the cotangent.
                                       "x" = %(r1) can not be a multiple of pi.
10001 IMSL_FORMAT_INVALID              The specified format is an invalid
                                       & format string: "fmt" = "%(S1)".
10002 IMSL_FORMAT_INVALID_CONV         A character which is not a valid
                                       & conversion specification character
                                       & for this data type has been
                                       & encountered in a format string.
                                       & "fmt" = "%(S1)".
10003 IMSL_FORMAT_NO_CONV              A format with no conversion
                                       & specification has been encountered.
                                       &  The format is "fmt" = "%(S1)".
10004 IMSL_FORMAT_STAR                 A conversion specification with a '*'
                                       & for a field width is not allowed.
                                       & "fmt" = "%(S1)".
10005 IMSL_FORMAT_WIDE_FIELD           A field width greater than 40 has
                                       & been encountered.  All field widths
                                       & must be 40 or less.  "fmt" = "%(S1)"
10006 IMSL_FORMAT_TOO_NARROW           The number of significant digits to
                                       & be printed is greater than the field
                                       & width.  This conversions
                                       & specification is not allowed.
                                       & "fmt" = "%(S1)"
10007 IMSL_FORMAT_BAD_CONV             An invalid conversion specification
                                       & has been encountered, "fmt" = "%(S1)".
10008 IMSL_FORMAT_TOO_WIDE             A page width of %(I1) was retrieved
                                       & via IMSL routine imsl_page.  The
                                       & format, "fmt", contains a field
                                       & width of %(I3).  Either the
                                       & largest field width in "fmt" must
                                       & be decreased or the page width
                                       & increased to at least %(I2) by
                                       & a call to imsl_page.
10009 IMSL_NARROW_PAGE                 A page width of %(I1) was retrieved
                                       & via IMSL routine imsl_page.  The page
                                       & width must be increased to at least
                                       & %(I2) by a call to imsl_page.
10010 IMSL_WIDE_PAGE                   A page width of %(I1) was retrieved
                                       & via IMSL routine imsl_page.  The page
                                       & width must be reset to no greater
                                       & than 255 by a call to imsl_page.
10011 IMSL_ZERO_LINE                   The length for an output line must
                                       & be greater than zero.
10012 IMSL_LONG_TITLE                  The title message length is too long.
                                       & Maximum length of a title is 255
                                       & characters.
10013 IMSL_MUT_EXC_PRINT_OPTIONS       The options "IMSL_PRINT_ALL",
                                       & "IMSL_PRINT_UPPER", 
                                       & "IMSL_PRINT_LOWER",
                                       & "IMSL_PRINT_UPPER_NO_DIAG", and 
                                       & "IMSL_PRINT_LOWER_NO_DIAG" are
                                       & mutually exclusive options.  Only one
                                       & can be specified in a single
                                       & invocation of this routine.
10014 IMSL_MUT_EXC_ROW_LABEL_OPT       The options "IMSL_ROW_LABEL",
                                       & "IMSL_NO_ROW_LABEL", and
                                       & "IMSL_ROW_NUMBER_ZERO" are mutually
                                       & exclusive in a single invocation of
                                       & this routine.
10015 IMSL_MUT_EXC_COL_LABEL_OPT       The options "IMSL_COL_LABEL",
                                       & "IMSL_NO_COL_LABEL", and
                                       & "IMSL_COL_NUMBER_ZERO" are mutually
                                       & exclusive options.  Only one can
                                       & be specified in a single invocation
                                       & of this routine.
10016 IMSL_MUT_EXC_COV_OPTIONS         The options
                                       & "IMSL_VARIANCE_COVARIANCE_MATRIX",
                                       & "IMSL_CORRECTED_SSCP_MATRIX",
                                       & "IMSL_CORRELATION_MATRIX", and
                                       & "IMSL_STDEV_CORRELATION_MATRIX" are
                                       & mutually exclusive options.  Only one
                                       & can be specified in a single
                                       & invocation of this routine.
10017 IMSL_MUT_EXC_TIE_OPTION          The options "IMSL_AVERAGE_TIE",
                                       & "IMSL_HIGHEST", "IMSL_LOWEST", and
                                       & "IMSL_RANDOM_SPLIT" are mutually
                                       & exclusive options.  Only one can be
                                       & specified in a single invocation of
                                       & this routine.
10018 IMSL_MUT_EXC_SCORE_OPTION        The options "IMSL_RANKS",
                                       & "IMSL_BLOM_SCORES",
                                       & "IMSL_TUKEY_SCORES",
                                       & "IMSL_VAN_DER_WAERDEN_SCORES",
                                       & "IMSL_EXPECTED_NORMAL_SCORES",
                                       & and "IMSL_SAVAGE_SCORES" are mutually
                                       & exclusive options.  Only one can
                                       & be specified in a single invocation
                                       & of this routine.
10019 IMSL_ILLEGAL_WRITE_OPTION        The value input for option is not
                                       & recognized.  The variable option must
                                       & be one of "IMSL_SET_CENTERING",
                                       & "IMSL_GET_CENTERING",
                                       & "IMSL_SET_ROW_WRAP",
                                       & "IMSL_GET_ROW_WRAP",
                                       & "IMSL_SET_PAGING", "IMSL_GET_PAGING",
                                       & "IMSL_SET_NAN_CHAR",
                                       & "IMSL_GET_NAN_CHAR",
                                       & "IMSL_SET_TITLE_PAGE",
                                       & "IMSL_GET_TITLE_PAGE",
                                       & "IMSL_SET_FORMAT", "IMSL_GET_FORMAT",
                                       & or "IMSL_SET_DEFAULTS".
10020 IMSL_INVALID_PAGE_OPTION         The value input for option is not
                                       & recognized.  The variable option
                                       & must be one of "IMSL_SET_PAGE_WIDTH",
                                       & "IMSL_GET_PAGE_WIDTH",
                                       & "IMSL_SET_PAGE_LENGTH",
                                       & or "IMSL_GET_PAGE_LENGTH".
10021 IMSL_BAD_PAGE_WIDTH              "page_attribute" = %(I1).  The page
                                       & width must be greater than or equal
                                       & to 10.
10022 IMSL_BAD_PAGE_LENGTH             "page_attribute" = %(I1).  The page
                                       & length must be greater than or equal
                                       & to 10.
11001 IMSL_ILLEGAL_OPT_ARG             Illegal optional argument %(I1) on
                                       & argument number %(I2).
11002 IMSL_NOBS_LESS_THAN_ONE          The number of observations must be
                                       & at least one,  while "n_observations"
                                       & = %(I1) is given.
11003 IMSL_POLY_DEGREE_LT_ZERO         "degree" = %(I1).  The degree of the
                                       & polynomial to be fit must be greater
                                       & than or equal to 0.
11004 IMSL_LARGER_NOBS_REQUIRED        "nobs" = %(I1).  The number of
                                       & observations, "nobs", must be greater
                                       & than one.
11005 IMSL_NEED_LDX_GE_NOBS            "nobs" = %(I1) and LDX = %(I2).  The
                                       & leading dimension of "x", "ldx", must
                                       & be greater than or equal to the number
                                       & of observations, "nobs".
11006 IMSL_NCOL_MUST_BE_GE_ONE         "ncol" = %(I1).  The number of columns
                                       & in "x", "ncol", must be greater than
                                       & or equal to one.
11007 IMSL_NEED_MAXDEG_GE_ZERO         "maxdeg" = %(I1).  The maximum degree
                                       & of the polynomial to be fit, "maxdeg",
                                       & must be greater than or equal to zero.
11008 IMSL_WRONG_ICRIT_VALUE           "icrit" = %(I1).  The criterion option,
                                       & "icrit", must be either 0, 1, or 2.
11009 IMSL_BAD_ICRIT_OR_LOF_VALU       "icrit" = %(I1) and "lof" = %(I2).  When
                                       & the criterion option, "icrit", equals
                                       & 2, the lack of fit option, "lof", must
                                       & be equal to one.
11010 IMSL_BAD_CRIT_OR_ICRIT_VALU      "crit" = %(F1) when "icrit" = %(I1).
                                       & The significance level for the lack
                                       & of fit test, "crit", must be greater
                                       & than or equal to 0 and less than
                                       & or equal to 100 when the criterion
                                       & option, "icrit", is equal to two.
11011 IMSL_BAD_CRIT_IF_ICRIT_EQ_1      "crit" = %(F1) when "icrit" = %(I1).
                                       & The R-squared that the fitted
                                       & polynomial must achieve, "crit", must
                                       & be greater than zero and less than or
                                       & equal to 100 when the criterion
                                       & option, "icrit", is equal to one.
11012 IMSL_CONSTANT_XVALUES            Each value of the independent variable
                                       & is the same.  The independent
                                       & variable, "x", cannot be constant.
11013 IMSL_PERFECT_FIT_POLY            The degree %(I1) polynomial fit is
                                       & a perfect fit within machine
                                       & precision.
11014 IMSL_CONSTANT_YVALUES            The response variable, "y", is
                                       & constant.  A zero degree polynomial
                                       & is fit.
11015 IMSL_FEW_DISTINCT_XVALUES        A degree %(I1) polynomial is fitted.
                                       & There are only %(I2) distinct
                                       & abscissas, so a higher degree
                                       & polynomial fit cannot  be computed.
11016 IMSL_PERFECT_FIT                 Although a degree %(I1) fit was
                                       & requested, a degree %(I2)
                                       & polynomial is fitted because
                                       & the degree %(I2) polynomial
                                       & fit is a perfect fit within machine
                                       & precision.
11017 IMSL_WRONG_LOF_VALUE             "lof" = %(I1).  The lack of fit option,
                                       & "lof", must be either 0 or 1.
11019 IMSL_BAD_NDEG_VALUE              "ndeg" = %(I1).  The degree of the
                                       & polynomial regression, "ndeg", must
                                       & be greater than or equal to zero.
11020 IMSL_NEGATIVE_D_ELMNTS           "d(%(I1))" = %(F1).  Each element of
                                       & D, the vector containing the
                                       & diagonal elements of the sum of
                                       & squares and cross-products matrix,
                                       & must be positive.
11021 IMSL_WRONG_DFE_VALUE             "dfe" = %(F1).  The degrees of freedom
                                       & for error, "dfe", must be greater
                                       & than or equal to zero.
11022 IMSL_WRONG_SSE_VALUE             "sse" = %(F1).  The sum of squares
                                       & for error, "sse", must be greater
                                       & than or equal to zero.
11023 IMSL_BAD_DFPE_VALUE              "dfpe" = %(F1).  The degrees of
                                       & freedom for pure error, "dfpe", must
                                       & be greater than or equal to zero.
11024 IMSL_BAD_SSPE_VALUE              "sspe" = %(F1).  The sums of squares for
                                       & pure error, "sspe", must be greater
                                       & than or equal to zero.
11025 IMSL_WRONG_IPRINT_VALUE          "iprint" = %(I1).  The printing option,
                                       & "iprint", must be equal to either
                                       & 0 or 1.
11026 IMSL_NEED_LDSQSS_GE_NDEG         "ndeg" = %(I1) and "ldsqss" = %(I2).
                                       & The leading dimension of "sqss",
                                       & "ldsqss", must be greater than or
                                       & equal to the degree of the polynomial
                                       & regression, "ndeg".
11027 IMSL_NEED_LDTLOF_GE_NDEG         "ndeg" = %(I1) and "ldtlof" = %(I2).
                                       & The leading dimension of "tlof",
                                       & "ldtlof", must be greater than or
                                       & equal to the degree of the polynomial
                                       & regression, "ndeg".
11028 IMSL_NEED_LARGER_LDCOEF          "ndeg" = %(I1) and "ldcoef" = %(I2).
                                       & The leading dimension of "coef",
                                       & "ldcoef", must be greater than or
                                       & equal to one plus the degree of the
                                       & polynomial regression, "ndeg".
11029 IMSL_NEGATIVE_DFE_VALUE          "dfe" = %(F1).  It must be nonnegative.
11030 IMSL_NEGATIVE_STDB_VALUE         "stdb[%(I1)]" = %(F1).  It must be
                                       & nonnegative.
11031 IMSL_STRICTLY_POS_TABLE_ELMNTS   "table[%(I1)]" = %(F1).  All elements of
                                       & "table" must be positive and strictly
                                       & less than 1.0.
11032 IMSL_NEED_POSITIVE_THETA         The parameter "theta" = %(F1), but
                                       & "theta" must be positive.
11033 IMSL_NEED_POSITIVE_PIN_VALUE     "pin" = %(F1).  But, it must be
                                       & positive.
11034 IMSL_NEED_POSITIVE_QIN_VALUE     "qin" = %(F1).  But, it must be
                                       & positive.
11035 IMSL_ELMNTS_SET_TO_NAN           1000 unsuccessful attempts were
                                       & made to assign a imsl_beta random
                                       & deviate to "r[%(I1)]", since "pin"
                                       & and "qin" are so small.  All elements
                                       & of "r" beyond %(I1) are set to
                                       & not-a-number.
11036 IMSL_SHAPE_PARAMETER_A           The shape parameter "a" = %(F1), but
                                       & "a" must be positive.
11037 IMSL_A_IS_TOO_LARGE              The value of "a" is too large to
                                       & allow the imsl_gamma distribution
                                       & to be represented in the manner
                                       & required by the algorithm.
11038 IMSL_COVARIANCE_SPECIFIERS       "IMSL_COV_COL_DIM" must be used with
                                       & "IMSL_COEF_COVARIANCES" or
                                       & "IMSL_COEF_COVARIANCES_USER".
11039 IMSL_COVARIANCE_MEMORY_REQ       Not enough memory to compute the
                                       & estimated variances and covariances
                                       & of the estimated coefficients.
11040 IMSL_NO_MEMORY_VARIANCE_STATS    Not enough memory to compute the
                                       & analysis of variance statistics.
11041 IMSL_VECTOR_OF_MEANS_X_MEMORY    Not enough memory to compute the vector
                                       & of means for X.
11042 IMSL_RESIDUAL_VECTOR_MEMORY      Not enough memory to compute the vector
                                       & of residuals.
11043 IMSL_WRONG_INTCEP_VALUE          "intcep" = %(I1).  The intercept option,
                                       & "intcep", must be equal to 0 or 1.
11044 IMSL_MODEL_REGRESSOR_REQUIRED    "intcep" = %(I1) and "nind" = %(I2).
                                       & There must be at least one regressor
                                       & in the model.
11045 IMSL_NEED_LARGER_LDR_VALUE       "ldr" = %(I1), "intcep" = %(I2) and
                                       & "nind" = %(I3).  The leading dimension
                                       & of "r", "ldr", must be greater than or
                                       & equal to the number of regressors,
                                       & "nind"+"intcep".
11046 IMSL_NEED_NOBS_GE_ZERO           "nobs" = %(I1).  The number of
                                       & observations, "nobs", must be
                                       & greater than zero.
11047 IMSL_RANK_DEFICIENT              The model is not full rank.  There is
                                       & not a unique least squares solution.
                                       & The rank of the matrix of regressors
                                       & is %(I1).
11048 IMSL_DOWNDATING_REQUESTED        Downdating is requested, but
                                       & "%(S1)[%(I1)]" equals the current
                                       & value (= %(F1)) of the associated
                                       & regressor variable. Downdating
                                       & of "%(S1)" cannot occur.
11049 IMSL_NO_STAT_INFERENCE           "dfe" = %(F1).  Statistical inference is
                                       & not possible.  More observations are
                                       & needed.
11050 IMSL_WRONG_VALUE_OF_TOL          "tol" = %(F1).  "tol" must be between
                                       & 0.0 and 1.0, inclusive.
11051 IMSL_ISUB_SHOULD_BE_ZERO         "intcep" = 0 and "isub" = %(I1).  When
                                       & "intcep" = 0, "isub" must equal 0.
11052 IMSL_NEED_ONE_LE_INDDEP_LE_NCOL  "inddep[%(I1)]" = %(I2) and "ncol" =
                                       & %(I3).  "inddep[%(I1)]" must be
                                       & greater than or equal one and less
                                       & than or equal to "ncol".
11053 IMSL_NEED_ONE_LE_INDIND_LE_NCOL  "indind[%(I1)]" = %(I2) and "ncol" =
                                       & %(I3).  "indind[%(I1)]" must be
                                       & greater than or equal one and less
                                       & than or equal to "ncol".
11054 IMSL_NONNEG_FREQ_REQUEST_1       The frequency for row %(I1) of "x" on
                                       & invocation number %(I2) of this
                                       & routine is %(F1).  Frequencies must
                                       & be nonnegative.
11055 IMSL_NONNEG_FREQ_REQUEST_2       The frequency for row %(I1) of "x"
                                       & is %(F1).  Frequencies must be
                                       & nonnegative.
11056 IMSL_NONNEG_WEIGHT_REQUEST_1     The weight for row %(I1) of "x" on
                                       & invocation number %(I2) of this
                                       & routine was %(F1).  Weights must
                                       & be nonnegative.
11057 IMSL_NONNEG_WEIGHT_REQUEST_2     The weight for row %(I1) was %(F1).
                                       &  Weights must be nonnegative.
11058 IMSL_TOLERALNCE_INCONSISTENT     The linear system of equations is
                                       & inconsistent within the computed
                                       & tolerance. Elements of row %(I1)
                                       & are zero, but B(%(I1),%(I2)) =
                                       & %(F1). X(%(I1),%(I2)) is set
                                       & to zero.
11059 IMSL_TOLERALNCE_INCONSISTENT_2   The linear system of equations is
                                       & inconsistent within the computed
                                       & tolerance.  "x[%(I1)][%(I2)]" is set
                                       & to zero.
11060 IMSL_REMAINING_ELMNTS_NOT_ZERO   "r[%(I1)][%(I1)]" = %(F1).  Remaining
                                       & elements for the row must also be
                                       & zero, but "r[%(I1)][%(I2)]" = %(F2)
                                       & is not.
11061 IMSL_NEED_RARG_GE_ZERO           "%(S1)" = %(F1).  "%(S1)" must be
                                       & greater than or equal to zero.
11062 IMSL_ROW_OF_X_CONTAINED_NAN      At least one row of "x" contained NaN
                                       & (a missing value).  These rows
                                       & were excluded from calculations.
11063 IMSL_NONPOSITIVE_NROW_VALUE      "nrow" = %(I1) and "ido" = %(I2).  If
                                       & "nrow" is nonpositive, "ido" must be
                                       & equal to 2 or 3.
11064 IMSL_CONPRM_VALUE_TOO_BIG        "confidence_means" = %(F1).  The
                                       & confidence level for the mean,
                                       & "confidence_means", must
                                       & be less than 100.0.
11065 IMSL_CONPRV_VALUE_TOO_BIG        "confidence_variances" = %(F1).  The
                                       & confidence level for the variance,
                                       & "confidence_variances", must be
                                       & less than 100.0.
11066 IMSL_NUM_NONMISS_OBS_LT_ZERO     The number of nonmissing observations
                                       & is less than zero.
11067 IMSL_LESS_THAN_TWO_VALID_OBS     Fewer than two valid observations are
                                       & present.  The corresponding statistics
                                       & are set to NaN (not a number), (except
                                       & for the mean, which is not correct if
                                       & no valid observations).
11068 IMSL_ZERO_SUM_OF_WEIGHTS         The sum of the weights is zero. The
                                       & statistics, except for the minima,
                                       & maxima, ranges and counts, are set
                                       & to NaN (not a number).
11069 IMSL_SUM_OF_WEIGHTS_ZERO         The sum of the weights for variable
                                       & %(I1) is zero. The statistics, except
                                       & for the minima, maxima, ranges and
                                       & counts, are set to NaN (not a number).
11070 IMSL_MAX_LESS_THAN_MIN           The maximum value is less than the
                                       & minimum value.  The corresponding
                                       & statistics are set to NaN (not
                                       & a number).
11071 IMSL_MIN_GREATER_THAN_MAX        The maximum value is less than the
                                       & minimum value for variable %(I1).
                                       & The corresponding statistics are
                                       & set to NaN (not a number).
11072 IMSL_NOT_ENOUGH_OBSERVATIONS     Fewer than two valid observations are
                                       & present for variable %(I1).  The
                                       & corresponding statistics are set
                                       & to NaN (not a number), (except for
                                       & the mean, which is not correct if
                                       & no valid observations are present,
                                       & or is correct if one observation is
                                       & present).
11073 IMSL_VARIANCE_UNDERFLOW          Since the range of variable %(I1) is
                                       & very small, the variance for this
                                       & variable underflows.  Therefore, the
                                       & variance and standard deviation are
                                       & set to 0, and the skewness and
                                       & kurtosis are set to NaN (not a
                                       & number).
11074 IMSL_HIGH_ORDER_UNDERFLOW        Since the range of variable %(I1) is
                                       & very small, the higher order moments
                                       & for this variable underflow.
                                       & Therefore, the skewness and kurtosis
                                       &  are set to NaN (not a number).
11075 IMSL_FOURTH_ORDER_UNDERFLOW      Since the range of variable %(I1) is
                                       & very small, the fourth order moment
                                       & for this variable underflows.
                                       &  Therefore, the kurtosis is set to
                                       & NaN (not a number).
11076 IMSL_CONSTANT_OBSERVATIONS       The observations on variable %(I1) are
                                       & constant.
11077 IMSL_VAR_AND_STD_ARE_NEGATIVE    The variance and standard deviation
                                       & are negative for variable %(I1).
11078 IMSL_COEFF_OF_VARIATION_NAN      The coefficient of variation is set to
                                       & NaN (not a number) for variable %(I1).
                                       & This is due to the value of the mean,
                                       & standard deviation, or both.
11079 IMSL_NEGATIVE_STD_VALUE          The standard deviation is negative for
                                       & variable %(I1).  The corresponding
                                       & confidence limits for the mean are
                                       & set to NaN (not a number).
11080 IMSL_ERROR_IN_T_STATISTIC        An error occurred in determining the t
                                       & statistic.  The confidence limits are
                                       & set to NaN (not a number).
11081 IMSL_NEGATIVE_VARIANCE           The variance is negative for variable
                                       & %(I1). The corresponding confidence
                                       & limits for the variance are set to
                                       & NaN (not a number).
11082 IMSL_CHI_SQUARED_STAT_ERROR      An error occurred in determining the
                                       & chi-squared statistic.  The lower
                                       & confidence limit for the variance
                                       & is set to NaN (not a number).
11083 IMSL_NOBS_MUST_BE_GE_TWO         "n_observations" = %(I1).  The number of
                                       & observations, "n_observations", must
                                       & be greater than or equal to 2.
11084 IMSL_NEED_LARGER_FUZZ_VALUE      The value used to determine ties,
                                       & "fuzz_value", must be greater than or
                                       & equal to 0.
11085 IMSL_WRONG_ITIE_OPTION_USED      "itie" = %(I1).  The option used to
                                       & assign a rank to a tied observation,
                                       & "itie", must be equal to 0, 1, 2,
                                       & or 3.
11086 IMSL_WRONG_ISCORE_OPTION_USED    "iscore" = %(I1).  The option used to
                                       & give the type of values returned in
                                       & "score", "iscore", must be equal to
                                       & 0, 1, 2, 3, 4, or 5.
11087 IMSL_NEED_LARGER_SAMPLE_SIZE     The sample size must be at least one
                                       & while "n" = %(I1) is given.
11088 IMSL_RANK_MUST_BE_AT_LEAST_ONE   The rank must be at least one while
                                       & "i" = %(I1) is given.  "i" = 1 is
                                       & used.
11089 IMSL_NEED_RANK_LE_SAMPLE_SIZE    The rank must be less than or equal to
                                       & the sample size while I = %(I1) and
                                       & "n" = %(I2)  are given.  I = %(I2) is
                                       & used.
11090 IMSL_NEED_N_CATEGORIES_GE_TWO    "n_categories" = %(I1).  The number of
                                       & cells must be greater than or equal
                                       & to two.
11091 IMSL_NEED_N_PARAMETERS_GE_ZERO   "n_parameters" = %(I1).  The number of
                                       & parameters estimated in computing
                                       & the "cdf" must be greater than or
                                       & equal to zero.
11092 IMSL_INCORRECT_CDF_1             "cdf(lower_bound)" = %(F1) and
                                       & "cdf(upper_bound)" = %(F2).  The
                                       & function CDF is not a cumulative
                                       & distribution function.
11093 IMSL_INCORRECT_CDF_2             The probability of the range is %(F1).
                                       & This value is not positive.
11094 IMSL_X_VALUE_OUT_OF_RANGE        Row %(I1) of "x" contains a value which
                                       & is out of range.
11095 IMSL_MISSING_DATA_ELEMENT        At least one data element is missing.
11096 IMSL_INCORRECT_CDF_3             "cdf(lower_bound)" = %(F1) and
                                       & "cdf(upper_bound)" = %(F2),
                                       & but "cdf(x[%(I1)])" =
                                       & %(F3).  The function "cdf" is not a
                                       & cumulative distribution function.
11097 IMSL_TOO_MANY_CELL_DELETIONS     There are more observations deleted from
                                       & the cell than added.
11098 IMSL_INCORRECT_CDF_5             An error occurred when inverting the
                                       & cumulative distribution function.
                                       & This function must be continuous and
                                       & defined on the whole real line.  If
                                       & all else fails, specify the cutpoints.
11099 IMSL_ALL_OBSERVATIONS_MISSING    All observations are missing (NaN, not
                                       & a number) values.
11100 IMSL_INCORRECT_CDF_4             "cdf(lower_bound)" = %(F1) and
                                       & "cdf(upper_bound)" = %(F2), but
                                       & "cdf(cut_point[%(I4)])" = %(F3). The
                                       & function cdf is not a cumulative
                                       & distribution function.
11101 IMSL_EXPECTED_VAL_LESS_THAN_5    An expected value is less than 5.
11102 IMSL_EXPECTED_VAL_LESS_THAN_1    An expected value is less than 1.
11103 IMSL_NO_BOUND_AFTER_100_TRYS     After 100 attempts, a bound for the
                                       & inverse cannot be determined.  Try
                                       & again with a different initial
                                       & estimate.
11104 IMSL_NO_UNIQUE_INVERSE_EXISTS    F(%(F1)) = F(%(F2)) = %(F3).  No
                                       & unique inverse exists.
11105 IMSL_CONVERGENCE_ASSUMED         Over 100 iterations have occurred
                                       & without convergence.  Convergence
                                       & is assumed.
11111 IMSL_CONSTANT_VARIABLE           Correlations are requested but the
                                       & observations on variable %(I1) are
                                       & constant.  The pertinent correlation
                                       & coefficients are set to NaN (not a
                                       & number).
11112 IMSL_INSUFFICIENT_DATA           Variances and covariances are requested
                                       & but fewer than two valid
                                       & observations are present for a
                                       & variable.  The pertinent statistics
                                       & are set to NaN (not a number).
11114 IMSL_LOF_COL_DIM_4               "ssq_lof_col_dim" = %(i1).  The column
                                       & dimension of "ssq_lof" must be greater
                                       & than or equal to 4.
11115 IMSL_POLY_COL_DIM_4              "ssq_poly_col_dim" = %(i1).  The column
                                       & dimension of "ssq_poly" must be
                                       & greater than or equal to 4.
11116 IMSL_CHOOSE_S1_GREATER_S2        "%(S1)" = %(I1).
                                       & "%(S1)" must be chosen greater than or
                                       & equal to %(S2).
11117 IMSL_MUT_EXCLUSIVE               The options %(S1) are mutually
                                       & exclusive options.  Only one
                                       & can be specified in a single
                                       & invocation of this routine.
11118 IMSL_MUT_EXC_TALLY_OPT           The options "IMSL_DATA_BOUNDS",
                                       & "IMSL_KNOWN_BOUNDS", "IMSL_CUTPOINTS",
                                       & and "IMSL_CLASS_MARKS" are mutually
                                       & exclusive options.  Only one can be
                                       & specified in a single invocation of
                                       & this routine.
11119 IMSL_IOPT_NEED_2_INTERVALS       "n_intervals" = %(i1).  Since "iopt"
                                       & = %(i2), there must be at
                                       & least two intervals.
11120 IMSL_IOPT_NEED_3_INTERVALS       "n_intervals" = %(i1).  Since "iopt"
                                       & = 1, there must be at
                                       & least three intervals.
11121 IMSL_XHI_LT_XLO                  "lower_bound" = %(r1) and "upper_bound"
                                       & = %(r2).  The lower
                                       & bound must be less than the upper
                                       & bound.
11122 IMSL_DIV_NOT_MONOTONIC           %(l1)(%(i1)) = %(r1) and %(l1)(%(i2)) =
                                       & %(r2). The elements of "%(l1)" must be
                                       & monotonically increasing.
11123 IMSL_N_INTERVALS_LT_1            "n_intervals" = %(i1). There must be at
                                       & least one interval.
11124 IMSL_NAN_NOT_ALLOWED             "y" contains missing values.  Missing
                                       & values are not allowed.
11130 IMSL_NEED_ABS_RHO_LE_1           The absolute value of the correlation
                                       & coefficient, "rho" = %(r1), must be
                                       & less than or equal to 1.
11131 IMSL_ABS_RHO_EQ_1                Since the absolute value of the
                                       & correlation coefficient, "rho", is
                                       & equal to 1.0, the distribution is
                                       & singular and the function is computed
                                       & based on the univariate normal
                                       & distribution.
11420 IMSL_6529_INF_INIT_TRM           A and S series 6.5.29 has infinite
                                       & initial term.
11421 IMSL_6531_INF_INIT_APPRX         A and S series 6.5.31 has infinite
                                       & initial approximation.
11422 IMSL_USE_NRM_APPRX_LRG_DF        Use normal approximation for large
                                       & degrees of freedom parameter.
11423 IMSL_6529_NOT_CONVERGE           A and S series 6.5.29 did not converge.
11424 IMSL_6531_NOT_CONVERGE           continued fraction A and S 6.5.31
                                       & did not converge.
12001 IMSL_YEAR_0                      Year must not be equal to 0, since the
                                       & year 0 does not exist.
12002 IMSL_YEAR_1582                   Year = 1582, month = 10 and day = %(I1)
                                       & is illegal because, due to the
                                       & conversion from the Julian calendar
                                       & to the Gregorian calendar, October 5,
                                       & 1582 through October 14, 1582 do
                                       & not exist.
12003 IMSL_YEAR_45                     The Julian Calendar first went into
                                       & use in 45 B.C. (-45).  No calendar
                                       & prior to that time was as universally
                                       & used nor as accurate as the Julian.
                                       & Therefore, it is assumed that the
                                       & Julian Calendar was in use prior to
                                       & 45 B.C. and year = %(I1).
12004 IMSL_BAD_DAY                     Since "month" = %(I1) and "year" =
                                       & %(I2), "day" must be less than or
                                       & equal to %(I3), but "day" = %(I4).
12005 IMSL_NEGATIVE_DAYS               Number of days for a calendar year
                                       & must be a positive integer value,
                                       & but "days" = %(I1).
12006 IMSL_DAYS_1582                   Number of days for year 1582 is 355
                                       & days, but "days" = %(I1).
12007 IMSL_LEAP_YEAR_DAYS              Number of days for a leap year is
                                       & 366 days, but "days" = %(I1).
12008 IMSL_DAYS_PER_YEAR               Number of days for a common year is
                                       & 365 days, but "days" = %(I1).
12009 IMSL_ARG_OUT_OF_RANGE            The argument must be between 1 and 8
                                       & inclusive. "n" = %(I1).
12010 IMSL_INDEX_VARIABLE_VALUE        The absolute value of the index variable
                                       & must be 1 or 2.  "n" = %(I1).
12111 IMSL_BAD_CONST_NAME              The argument "name" = "%(S1)" is
                                       & illegal.
12112 IMSL_INCOMPATIBLE_UNITS          The units "xunits" = "%(S1)" and
                                       & "yunits" = "%(S2)" are not compatible.
12113 IMSL_MASS_TO_FORCE               A conversion of units of mass to
                                       & units of force was required for
                                       & consistency.
12114 IMSL_ILLEGAL_UNIT                The unit "%(S1)" is illegal.
12115 IMSL_EXCEEDED_MAX_LOOP_COUNTER   Solution for the damped least squares
                                       & problem has not occured within %(i1)
                                       & iterations.  IMSL_CHANGE_LOOP_MAXIMUM
                                       & can be used to adjust the iteration
                                       & limit.
13000 IMSL_EXCLUSIVE_SYMFAC_REQUEST    The options IMSL_RETURN_SYMBOLIC_FACTOR
                                       & and IMSL_SUPPLY_SYMBOLIC_FACTOR are
                                       & mutually exclusive.
13001 IMSL_EXCLUSIVE_NUMFAC_REQUEST    The options IMSL_RETURN_NUMERIC_FACTOR
                                       & and IMSL_SUPPLY_NUMERIC_FACTOR are
                                       & mutually exclusive.
13002 IMSL_BAD_SQUARE_ROOT             A zero or negative square root has
                                       & occured during the factorization.
                                       &  The coefficient matrix is not
                                       & positive definite.
13003 IMSL_NZ_LESS_THAN_N              The number of non-zero elements must
                                       & be at least the order of the matrix,
                                       & but "n" = %(i1) and "nz" = %(i2).
13004 IMSL_BAD_NONZERO                 More than one value of A[%(i1),%(i2)]
                                       & is given.
13005 IMSL_NONZERO_IN_UP_TRIANGLE      Only non-zero elements in the lower
                                       & triangle of the input matrix are to
                                       & be specified.  But "a[%(i1)].row" =
                                       & %(i2) and "a[%(i1)].col" = %(i3).
13006 IMSL_BAD_DIAG_SIZE_REQUEST       Largest or smallest diagonal elements
                                       & in the factorization cannot be
                                       & returned if IMSL_SOLVE_ONLY is
                                       & specified.
13007 IMSL_BAD_RETURN_NUMNZ_REQUEST    The total number of nonzeros in the
                                       & factorization matrix cannot be
                                       & returned if either
                                       & IMSL_SUPPLY_SYMBOLIC_FACTOR or
                                       & IMSL_SOLVE_ONLY are specified.
13008 IMSL_BAD_ROW_INDEX               All row indices must be non-negative
                                       & and less than n - 1, but a[%(i1)].row
                                       & = %(i2).
13009 IMSL_BAD_COLUMN_INDEX            All column indices must be non-negative
                                       & and less than n - 1, but "a[%(i1)].col"
                                       & = %(i2).
13010 IMSL_GROWTH_FACTOR_EXCEEDED      The growth factor, gf = %(f1) exceeded
                                       & gf_limit = %(f2).
13011 IMSL_BAD_HB_COL_PTR              In CSC format, all entries of the column
                                       & pointer vector must be non-negative
                                       & and less than or equal to nz, but
                                       & HB_col_ptr[%(i1)] = %(i2).
13012 IMSL_BAD_HB_ROW_IND              In CSC format, all entries of the row
                                       & index vector must be non-negative
                                       & and less than n, but
                                       & HB_col_ptr[%(i1)] = %(i2).
13013 IMSL_FACTORED_MATRIX_SINGULAR    The factored matrix is singular.  It
                                       & has a diagonal element near zero.
13014 IMSL_GMRES_STAGNATION            Residual norm non-decrease noted over
                                       kdmax = (%i1), indicating stagnation.
13015 IMSL_BAD_KDMAX                   "%(S1)" = %(I1). The maximum Krylov
                                       & subspace dimension must be positive.
13500 IMSL_INEQUALITY_VIOLATION_4      "%(S1)" = %(F1).  "%(S1)" must be
                                       & greater than or equal to %(F2).
13501 IMSL_INEQUALITY_VIOLATION_5      "%(S1)" = %(F1).  "%(S1)" must be
                                       & less than or equal to %(F2).
13502 IMSL_INEQUALITY_VIOLATION_6      "%(S1)" = %(F1).  "%(S1)" must be
                                       & greater than or equal to %(F2) and
                                       & less than %(F3).
13503 IMSL_ARGUMENT_NEGATIVE           The value of the first variable of the
                                       & integral, x = %(F1), must be at least
                                       & 0.
13504 IMSL_ARGUMENT_NOT_POSITIVE       The value of the second variable of the
                                       & integral, y = %(F1), must be positive.
13505 IMSL_SUM_TOO_SMALL               The sum, x+y = %(F1), must be greater
                                       & than or equal to ARGMIN = %(F2).
13506 IMSL_ARGUMENTS_TOO_LARGE         The arguments, x = %(F1), y = %(F2),
                                       & must be less than or equal to ARGMAX =
                                       & %(F3).
13507 IMSL_ARGUMENT_NEGATIVE_2         At least one of the input arguments,
                                       & x = %(F1) or y = %(F2), is negative.
                                       & They must both be nonnegative.
13508 IMSL_ARGUMENT_NOT_POSITIVE_2     The value of the argument z = %(F1)
                                       & must be positive.
13509 IMSL_SUM_TOO_SMALL_2             Either the sum, x+y = %(F1), or z =
                                       & %(F2) is less than ARGMIN = %(F3).
13510 IMSL_ARGUMENTS_TOO_LARGE_2       At least one of the arguments, x =
                                       & %(F1), y = %(F2), or z = %(F3), is
                                       & greater than ARGMAX = %(F4).
13511 IMSL_ARGUMENT_NEGATIVE_3         At least one of the input arguments,
                                       & x = %(F1), y = %(F2), or z = %(F3) is
                                       & negative.  They must all be
                                       & nonnegative.
13512 IMSL_SUM_TOO_SMALL_3             At least one of the sums, x+y = %(F1),
                                       & x+z = %(F2), or y+z = %(F3), is less
                                       & than ARGMIN = %(F4).
13513 IMSL_RHO_IS_NEGATIVE             The argument of the complete elliptic
                                       & integral, rho = %(F1), must be 
                                       & positive.
13514 IMSL_SUM_TOO_SMALL_4             At least one of the sums, x+y = %(F1),
                                       & x+z = %(F2), or y+z = %(F3), or the
                                       & argument rho = %(F4), is less than
                                       & ARGMIN = %(F5).
13515 IMSL_ARGUMENTS_TOO_LARGE_3       At least one of the arguments, x =
                                       & %(F1), y = %(F2), or z = %(F3), or rho
                                       & = %(F4) is greater than ARGMAX =
                                       & %(F5).
13520 IMSL_NUM_POINTS_NOT_POSITIVE     The number of points n = %(I1).  It must
                                       & be greater than zero.
13521 IMSL_TRANSFORM_POINTS_NEGATIVE   The point t[%(I1)] = %(F1).  Each
                                       & element of t, containing points at
                                       & which the transform is desired, must
                                       & be greater than zero.
13522 IMSL_PSEUDO_ACC_NOT_POSITIVE     The required absolute uniform pseudo
                                       & accuracy pseudo_accuracy = %(F1) must
                                       & be greater than zero.
13523 IMSL_PSEUDO_ACC_GE_ONE           The required absolute uniform pseudo
                                       & accuracy = %(F1).  When this value is
                                       & greater than or equal to one, zero
                                       & can always be returned as an answer.
13524 IMSL_BAD_MAX_COEFFICIENTS        The upper limit of the number of
                                       & coefficients computed in the Laguerre
                                       & expansion, mtop = %(I1), must be
                                       & divisible by four.
13525 IMSL_LARGE_ERROR_BOUNDS          Normal termination, but with estimated
                                       & error bounds slightly larger than
                                       & pseudo_accuracy = %(F1).  Note,
                                       & however, that the actual errors on the
                                       & final results may be smaller than
                                       & pseudo_accuracy, as bounds independent
                                       & of t are pessimistic.
13526 IMSL_ACCURACY_EXCEEDED           Normal calculation, terminated early at
                                       & the roundoff error level estimate
                                       & because this estimate exceeds the
                                       & required accuracy (usually due to
                                       & overly optimistic expectation by the
                                       & user about attainable accuracy).
13527 IMSL_DECAY_RATE_SMALL            The decay rate of the coefficients is
                                       & too small.  It may improve results to
                                       & increase the upper limit of the
                                       & coefficients, mtop.
13528 IMSL_DECAY_RATE_SMALL_2          The decay rate of the coefficients is
                                       & too small.  In addition, the roundoff
                                       & error level is such that the
                                       & required accuracy, %(F1), cannot be
                                       & reached.
13529 IMSL_NO_BOUNDS_RETURNED          No error bounds are returned since the
                                       & behavior of the coefficients does not
                                       & enable reasonable prediction.  Results
                                       & are probably wrong.
14000 IMSL_FCN_VALUES                  The number of function values to be
                                       & calculated, N = %(i1), must be at
                                       & least 1.
14001 IMSL_INPUT_ARG_XNU               The value of the input argument XNU
                                       & = %(r1), must be greater than -1/2.
14002 IMSL_COMPLEX_ABS_VALUE           The complex absolute value of the
                                       & input argument, Z = %(c1), must not
                                       & be greater than %(r1).
14003 IMSL_CONT_FRACTIONS_FAILED       One of the continued fractions failed.
14004 IMSL_FIRST_CBS_VALID             Only the first %(i1) entries in CBS
                                       & are valid.
14005 IMSL_NUM_ROW_LE_LDA              The number of rows of a matrix must be
                                       & less than or equal to its leading
                                       & dimension while NLCA+NUCA+1 = %(i1)
                                       & and LDA = %(i2) are given.
14006 IMSL_NUM_ROW_LE_LDFAC            The number of rows of a matrix must be
                                       & less than or equal to its leading
                                       & dimension while 2*NLCA+NUCA+1 = %(i1)
                                       & and LDFAC = %(i2) are given.
14007 IMSL_LOWER_CODIAGONALS_N_NCLA    The number of lower codiagonals must be
                                       & greater than or equal to zero and
                                       & less than N while N = %(i1) and NLCA
                                       & = %(i2) are given.
14008 IMSL_UPPER_CODIAGONALS_N_NUCA    The number of upper codiagonals must be
                                       & greater than or equal to zero and
                                       & less than N while N = %(i1) and NUCA
                                       & = %(i2) are given.
14009 IMSL_IPATH_RANGE_5               IPATH must be either 1 or 2 while a
                                       & value of %(i1) is given.
14010 IMSL_ARGUMENT_N                  The argument N = %(i1).  It must be at
                                       & least 1.
14011 IMSL_ARGUMENT_LDA                The argument LDA = %(i1).  It must be
                                       & at least as large as NLCA+NUCA+1
                                       & = %(i2)+%(i3)+1 = %(i4).
14012 IMSL_ARGUMENT_NLCA               The argument NLCA = %(i1).  It must be
                                       & at least 0 and less than N = %(i2).
14013 IMSL_ARGUMENT_NUCA               The argument NUCA = %(i1).  It must be
                                       & at least 0 and less than N = %(i2).
14014 IMSL_ARGUMENT_LDB                The argument LDB = %(i1).  It must be
                                       & at least as large as NLCB+NUCB+1
                                       & = %(i2)+%(i3)+1 = %(i4).
14015 IMSL_ARGUMENT_NLCB               The argument NLCB = %(i1).  It must be
                                       & at least as large as NLCA = %(i2) and
                                       & less than N = %(i3).
14016 IMSL_ARGUMENT_NUCB               The argument NUCB = %(i1).  It must be
                                       & at least as large as NUCA = %(i2) and
                                       & less than N = %(i3).
14017 IMSL_N_GE_ZERO                   N must be greater than or equal to zero
                                       & while %(i1) is given.
14018 IMSL_NCODA_GE_ZERO               NCODA must be greater than or equal to
                                       & zero while %(i1) is given.
14019 IMSL_LDA_GT_NCODA                LDA must be greater than NCODA while
                                       & LDA = %(i1) and NCODA = %(i2) are
                                       & given.
14020 IMSL_INCX_NE_ZERO                INCX must not be equal to zero while
                                       & %(i1) is given.
14021 IMSL_TRABS_NTC                   TRANS must be set equal to N or T or C
                                       & while %(l1) is given.
14022 IMSL_UPLO_UL                     UPLO must be set equal to U or L while
                                       & %(l1) is given.
14023 IMSL_DIAG_UN                     DIAG must be set equal to U or N while
                                       & %(l1) is given.
14024 IMSL_ARGUMENT_IDEF               The argument IDEF = %(i1) and the matrix
                                       & is not %(l1) definite.
14025 IMSL_PIN_GT_ZERO                 PIN = %(r1) must be greater than 0.0.
14026 IMSL_QIN_GT_ZERO                 QIN = %(r1) must be greater than 0.0.
14027 IMSL_X_LT_ZERO                   Since X = %(r1) is less than or equal to
                                       & zero, the distribution function is
                                       & zero at X.
14028 IMSL_X_GT_ONE                    Since X = %(r1) is greater than or equal
                                       & to one, the distribution function is
                                       & one at X.
14029 IMSL_LDU_LT_NX                   The number of grid lines NX = %(i2) and
                                       & the leading dimension of U is LDU =
                                       & %(i1).  LDU cannot be less than NX.
14030 IMSL_LDU_LT_NX_PLUS_2            The number of grid lines NX = %(i2) and
                                       & the leading dimension of U is LDU =
                                       & %(i1).  LDU cannot be less than NX+2.
14031 IMSL_ARGUMENT_IBCTY_1_3          The argument IBCTY(1) = %(i1) and
                                       & IBCTY(3) = %(i2).  If used, periodic
                                       & boundary conditions must be specified
                                       & on opposite sides of the domain.
14032 IMSL_ARGUMENT_IBCTY_2_4          The argument IBCTY(2) = %(i1) and
                                       & IBCTY(4) = %(i2).  If used, periodic
                                       & boundary conditions must be specified
                                       & on opposite sides of the domain.
14033  IMSL_NCODE_GE_LDA               The number of rows of a matrix must be
                                       & less than or equal to its leading
                                       & dimension while NCODA + 1 = %(i1) and
                                       & LDA = %(i2) are given.
14034  IMSL_NCODE_GE_LDFAC             The number of rows of a matrix must be
                                       & less than or equal to its leading
                                       & dimension while NCODA + 1 = %(i1) and
                                       & LDFAC = %(i2) are given.
14035  IMSL_NCODE_LT_N                 The number of lower or upper codiagonals
                                       & must be greater than or equal to zero
                                       & and less than N while NCODA = %(i1)
                                       & and N = %(i2) are given.
14036  IMSL_HERMITIAN_DIAG_REAL_3      The matrix element A(%(i1),%(i2)) =
                                       & %(c1).  The diagonal of a Hermitian
                                       & must be real.
14037  IMSL_HERMITIAN_DIAG_REAL_4      The matrix element A(%(i1),%(i2)) =
                                       & %(c1).  The diagonal of a Hermitian
                                       & must be real.  The imaginary part will
                                       & be used as zero in the algorithm.
14038  IMSL_IDO_EQ_ZERO                The value of IDO must be zero, one, two,
                                       & or three but IDO = %(i1) was given.
14039  IMSL_IPAD_EQ_ZERO               The value of IPAD must be either zero or
                                       & one, but IPAD = %(i1) was given.
14040  IMSL_POSITIVE_LENGTH_X          The length of the vector X must be
                                       & positive while NX = %(i1) is given.
14041  IMSL_POSITIVE_LENGTH_Y          The length of the vector Y must be
                                       & positive while NY = %(i1) is given.
14042  IMSL_LENGTH_Z                   The length of the vector Z must be at
                                       & least %(i1) while NZ = %(i2) is given,
                                       & where NZ is based on NX = %(i3) and
                                       & NY = %(i4).
14043  IMSL_LENGTH_N_GE_ONE            The length of the sequence N = %(i1).
                                       & It must be at least 1.
14044  IMSL_IPAD_EQ_ZERO_1             The value of IPAD must be either zero
                                       & one, two, or three but IPAD = %(i1)
                                       & was given.
14045  IMSL_POSITIVE_LENGTH            The length of the input vectors must be
                                       & positive while N = %(i1) is given.
14046  IMSL_LENGTH_Z_1                 The length of the vector Z must be at
                                       & least %(i1) while NZ = %(i2) is given,
                                       & where NZ is based on N = %(i3).
14047  IMSL_ORDER_GE_ONE               The argument N = %(i1).  The order of
                                       & the matrix must be at least 1.
14048  IMSL_LDA_GE_ORDER               The argument LDA = %(i1).  The leading
                                       & dimension of the matrix A must be at
                                       & least equal to the order, N = %(i2).
14049  IMSL_LDB_GE_ORDER               The argument LDB = %(i1).  The leading
                                       & dimension of the matrix B must be at
                                       & least equal to the order, N = %(i2).
14050  IMSL_OPTION_VALUES_3_4          The option values 3,4 must be
                                       & respectively not less than zero, and
                                       & non-negative while %(i1) and %(i2)
                                       & are given.
14051  IMSL_OPTION_VALUES_7_8          The option values 7,8 must be
                                       & respectively not less than zero, and
                                       & non-negative while %(i1) and %(i2)
                                       & are given.
14052  IMSL_EIGENVALUE_NOT_CONVERGE    The iteration for an eigenvalue failed
                                       & to converge.
14053  IMSL_LDEVEC_GE_ORDER            The argument LDEVEC = %(i1).  The order
                                       & of the eigenvector matrix must be at
                                       & least equal to the order N = %(i2).
14054  IMSL_EIGENVECTOR_NUM_ZERO       Eigenvector number %(i1) is zero.
14055  IMSL_PERF_INDEX                 The performance index = %(r1).  A value
                                       & greater than 100 is considered poor.
14056  IMSL_NEVAL_GT_ZERO              The argument NEVAL = %(i1).  The number
                                       & of eigenvalue/eigenvector imsl_pairs
                                       & on which the calculation of the
                                       & performance index is based must be
                                       & greater than 0 and less than or equal
                                       & to N = %(i2).
14057  IMSL_MATRIX_A_ZERO              The argument matrix A is zero.
14058  IMSL_MATRIX_B_ZERO              The argument matrix B is zero.
14059  IMSL_POSITIVE_NRA_NCA_VALUES    Both the number of rows and the number
                                       & of columns of the input matrix have to
                                       & be positive while NRA = %(i1) and NCA
                                       & = %(i2) are given.
14060  IMSL_ROW_COL_SAME_Y_X           When IPATH=1, the number of rows in A
                                       & must be the same as the length of Y
                                       & and the number of columns in A must
                                       & be the same as the length of X, but
                                       & NRA=%(i1), NY=%(i4), NCA=%(i2), and
                                       & NX=%(i3).
14061  IMSL_ROW_COL_SAME_X_Y           When IPATH=2, the number of rows in A
                                       & must be the same as the length of X
                                       & and the number of columns in A must
                                       & be the same as the length of Y, but
                                       & NRA=%(i1), NX=%(i3), NCA=%(i2), and
                                       & NY=%(i4).
15001  IMSL_COUNT_LE_ONE               The number of cash flows cannot be
                                       & less than or equal to one, while
                                       & "count" = %(I1) is given.
15002  IMSL_CASH_FLOWS                 Cash flows must contain at least one
                                       & positive value and one negative value.
15003  IMSL_COUNT_LE_ZERO              The number of cash flows cannot be less
                                       & than or equal to zero, while "count"
                                       & = %(I1) is given.
15004  IMSL_END_GT_LIFE                The final period cannot be greater than
                                       & the useful life, while "end" = %(I1)
                                       & and "life" = %(I2) are given.
15005  IMSL_END_LT_ZERO                The final period cannot be less than
                                       & zero, while "end" = %(I1) is given.
15006  IMSL_END_LT_ONE                 The last period cannot be less than
                                       & one, while "end" = %(I1) is given.
15007  IMSL_START_GT_END               The initial period cannot be greater
                                       & than the final period, while "start"
                                       & = %(I1) and "end" = %(I2) are given.
15008  IMSL_START_LT_ZERO              The initial period cannot be less than
                                       & zero, while "start" = %(I1) is given.
15009  IMSL_START_LT_ONE               The first period cannot be less than
                                       & one, while "start" = %(I1) is given.
15010  IMSL_SALVAGE_LT_ZERO            The salvage value cannot be less than
                                       & zero, while "salvage" = %(R1) is
                                       & given.
15011  IMSL_LIFE_EQ_ZERO               The number of periods cannot be zero,
                                       & while "life" = %(I1) is given.
15013  IMSL_COUNT_LE_ZERO_2            The number of interest rates in array
                                       & schedule cannot be less than or equal
                                       & to zero, while "count" = %(I1) is
                                       & given.
15014  IMSL_FRACTION_LE_ZERO           Fraction cannot be less than or equal
                                       & to zero, while "fraction" = %(I1) is
                                       & given.
15015  IMSL_COST_LT_ZERO               The initial cost cannot be less than
                                       & zero, while "cost" = %(R1) is given.
15016  IMSL_LIFE_LE_ZERO               The number of periods cannot be less
                                       & than or equal to zero, while "life" =
                                       & %(I1) is given.
15017  IMSL_MONTH_BTN_1_12             The number of months in the first year
                                       & must be between one and twelve,
                                       & while "month" = %(I1) is given.
15018  IMSL_FACTOR_LE_ZERO             Factor cannot be less than or equal to
                                       & zero, while "factor" = %(R1) is given.
15019  IMSL_PERIOD_GT_NPER             Period cannot be greater than total
                                       & number of periods, while "period" =
                                       & %(I1) and "n_periods" = %(I2) are
                                       & given.
15020  IMSL_PERIOD_LT_ONE              Period cannot be less than one, while
                                       & "period" = %(I1) is given.
15021  IMSL_PERIOD_LT_ZERO             The period cannot be less than zero,
                                       & while "period" = %(I1) is given.
15022  IMSL_PERIOD_LE_ZERO             The period cannot be less than or equal
                                       & to zero, while "period" = %(I1) is
                                       & given.
15023  IMSL_PERIOD_GT_LIFE             The specified period cannot be greater
                                       & than the useful life, while "period"
                                       & = %(I1) and "life" = %(I2) are given.
15024  IMSL_EFFECT_LE_ZERO             The effective interest rate cannot be
                                       & less than or equal to zero, while
                                       & "effective_rate" = %(R1) is given.
15025  IMSL_NOMINAL_LE_ZERO            The nominal interest rate cannot be less
                                       & than or equal to zero, while
                                       & "nominal_rate" = %(R1) is given.
15026  IMSL_NPER_LT_ONE                The number of compounding periods cannot
                                       & be less than one, while "n_periods" =
                                       & %(I1) is given.
15027  IMSL_NPER_EQ_ZERO               The total number of payment periods
                                       & cannot be equal to zero, while
                                       & "n_periods" = %(I1) is given.
15028  IMSL_NPER_LE_ZERO               The total number of payment periods
                                       & cannot be less than or equal to zero,
                                       & while "n_periods" = %(I1) is given.
15029  IMSL_POW_DOMAIN_ERROR           The interest payment cannot be computed
                                       & using "rate" = %(R1), "n_periods" =
                                       & %(I1), and "period" = %(I2).
15030  IMSL_POW_DOMAIN_ERROR_2         The periodic payment cannot be computed
                                       & using "rate" = %(R1) and "n_periods"
                                       & = %(I1).
15031  IMSL_POW_DOMAIN_ERROR_3         The future value cannot be computed
                                       & using "rate" = %(R1) and "n_periods"
                                       & = %(I1).
15032  IMSL_WHEN_INVALID               Argument "when" should be
                                       & IMSL_AT_END_OF_PERIOD or
                                       & IMSL_AT_BEGINNING_OF_PERIOD.
15033  IMSL_PV_LE_ZERO                 The present value cannot be less than
                                       & or equal to zero, while
                                       & "present_value" = %(R1) is given.
15034  IMSL_FREQUENCY_LT_ONE           Frequency cannot be less than one,
                                       & while "frequency" = %(I1) is given.
15035  IMSL_FREQUENCY_ERROR            The frequency must be IMSL_ANNUAL,
                                       & IMSL_SEMIANNUAL or IMSL_QUARTERLY.
15036  IMSL_BASISPART_ERROR            Basis part should be
                                       & IMSL_BASISPART_30E360,
                                       & IMSL_BASISPART_365,
                                       & IMSL_BASISPART_ACTUAL
                                       & or IMSL_BASISPART_NASD.
15037  IMSL_DAY_COUNT_ERROR            Day count basis should be one of
                                       & IMSL_DAY_CNT_BASIS_ACTUALACTUAL,
                                       & IMSL_DAY_CNT_BASIS_NASD,
                                       & IMSL_DAY_CNT_BASIS_ACTUAL360,
                                       & IMSL_DAY_CNT_BASIS_ACTUAL365 or
                                       & IMSL_DAY_CNT_BASIS_30E360.
15038  IMSL_YEAR_ERROR                 Year cannot be negative, while year
                                       & = %(I1) is given.
15039  IMSL_MONTH_ERROR                Month must be between zero and eleven
                                       & , while month = %(I1) is given.
15040  IMSL_DAY_ERROR                  Day must be greater than zero and less
                                       & than 32, while day = %(I1) is given.
15041  IMSL_FEB_29_DAYS                February cannot have more than 29 days,
                                       & while month = %(I1) and day = %(I2)
                                       & are given.
15042  IMSL_MONTH_31_DAYS              Month, %(I1), cannot have 31 days, while
                                       & day = %(I2) is given.
15043  IMSL_MONTH_ERROR_2              The month cannot be greater than 12 or
                                       & less than -12, while month = %(I1) is
                                       & given.
15044  IMSL_NOT_LEAP_YEAR              The year, %(I1), is not a leap year.
                                       & February cannot have 29 days, while
                                       & day = %(I2) is given.
15045  IMSL_DATES_NOT_IN_ORDER         Dates are not correct.  They should be
                                       & in chronological order.
15046  IMSL_MATURITY_LT_STL            The maturity date must be later than
                                       & the settlement date.
15047  IMSL_STL_LT_ISSUE               The settlement date must be later than
                                       & the issue date.
15048  IMSL_FIRST_PER_LT_ISSUE         The end of first period must be later
                                       & than the issue date.
15049  IMSL_MATURITY_LT_ISSUE          The maturity date must be later than
                                       & the issue date.
15050  IMSL_EDATE_LT_STDATE            The ending date must be later than the
                                       & initial date.
15051  IMSL_COUPRATE_LT_ZERO           The annual coupon rate cannot be less
                                       & than zero, while "coupon_rate" = %(R1)
                                       & is given.
15052  IMSL_COUPRATE_LE_ZERO           The annual coupon rate cannot be less
                                       & than or equal to zero, while
                                       & "coupon_rate" = %(R1) is given.
15053  IMSL_RATE_LE_ZERO               The interest rate cannot be less than or
                                       & equal to zero, while "rate" = %(R1)
                                       & is given.
15054  IMSL_RATE_EQ_NEG_ONE            The interest rate cannot be negative
                                       & one, while "rate" = %(R1) is given.
15055  IMSL_RATE_LE_NEG_ONE            The interest rate cannot be less than or
                                       & equal to negative one, while "rate" =
                                       & %(R1) is given.
15056  IMSL_RATE_LT_ZERO               The interest rate cannot be less than
                                       & zero, while "rate" = %(R1) is given.
15057  IMSL_RATE_LE_ZERO_2             The rate of depreciation cannot be less
                                       & than or equal to zero, while "rate" =
                                       & %(R1) is given.
15058  IMSL_RATE_GE_PT_FIVE            The rate of depreciation cannot be
                                       & greater than or equal to 50%, while
                                       & "rate" = %(R1) is given.
15059  IMSL_DISC_RATE_LE_ZERO          The discount rate cannot be less than
                                       & or equal to zero, while
                                       & "discount_rate" = %(R1) is given.
15060  IMSL_PRICE_LE_ZERO              The price cannot be less than or equal
                                       & to zero, while "price" = %(R1) is
                                       & given.
15061  IMSL_REDEMPTION_LE_ZERO         The redemption value cannot be less than
                                       & or equal to zero, while "redemption"
                                       & = %(R1) is given.
15062  IMSL_YIELD_LT_ZERO              The annual yield cannot be less than
                                       & zero, while "yield" = %(R1) is given.
15063  IMSL_COST_LE_ZERO               The cost of the asset cannot be less
                                       & than or equal to zero, while "cost"
                                       & = %(R1) is given.
15064  IMSL_PAR_LE_ZERO                The par value cannot be less than or
                                       & equal to zero, while "par_value" =
                                       & %(R1) is given.
15065  IMSL_INVEST_LE_ZERO             The amount invested cannot be less than
                                       & or equal to zero, while "investment"
                                       & = %(R1) is given.
15066  IMSL_DIV_BY_ZERO                The amount received at maturity cannot
                                       & be computed.
15067  IMSL_PERIOD_GT_LIFE_2           The period cannot be greater than the
                                       & useful life + one, while "period"
                                       & = %(I1) and "life" = %(I2) are given.
15068  IMSL_LIFE_GT_ONE_YR             The time between settlement and
                                       & maturity cannot be longer than one
                                       & year.
15069  IMSL_END_LT_START_DATES         Date cannot be earlier than the first
                                       & date in argument "dates".
15070  IMSL_RETRY_GUESS_MAX            Unable to find the answer using
                                       & initial/default guess values and
                                       & default max value.  Rerun with a new
                                       & "guess" or a new "max" value.
15200  IMSL_DIM_OF_HYPER_REC_0         The dimension of the hyper-rectangle
                                       & "n" = %(I1).  "n" must be greater than
                                       & zero.
15201  IMSL_SKIP_NEG                   Argument skip cannot be less than or
                                       & equal to zero, while "skip" = %(I1) is
                                       & given.
15202  IMSL_BASE_NOT_PRIME             Argument base must be a prime at least
                                       & as large as the dimension, while
                                       & "base" = %(I1) and "dim" = %(I2) are
                                       & given.
16001  IMSL_NUM_EQ_CONSTR              The number of equality constraints must
                                       & be nonnegative while "me" = %(I1) is
                                       & given.
16002  IMSL_XLB_LE_XUB                 The lower bound cannot be greater than
                                       & the upper bound while "xlb[%(I1)]" =
                                       & %(R1) and "xub[%(I1)]" = %(R2)
16003  IMSL_ITMAX_LE_ZERO              Maximum number of iterations must be
                                       & greater than zero, but "itmax" = %(I1)
                                       & is given.
16004  IMSL_BAD_IPRINT                 The print indicator must be equal to 0,
                                       & 1, 2, 3, or 4 while "iprint" = %(I1)
                                       & is given
16005  IMSL_BAD_TAU0                   The unscaled penalty-term bound must be
                                       & greater than zero while "tau0" = %(R1)
                                       & is given.
16006  IMSL_BAD_DEL0                   The maximum of delta must be greater
                                       & than zero while "del0" = %(R1) is
                                       & given.
16007  IMSL_BAD_DELMIN                 The allowable constraint violations must
                                       & be greater than zero while "delmin" =
                                       & %(R1) is given.
16008  IMSL_BAD_SMALLW                 The error allowed in the multipliers
                                       & must be greater than zero while
                                       & "smallw" = %(R1) is given.
16009  IMSL_BAD_SCFMAX                 The bounds for the internal automatic
                                       & scaling of the objective function must
                                       & be greater than zero while "scfmax" =
                                       & %(R1) is given.
16010  IMSL_BAD_CONSTR_EVAL            Constraint evaluation returns an error
                                       & with current point.
16011  IMSL_BAD_OBJ_EVAL               Objective evaluation returns an error
                                       & with current point.
16012  IMSL_WORKING_SET_SINGULAR       Working set is singluar in dual extended
                                       & QP.
16013  IMSL_QP_INFEASIBLE              QP problem is seemingly infeasible. The
                                       & solution process is severely corrupted
                                       & by roundoff, most probably a problem
                                       & of bad scaling which was not overcome
                                       & by the internal scaling techniques.
16014  IMSL_STATIONARY_PT_ERR_1        A stationary point of the penalty
                                       & function has been located which is not
                                       & feasible.
16015  IMSL_STATIONARY_PT_ERR_2        A stationary point of the penalty
                                       & function has been located which is not
                                       & feasible.  Or, limiting accuracy
                                       & reached for a singular problem, with
                                       & termination criteria being too strong.
16017  IMSL_STATIONARY_PT_ERR_3        A stationary point of the penalty
                                       & function which is not feasible for the
                                       & original problem has been located.
                                       & Try some other initial guess.
16018  IMSL_SLOW_PRIMAL_PROGRESS       Very slow primal progress.  The problem
                                       & is singular or ill-conditioned.
16019  IMSL_SLOW_PROGRESS_IN_X         Very slow progress in X, the problem is
                                       & singular.
16020  IMSL_LIN_DEP_GRAD               The gradients in the working set are
                                       & linearly dependent, such that a full
                                       & regularized QP is solved.  It may
                                       & occur in a problem that the second
                                       & order sufficiemcy condition is not
                                       & satisfied and the matrix of gradients
                                       & of binding constraints is singular
                                       & or very ill-conditioned.
16021  IMSL_SMALL_CHANGE               For max(n, 10) consecutive steps, there
                                       & were only small changes in the penalty
                                       & function without the other termination
                                       & criteria satisfied.
16022  IMSL_BAD_DIFFTYPE               The numerical differentiation method
                                       & must be 1, 2, or 3, but "difftype" =
                                       & %(I1) is given.
16023  IMSL_STEPSIZE_SELECTION         No acceptable stepsize in [sigsm,
                                       & sigla].  This is often due to a
                                       & programming error in the user supplied
                                       & (analytic) gradients.  It may also be
                                       & due to termination criteria that are
                                       & too stringent for the problem at hand,
                                       & because of evaluation unpreciseness of
                                       & functions and/or gradients or because
                                       & of ill conditioning of the (projected)
                                       & Hessian matrix.
17000 IMSL_NEED_K_GE_ZERO              "k" must be greater than or equal to
                                       & zero while %(i1) is given.
17001 IMSL_LDC_GE_M                    "ldc" must be greater than or equal to
                                       & "m" and greater than zero while "ldc"
                                       & = %(i1) and "m" = %(i2) are given.
17002 IMSL_LDA_GE_M                    "lda" must be greater than or equal to
                                       & "m" and greater than zero when
                                       & "transa" = "n", but "lda" = %(i1) and
                                       & "m" = %(i2) are given.
17003 IMSL_LDA_GE_K                    "lda" must be greater than or equal to
                                       & "k" and greater than zero when
                                       & "transa" = "t" or "c", but "lda" =
                                       & %(i1) and "k" = %(i2) are given.
17004 IMSL_WRONG_TRANSA_VALUE          "transa" must be set equal to "n" or "t"
                                       & or "c" while %(l1) is given.
17005 IMSL_LDB_GE_K                    "ldb" must be greater than or equal to
                                       & "k" and greater than zero when
                                       & "transb" = "n", but "ldb" = %(i1) and
                                       & "k" = %(i2) are given.
17006 IMSL_LDB_GE_N                    The argument "ldb" = %(i1).  It must be
                                       & at least as large as "n" = %(i2).
17007 IMSL_INVALID_TASK                Argument "task" = %(I1) must be one of
                                       & IMSL_DEA_INITIALIZE or IMSL_DEA_RESET.
17008 IMSL_TOLERANCES_MUT_EXC          IMSL_ATOL_RTOL_ARRAYS and
                                       & IMSL_ATOL_RTOL_SCALARS are mutually
                                       & exclusive.
17009 IMSL_INVALID_STATUS_IDO          The status indicator IDO = %(i1).  It
                                       & must be in the range 1 to 8.
17010 IMSL_INVALID_INITIAL_OPTIONS     Some element of options 1-15 is not
                                       & zero or one.
17011 IMSL_INVALID_PROBLEM_START       User should set IDO=3 to release
                                       & workspace and do other final steps,
                                       & before going to the next problem with
                                       & IDO=1.
17012 IMSL_REV_COMM_REQUIRED_1         If not allocating workspace for the
                                       & partial derivative matrix, then
                                       & reverse communication needs to be
                                       & used for solving the linear system.
17013 IMSL_ERROR_CONDITION_OCCURRED    An error condition has occurred.
17014 IMSL_INVALID_MAX_BDF_ORDER       The maximum order must be less than or
                                       & equal to 5. The requested value is
                                       & %(i1).  The program will use 5.
17015 IMSL_HMAX_MUST_BE_SET            Option 7 is set to %(i1). The value HMAX
                                       & needs to be set by the user. The
                                       & default value HMAX= %(r1) is used.
17016 IMSL_H0_MUST_BE_SET              Option 8 is set to %(i1). The value H0
                                       & needs to be set by the user. The
                                       & default H0= %(r1)is used.
17017 IMSL_DEA_TOO_MANY_STEPS          At the current t=%(r1), %(i1) steps were
                                       & taken on this call before reaching
                                       & "tend".
17018 IMSL_INVALID_NEQ                 The number of equations "neq" = %(i1).
                                       & It must be at least 1.
17019 IMSL_INVALID_ABS_TOL             The absolute tolerance "atol" = %(r1).
                                       &  It must be greater than or equal to
                                       & zero.
17020 IMSL_INVALID_REL_TOL             The relative tolerance "rtol" = %(r1).
                                       &  It must be greater than or equal to
                                       & zero.
17021 IMSL_ERROR_DURING_LAST_STEP      The last step terminated with an error
                                       & condition and no appropriate action
                                       & was taken. The problem is terminated.
17022 IMSL_T_BARRIER_MUST_BE_SET       The value "t_barrier" needs to be set
                                       & by the user.
17023 IMSL_TOO_MUCH_ACCURACY_REQ       At t= %(r1), too much accuracy requested
                                       & for precision of the machine.
                                       & "atol"[%(i1)]= %(r2),
                                       & "rtol"[%(i1)]=%(r3).  "rtol" and
                                       & "atol" need to be increased.
17024 IMSL_INVALID_WEIGHT_ELEM         At t= %(r1), some element of the weight
                                       & vector is less than or equal to 0.0.
17025 IMSL_ERROR_TEST_FAILURE          At t = %(r1) and stepsize H = %(r2), the
                                       & error test failed repeatedly or with
                                       & abs(H)=hmin.
17026 IMSL_CORRECTOR_FAILED            At t = %(r1) and stepsize H = %(r2), the
                                       & corrector failed to converge
                                       & repeatedly or with abs(H)=%(r3).
17027 IMSL_ITERATION_MATRIX_SINGULAR   At t = %(r1) and stepsize H = %(r2), the
                                       & iteration matrix is singular.
17028 IMSL_CORRECTOR_DID_NOT_CONVERGE  At t = %(r1) and stepsize H = %(r2), the
                                       & corrector could not converge. Also the
                                       & error test failed repeatedly.
17029 IMSL_CORR_CONV_PANIC_FLAG_1      At t = %(r1) and stepsize H = %(r2), the
                                       & corrector could not coverge because
                                       & the user passed a panic flag value of
                                       & -1.
17030 IMSL_CORR_CONV_PANIC_FLAG_2      At t = %(r1) and stepsize H = %(r2), the
                                       & corrector could not coverge because
                                       & the user passed a panic flag value of
                                       & -2.
17031 IMSL_CANNOT_COMPUTE_YPR          At t = %(r1) and stepsize H = %(r2), the
                                       & initial yprime could not be computed.
17032 IMSL_INVALID_MAX_ORD             "max_bdf_order" = %(i1) is not in the
                                       & range of 1 to 5.
17033 IMSL_MORE_WK_NEEDED              WK size needed, LENRW =%(i1), exceeds
                                       & the size given, LRW =%(i2).
17034 IMSL_MORE_IWK_NEEDED             IWK size needed, LENIW =%(i1), exceeds
                                       & the size given, LIW =%(i2).
17035 IMSL_INVALID_RTOL_ELEMENT        Some element of "rtol" is less than 0.0.
17036 IMSL_INVALID_ATOL_ELEMENT        Some element of "atol" is less than 0.0.
17037 IMSL_INVALID_ATOL_RTOL           All elements of "rtol" and "atol" are
                                       & 0.0.
17038 IMSL_INVALID_T_BARRIER           "t_barrier" = %(r1) is behind "tend" =
                                       & %(R2). ("t_barrier" - "tend") = %(r3).
17039 IMSL_MAX_STEP_LT_ZERO            The maximum stepsize is %(r1) which is
                                       & less than 0.0.
17040 IMSL_INVALID_TEND                The value "tend" = %(r1) is behind "t" =
                                       & %(r2). ("tend" - "t") is %(r3).
17041 IMSL_INVALID_INITIAL_STEPSIZE    The initial stepsize is specified to
                                       & be %(r1).
17042 IMSL_INVALID_WEIGHT_SETTING      Some element of weight vector is less
                                       & than or equal to 0.0.
17043 IMSL_T_TEND_TOO_CLOSE            The value "tend" = %(r1) is too close to
                                       & "t" = %(r2) to start integration.
17044 IMSL_INVALID_T_BARRIER_2         "t_barrier" = %(r1) is behind "t" =
                                       & %(r2). ("t_barrier" - "t") is %(r3).
17045 IMSL_T_TOUT_EQUAL                "t" = "tout" = %(r1).
17046 IMSL_TOO_MANY_ERRORS             Repeated occurrences of illegal input.
                                       & Problem terminated.
17047 IMSL_INVALID_PROB_START          The argument "task" =
                                       & IMSL_DEA_INITIALIZE but a previous
                                       & problem was not finished by a call
                                       & with "task" = IMSL_DEA_RESET.
17050 IMSL_MULTIPLE_SOLUTIONS          Multiple solutions giving essentially
                                       & the same minimum exist.
17051 IMSL_SOME_CONSTRAINTS_DISCARDED  Some constraints were ignored discared
                                       & because they were too linearly
                                       & dependent on other active constraints.
17052 IMSL_ALL_CONSTR_NOT_SATISFIED    All constraints are not satisfied. L1
                                       & minimization was applied to all
                                       & constraints (including bounds and
                                       & simple variables) but the equalities,
                                       & to approximate violated non-equalities
                                       & as well as possible.  If a feasible
                                       & solution is possible then try using
                                       & refinement by supplying optional
                                       & argument IMSL_REFINEMENT.
17053 IMSL_CYCLING_OCCURRING           The algorithm appears to be cycling.
                                       & Using refinement may help.
17054 IMSL_INCONSISTENT_XUB            The variable bound in "xub[%(I1)]" =
                                       & %(F1) is inconsistent with the default
                                       & lowerbound 0.0.
17055 IMSL_UPPER_LIMIT_NEEDED          Optional argument IMSL_UPPER_LIMIT must
                                       & be supplied if "irtype[%(I1)]" =
                                       & %(I2).
17056 IMSL_INVALID_IRTYPE              The values for the type of constraint
                                       & must be either 0, 1, 2, 3 or 4, but
                                       & "irtype[%(I1)]" = %(I2) is given.
17057 IMSL_PIVOT_NOT_FOUND             An acceptable pivot could not be found.
17058 IMSL_UNEXPECTED_DRIVER_ERROR     An unexpected error, %(I1), has
                                       & occurred.
17059 IMSL_MAX_ITN_IGNORED             The optional argument IMSL_MAX_ITN is
                                       & ignored when optional argument
                                       & IMSL_USE_UPDATED_ALGORITHM is used.
17060 IMSL_INVALID_STATUS_IDO_2        The status indicator IDO = %(i1).  It
                                       & must be in the range 1 to 9.
17061 IMSL_PROB_VACUOUS                The problem appears to be vacuous.
17067 IMSL_INVALID_TASK_1              Argument "task" = %(I1) must be one of
                                       & IMSL_PDE_INITIALIZE or IMSL_PDE_RESET.
17068 IMSL_BAD_TENSION_VALUE           Tension values must be in [-1,1],
                                       & but tension[%(I1)] = %(R1).
17069 IMSL_BAD_CONTINUITY_VALUE        Continutity values must be in [-1,1],
                                       & but continuity[%(I1)] = %(R1).
17070 IMSL_BAD_BIAS_VALUE              Bias values must be in [-1,1],
                                       & but bias[%(I1)] = %(R1).
17071 IMSL_A_LESS_THAN_B               "a" must be less than "b".  "a" is given
                                       & as %(r1), and "b" is given as %(r2).
17072 IMSL_TOL_LENGTH                  "tol" must be less than the length of
                                       & the interval ("a", "b").  "tol" is
                                       & given as, %(r1), and the length of the
                                       & interval is %(r2).
17073 IMSL_TOL_TOO_SMALL               "tol" is too small.  The interval has
                                       & been reduced as far as numerically
                                       & possible.  "lower", "upper", and
                                       & "xmin" may be acceptable.
17074 IMSL_NOT_UNIMODAL                Due to rounding errors, the function
                                       & does not appear to be unimodal.
                                       &  "lower", "upper", and "xmin" may be
                                       & acceptable.
17076 IMSL_ZERO_BOUNDS                 The bounds for the roots, [%(r1), %(r2)]
                                       & are inconsistent.
17077 IMSL_XSCALE_NOT_POSITIVE         The value of "xscale" must be positive,
                                       & but is %(r1).
17078 IMSL_NUM_ROOTS_NOT_POSITIVE      The value of "num_roots" must be
                                       & positive, but is %(i1).
17079 IMSL_NUM_MAX_EVALS_NOT_POSITIVE  The value of "max_evals" must be
                                       & positive, but is %(i1).
17081 IMSL_MIN_SEPARATION_NEGATIVE     The value of "min_separation" must be
                                       & not be negative, but is %(r1).
17082 IMSL_ERR_X_NEGATIVE              The value of "err_x" must be not be
                                       & negative, but is %(r1).
17083 IMSL_ZEROS_MAX_EVALS_EXCEEDED    The maximum number of function
                                       & evaluations, %(i1), has been exceeded
                                       & with only %(i2) of the requested %(i3)
                                       & roots found.
17084 IMSL_XGUESS_OUT_OF_BOUNDS        Guesses must be inside of the bounds,
                                       & but bound interval is [%(r1),%(r2)]
                                       & and xguess[%(i1)] = %(r3).
17085 IMSL_ARG_TOO_BIG                 "%(S1)" is too large, it has been reset
                                       & to %(i1).
17086 IMSL_INTERP_OUTSIDE_DOMAIN       The interpolation point is outside the
                                       & domain of the table, so extrapolation
                                       & is used.
17087 IMSL_TOO_MANY_DERIVATIVES        Too many derivatives requested for the
                                       & polynomial degree used.
17088 IMSL_POLY_DEGREE_TOO_LARGE       One of the polynomial degrees requested
                                       & is too large for the number of
                                       & gridlines in that direction.
17089 IMSL_WORK_SIZE_TOO_SMALL         The sizes of the work[] and iwork[]
                                       & arrays must be at least %(i1) and
                                       & %(i2) respectively.
17090 IMSL_OPTIONS_TOGETHER            %(S1) option must be used with %(S2)
                                       & or %(S2) option.
17091 IMSL_OPTIONS_MUL_EXCLUSIVE       %(S1), %(S2) and %(S3) options are
                                       & mutually exclusive.
17092 IMSL_OPTIONS_VALUES              "%(S1)" must be %(I1) if "%(S2)" =
                                       & %(I2).
17093 IMSL_ROTL_ATOL_ZERO              "rtol" and all elements of "atol" are
                                       & zero.
17094 IMSL_INEQUALITY_VIOLATION_10     "%(S1)[%(I1)]" = %(F1).  "%(S1)[%(I1)]"
                                       & must be greater than or equal to
                                       & %(F2).
17095 IMSL_INEQUALITY_VIOLATION_9      "%(S1)" = %(r1) and "%(S2)" = %(r2).
                                       & "%(S1)" must be greater than "%(S2)".
17096 IMSL_SYSTEM_CONVERGENCE          The system has index %(I1) but
                                       & convergence of "%(S1)" values was not
                                       & achieved.
17097 IMSL_SYS_INDEX_GT_ONE            The system appears to have index > 1.
17098 IMSL_SYS_NOT_DIFF_ALG            This is not a differential-algebraic
                                       & system.
17099 IMSL_ERROR_TEST_FAILURE_2        The error test has failed repeatedly.
17100 IMSL_ACCURACY_EXCEEDED_1         Accuracy requested exceeds machine
                                       & precision.
17101 IMSL_STEPS_EXCEEDED              More than "%(S1)"=%(I1) steps taken
                                       & between output points.
17102 IMSL_CORRECTOR_FAILED_3          The corrector iteration failed
                                       & repeatedly to converge.
17103 IMSL_SINGULAR_MATRIX_1           The iteration matrix is singular.
17104 IMSL_UNABLE_TO_SOLVE_YPR         Unable to solve for initial "yprime".
17105 IMSL_CONSTRAINTS_INCONSIST       Constraints appear inconsistent.
17106 IMSL_TSTOP_INCONSIST_T           "tstop" is not consistent with "t".
17107 IMSL_TEND_CLOSE_TO_T             "tend" is too close to "t".
17108 IMSL_TEND_GT_TSTOP               "tend" is greater than "tstop"
17109 IMSL_BESSEL_CONT_FRAC            Continued fractions have failed to
                                       & converge. The double precision version
                                       & of this function provides the most
                                       & accurate solution.
17110 IMSL_NO_PROGRESS_2               Due to the effect of computer rounding
                                       & error, the algorithm has not made good
                                       & progress.
17111 IMSL_BAD_DIAG_PIVOT_THRESH       The threshold pivoting parameter
                                       & "diag_pivot_thresh" must be in [0,1],
                                       & but is %(r1).
17112 IMSL_BAD_TUNING_PARAM            All performance tuning parameters must
                                       & be > 0, but sp_ienv[%(i1)] = %(i2).
17113 IMSL_BAD_COL_ORDERING_METHOD     The value for optional argument
                                       & IMSL_COLUMN_ORDERING_METHOD must be of
                                       & enumeration type Imsl_col_ordering.
                                       & Valid choices for variable "method"
                                       & are "IMSL_NATURAL", "IMSL_MMD_ATA",
                                       & "IMSL_MMD_AT_PLUS_A", "IMSL_COLAMD"
                                       & and "IMSL_PERMC".
17114 IMSL_PERMC_REQU_VEC              The choice of column ordering method
                                       & IMSL_PERMC requires optional
                                       & argument IMSL_COLPERM_VECTOR.
17115 IMSL_BAD_EQUILIBRATION_METHOD    The value of variable
                                       & "equilibration_method", defined in
                                       & the structure supplied through
                                       & optional argument
                                       & IMSL_SUPPLY_SPARSE_LU_FACTOR,
                                       & must be 0, 1, 2 or 3, but is %(i1).
17116 IMSL_PERM_VEC_NOT_ONE_TO_ONE     Vector "%(s1)" must contain a
                                       & permutation of the set (0,...,%(i1)),
                                       & but "%(s1)" contains the value %(i2)
                                       & at least twice.
17117 IMSL_PERM_VEC_RANGE              Vector "%(s1)" must contain a
                                       & permutation of the set (0,...,%(i1)),
                                       & but %(s1)[%(i2)] = %(i3).
17118 IMSL_VECTOR_NOT_POSITIVE         All values in array "%(s1)" must be > 0,
                                       & but %(s1)[%(i1)] = %(r1).
17119 IMSL_MISSING_INPUT_MATRIX        The given constellation of input
                                       & arguments requires an input matrix.
17120 IMSL_MISSING_RHS                 The right-hand side vector "b" is
                                       & missing.
17121 IMSL_BAD_EQUILIBRATE             The value of optional argument
                                       & IMSL_EQUILIBRATE must be 0 or 1 while
                                       & "equilibrate" = %(i1) is given.
17122 IMSL_BAD_TRANSPOSE               The value of optional argument
                                       & IMSL_TRANSPOSE must be 0 or 1 while
                                       & "transpose" = %(i1) is given.
17123 IMSL_BAD_TRANSPOSE_COMPLEX       The value of optional argument
                                       & IMSL_TRANSPOSE must be 0, 1 or 2 while
                                       & "transpose" = %(i1) is given.
17124 IMSL_BAD_ITERATIVE_REFINEMENT    The value of optional argument
                                       & IMSL_ITERATIVE_REFINEMENT must be 0 or
                                       & 1 while "refine" = %(i1) is given.
17125 IMSL_BAD_FACTOR_SOLVE            The value of optional argument
                                       & IMSL_FACTOR_SOLVE must be 0, 1 or 2
                                       & while "factsol" = %(i1) is given.
17126 IMSL_BAD_SYMMETRIC_MODE          The value of optional argument
                                       & IMSL_SYMMETRIC_MODE must be 0 or 1
                                       & while "symm_mode" = %(i1) is given.
17127 IMSL_BAD_SUPP_RET_LU_FACTOR      Both "IMSL_SUPPLY_SPARSE_LU_FACTOR" and
                                       & "IMSL_RETURN_SPARSE_LU_FACTOR" cannot
                                       & be specified.
17128 IMSL_COLAMD_INT_OVERFLOW	       An integer overflow occured when
                                       & computing the memory required for
                                       & function l_colamd.
17129 IMSL_BAD_ROW_INDEX_1             All row indices must be non-negative
                                       & and less than "n" = %(i1), but
                                       & a[%(i2)].row = %(i3).
17130 IMSL_BAD_COLUMN_INDEX_1          All column indices must be non-negative
                                       & and less than "n" = %(i1), but
                                       & "a[%(i2)].col" = %(i3).
17131 IMSL_BAD_HB_COL_PTR_1            In CSC format, all entries of the column
                                       & pointer vector must be non-negative
                                       & and less than or equal to "nz" =
                                       & %(i1), but HB_col_ptr[%(i2)] = %(i3).
17132 IMSL_BAD_HB_ROW_IND_1            In CSC format, all entries of the row
                                       & index vector must be non-negative
                                       & and less than "n" = %(i1), but
                                       & HB_col_ptr[%(i2)] = %(i3).
17133 IMSL_PERM_VEC_NOT_ONE_TO_ONE_1   Vector "%(s1)", defined in the structure
                                       & supplied through optional argument
                                       & IMSL_SUPPLY_SPARSE_LU_FACTOR, must
                                       & contain a permutation of the set
                                       & (0,...,%(i1)), but "%(s1)" contains
                                       & the value %(i2) at least twice.
17134 IMSL_PERM_VEC_RANGE_1            Vector "%(s1)", defined in the structure
                                       & supplied through optional argument
                                       & IMSL_SUPPLY_SPARSE_LU_FACTOR, must
                                       & contain a permutation of the set
                                       & (0,...,%(i1)), but %(s1)[%(i2)] =
                                       & %(i3).
17135 IMSL_VECTOR_NOT_POSITIVE_1       All values in array "%(s1)", defined in
                                       & the structure supplied through
                                       & optional argument
                                       & IMSL_SUPPLY_SPARSE_LU_FACTOR,
                                       & must be > 0, but %(s1)[%(i1)] = %(r1).
17136 IMSL_CUDA_INIT                   CUDA Library Initialization Failed.
                                       & Possible NVIDIA Driver compatibility.
                                       & Using the CPU version of "%(s1)".
17137 IMSL_COPY_TO_GPU                 Error copying data from the CPU to the
                                       & GPU.  Using the CPU version of
                                       & "%(s1)".
17138 IMSL_COPY_TO_CPU                 Error copying data from the GPU to the
                                       & CPU.  Using the CPU version of
                                       & "%(s1)".
17139 IMSL_GPU_ALLOCATION              Error allocating memory on the GPU.
                                       & Using the CPU version of "%(s1)".
17140 IMSL_DP_MATH_NOT_AVAIL           Double Precision arithmetic is not
                                       & available on the GPU. Using the CPU
                                       & version of "%(s1)".
17141 IMSL_FCN_NOT_USED                The specified function name "%(s1)" has
                                       & not yet been used.
17142 IMSL_CUDA_SET_ERROR              Invalid argument %(i1).  The argument
                                       & must be greater than or equal to zero.
17143 IMSL_CUDA_ENUM_NAME              The argument specified for "cuda_name"
                                       & = %(i1) is not valid.
17144 IMSL_GPU_NEGATIVE_INCREMENT      A negative increment for CUDA BLAS are
                                       & not allowed.  Execution is continuing
                                       & using the IMSL version.
17145 IMSL_CUDA_FREE                   An error was encountered when freeing
                                       & memory from the GPU. Execution is
                                       & continuing using the CPU version of
                                       & "%(s1)".
17146 IMSL_USER_CUDA_FREE              An error was encountered freeing memory
                                       & from the GPU.
17147 IMSL_CUDA_NOT_IMPLEMENTED        The specified function name "%(s1)" does
                                       & not have a CUDA implementation.
17148 IMSL_CUDA_NOT_AVAIL              The CUDA Toolkit algorithms are not
                                       & implemented using this version of the
                                       & library.  Use the CUDA link
                                       & environment variables to leverage the
                                       & CUDA Toolkit algorithms.
17149 IMSL_ADJUST_STEPSIZE1            The current step length = %(r1), is less
                                       & than the minimum steplength, "hmin" =
                                       & %(r2), at the conclusion of the
                                       & starting phase of the integration.
                                       & Decreasing "hmin" to a value less than
                                       & or equal to %(r1) may help.
17150 IMSL_ADJUST_STEPSIZE2            The integrator needs to take a step
                                       & smaller than %(r1) in order to
                                       & maintain the requested local error.
                                       & Decreasing "hmin" to a value less than
                                       & or equal to %(r1) may help.
17151 IMSL_INCORRECT_TEND              Either the new output point precedes the
                                       & last one or it has the same value.
                                       & "tend" = %(r1).
17152 IMSL_ADJUST_ERROR_TOLERANCE      The step length, H = %(r1), is so small
                                       & that when Tn + H is formed, the result
                                       & will be the same as Tn, where Tn is
                                       & the base value of the independent
                                       & variable. If this problem is not due
                                       & to a nonintegrable singularity, it can
                                       & probably be corrected by translating
                                       & "t" so that it is closer to 0.
                                       & Reducing the error tolerance for the
                                       & equations through argument "eqnerr"
                                       & may also help with this problem.
17153 IMSL_ERROR_TOLERANCE             A local error tolerance of zero has been
                                       & requested.
17154 IMSL_ERROR_PREVIOUS              A fatal error has occurred because of
                                       & the error reported in the previous
                                       & error message.
17155 IMSL_UNKNOWN_OPTION_ERROR        Either an option has been specified
                                       & improperly or not enough storage has
                                       & been allocated.
17156 IMSL_TOLERANCE_TOO_SMALL         The requested error tolerance, %(r1) is
                                       & too small. Using %(r2) instead.
17157 IMSL_RESTART                     The stepsize has been reduced too
                                       & rapidly. The integrator is going to
                                       & do a restart.
17158 IMSL_ORDER_ERROR                 The order of the equation must be 1 or 2
                                       & but "korder[%(i1)]" = %(i2).
17159 IMSL_CUFFT_PLAN_ERROR            An error was encountered setting up the
                                       & problem using the CUDA Toolkit
                                       & algorithm. Using the IMSL CPU
                                       & algorithm instead.
17160 IMSL_CUFFT_COPY_TO_GPU           An error was encountered copying the
                                       & data from the CPU to the GPU.  Using
                                       & the IMSL CPU algorithm instead.
17161 IMSL_CUFFT_ERROR                 An error was encountered executing the
                                       & problem on the GPU.  Using the
                                       & IMSL CPU algorithm instead.
17162 IMSL_CUFFT_COPY_TO_CPU           An error was encountered copying the
                                       & data from the GPU to the CPU.  Using
                                       & the IMSL CPU algorithm instead.
17163 IMSL_CUFFT_FREE                  An error was encountered when freeing
                                       & memory from the GPU. Using the
                                       & IMSL CPU algorithm instead.
17164 IMSL_CUFFT_ALLOCATION            An error was encountered allocating
                                       & memory on the GPU.  Using the
                                       & IMSL CPU algorithm instead.
17165 IMSL_ZERO_ROW                    Row %(i1) of the constraint matrix has
                                       & no entries.
17166 IMSL_ZERO_COLUMN                 Column %(i1) of the constraint matrix
                                       & has no entries.
17167 IMSL_PRIMAL_UNBOUNDED            The primal problem is unbounded.
17168 IMSL_PRIMAL_INFEASIBLE           The primal problem is infeasible.
17169 IMSL_DUAL_INFEASIBLE             The dual problem is infeasible.
17170 IMSL_INIT_SOL_INFEASIBLE         The initial solution for the one-row
                                       & linear program is infeasible.
17171 IMSL_INCORRECTLY_ELIMINATED      Variable %(i1) is declared eliminated
                                       & but abs(xub[%(i1)]-xlb[%(i1)]) =%(r1),
                                       & which is greater than zero.
17172 IMSL_INCORRECTLY_ACTIVE          Variable %(i1) is declared active but
                                       & abs(xub[%(i1)]-xlb[%(i1)]) =%(r1),
                                       & which is numerically zero.
17173 IMSL_CONSTRAINT_MATRIX_REQUIRED  A constraint matrix must be defined, but
                                       & "a" is a NULL pointer and optional
                                       & argument "IMSL_CSC_FORMAT" is not
                                       & used.
17174 IMSL_SCALAR_LT_EQ_ZERO           "%(s1)" must be greater than zero while
                                       & "%(s1)" = %(r1) is given.
17175 IMSL_BAD_HB_ROW_IND_2            In CSC format, all entries of the row
                                       & index vector "%(s1)" must be
                                       & non-negative and less than "%(s2)" =
                                       & %(i1), but "%(s1)[%(i2)]" = %(i3).
17176 IMSL_ALL_FEAS_SOLS_OPTIMAL       The coefficients of the objective
                                       & function are all equal to zero.
                                       & Every feasible solution is also
                                       & optimal.
17177 IMSL_COEFF_MATRIX_REQUIRED       A coefficient matrix must be defined,
                                       & but "q" is a NULL pointer and optional
                                       & argument "IMSL_CSC_FORMAT" is not
                                       & used.
17178 IMSL_NONZERO_IN_HB_UP_TRIANGLE   Only non-zero elements in the lower
                                       & triangle of matrix %(s1), which is
                                       & defined in CSC format, are to be
                                       & specified. But element
                                       & %(s1)[%(i1),%(i2)] = %(r1) is given.
17179 IMSL_BAD_ROW_INDEX_2             All row indices of the constraint matrix
                                       & "%(s1)" must be non-negative and less
                                       & than "%(s2)" = %(i1), but
                                       & "%(s1)[%(i2)].row" = %(i3).
17180 IMSL_BAD_COLUMN_INDEX_2          All column indices of the constraint
                                       & matrix "%(s1)" must be non-negative
                                       & and less than "%(s2)" = %(i1), but
                                       & "%(s1)[%(i2)].col" = %(i3).
17181 IMSL_BAD_HB_COL_PTR_2            In CSC format, all entries of the column
                                       & pointer vector "%(s1)" must be
                                       & non-negative and less than or equal to
                                       & "%(s2)" = %(i1), but "%(s1)[%(i2)]" =
                                       & %(i3).
17182 IMSL_HB_COL_PTR_NOT_INCR_1       In CSC format, the entries in "%(s1)"
                                       & must be in increasing order, but
                                       & "%(s1)[%(i1)]" = %(i3) > %(i4)
                                       & = "%(s1)[%(i2)]".
17183 IMSL_DOUBLE_CONSTRAINT_VALS      In the constraint matrix %(s1) more than
                                       & one value of %(s1)[%(i1),%(i2)] is
                                       & given.
17184 IMSL_BAD_ROW_INDEX_3             All row indices of the coefficient
                                       & matrix "%(s1)" must be non-negative
                                       & and less than "%(s2)" = %(i1), but
                                       & "%(s1)[%(i2)].row" = %(i3).
17185 IMSL_BAD_COLUMN_INDEX_3          All column indices of the coefficient
                                       & matrix "%(s1)" must be non-negative
                                       & and less than "%(s2)" = %(i1), but
                                       & "%(s1)[%(i2)].col" = %(i3).
17186 IMSL_DOUBLE_COEFF_VALS           In the coefficient matrix %(s1) more
                                       & than one value for %(s1)[%(i1),%(i2)]
                                       & is given.
17187 IMSL_NOT_PSD_ON_DIAG             The diagonal element %(i1) of matrix
                                       & %(s1) is negative, %(s1)[%(i1),%(i1)]
                                       & = %(r1), but matrix %(s1) must be
                                       & positive semidefinite.
17188 IMSL_NONZERO_IN_UP_TRIANGLE_1    Only non-zero elements in the lower
                                       & triangle of the input matrix "%(s1)"
                                       & are to be specified. But
                                       & "%(s1)[%(i1)].row" = %(i2)
                                       & and "%(s1)[%(i1)].col" = %(i3).
17189 IMSL_BAD_CONSTRAINT_BOUNDS_1     The bounds given for constraint %(i1)
                                       & are inconsistent: "%(s1)[%(i1)]" =
                                       & %(r1) must not be greater than
                                       & "%(s2)[%(i1)]" = %(r2).
17190 IMSL_MAX_ITERATIONS_REACHED_1    The maximum number of iterations was
                                       & reached. The best answer will be
                                       & returned.  "%(s1)" = %(i1) was used,
                                       & a larger value may help complete the
                                       & algorithm.
17191 IMSL_SUBOPTIMAL_SOL_FOUND        A suboptimal solution was found after
                                       & %(i1) iterations.
17192 IMSL_CHOL_FAC_ACCURACY           The Cholesky factorization failed
                                       & because of accuracy problems.
17193 IMSL_DIAG_WEIGHT_TOO_SMALL       The diagonal element %(s1)[%i1] = %(r1)
                                       & of the diagonal weight matrix %(s2)
                                       & is too small.
17194 IMSL_CUDA_OUT_OF_MEMORY_2        An error was encountered allocating
                                       & memory required by the CUDA
                                       & implementation with "%(S1)" = %(I1)
                                       & and "%(S2)" = %(I2). Using the IMSL
                                       & CPU algorithm instead.
17195 IMSL_MAX_ITERATIONS_QPROG        The number of iterations has exceeded the maximum number
                                       & of iterations specified, maxitn = %(i1). Consider increasing 
                                       & the maximum allowed iterations or loosening the convergence 
                                       & criteria, small = %(r1).
17196 IMSL_WRONG_TRANSB_VALUE          "transb" must be set equal to "n" or "t"
                                       & or "c" while %(l1) is given.
17197 IMSL_LDB_GE_N_GEMM               ldb must be greater than or equal to N and
                                       & greater than zero when TRANSB = T or C, 
                                       & but LDB = %(i1) and N = %(i2) are given.
17198 IMSL_STOP_USER_FCN               Request from user supplied function to
                                       & stop algorithm.  User flag = "%(I1)".
17199 IMSL_NULL_MATRIX                 Though "nzq" = %(i1), the actual number of
                                       & nonzeros in the lower triangular part of
                                       & the Hessian matrix Q is equal to zero. But
                                       & the number of nonzeros must be greater than zero.
17200 IMSL_EQUALITY_VIOLATION          "%(S1)" must be equal to "%(S2)[%(I1)]" -
                                       & "%(S2)[%(I2)]" = %(I3), but "%(S1)"  = %(I4).
17201 IMSL_OPTIONS_MUL_EXCLUSIVE_1     The options "%(S1)" and "%(S2)" are
                                       & mutually exclusive. Only one can be specified
                                       & in a single invocation of this routine.
17202 IMSL_SYMFAC_COMP_REQUIRED        Option "IMSL_RETURN_SYMBOLIC_FACTOR" requires
                                       & computation of symbolic factor.
17203 IMSL_NONZ_HB_UP_TRIAN_COMPLEX    Only non-zero elements in the lower
                                       & triangle of matrix %(s1), which is defined in
                                       & CSC format, are to be specified. But element
                                       & %(s1)[%(i1),%(i2)] = %(c1) is given.
17204 IMSL_DIAG_ELMNT_NOT_REAL         The imaginary parts of the diagonal elements of
                                       & input matrix "%(s1)" must be numerically zero,
                                       & but "%(s1)[%(i1),%(i2)]" = %(c1).
17205 IMSL_DIAG_ELMNT_NOT_REAL_HB      The imaginary parts of the diagonal elements of
                                       & input matrix %(s1), represented in CSC format
                                       & by the arguments "%(s2)", "%(s3)" and "%(s4)",
                                       & must be numerically zero, but %(s1)[%(i1),%(i2)]
                                       & = %(c1).
17206 IMSL_BAD_NONZERO_1               For matrix %(s1), represented in sparse coordinate
                                       & storage format by "%(s2)", more than one value
                                       & of %(s1)[%(i1),%(i2)] is given.
17207 IMSL_BAD_NONZERO_HB              For matrix %(s1), represented in CSC format
                                       & by the arguments "%(s2)", "%(s3)" and "%(s4)",
                                       & more than one value of %(s1)[%(i1),%(i2)]
                                       & is given.
17208 IMSL_BAD_TUNING_PARAM_1          "sp_ienv[%(i1)]" = 0, but "sp_ienv[%(i1)]" must be
                                       & different from zero.
17209 IMSL_U_MEMORY_EXCEEDED           Memory allocation failed. The required storage for the
                                       & columns of U exceeds the available amount of memory.
                                       & For positive "sp_ienv[%(i1)]", try a larger value, for
                                       & negative "sp_ienv[%(i1)]", try a smaller value.
17210 IMSL_LSUB_MEMORY_EXCEEDED        Memory allocation failed. The required storage for the
                                       & subscripts of the L supernodes exceeds the available
                                       & amount of memory. For positive "sp_ienv[%(i1)]", try
                                       & a larger value, for negative "sp_ienv[%(i1)]", try a
                                       & smaller value.
17211 IMSL_LVAL_MEMORY_EXCEEDED        Memory allocation failed. The storage for the values of
                                       & the L supernodes exceeds the available amount of memory.
                                       & For positive "sp_ienv[%(i1)]", try a larger value, for
                                       & negative "sp_ienv[%(i1)]", try a smaller value.
17212 IMSL_INEQUALITY_VIOLATION_11     "%(s1)[%(i1)]" = %(i2). "%(s1)[%(i1)]" must be greater than %(i3).
17213 IMSL_BAD_SNODE_PREDICTION        The value for optional argument
                                       & IMSL_SNODE_PREDICTION must be 0 or 1
                                       & while "snode_prediction" = %(i1) is given.
17300  IMSL_UNABLE_TO_BRACKET_VALUE2   Unable to bracket the value of the
                                       & inverse chi-squared
                                       & at "p" = %(F1), with
                                       & "df" = %(F2).
50000 IMSL_RETURN_STRING_ONLY          Both "IMSL_RETURN_STRING" and
                                       & "IMSL_WRITE_TO_CONSOLE" cannot be
                                       & specified.
60000 IMSL_NESTED_TOO_DEEP             IMSL routines are nested too deeply.
60001 IMSL_ERROR_STACK_MISMATCH        Stack error.  Trying to pop "%(S1)",
                                       & but "%(S2)" is on the top of the
                                       & stack.
60002 IMSL_SMALL_ARGUMENT              The argument "x" = %(F1) must be greater
                                       & than or equal to %(F2).
60003 IMSL_BAD_ARGUMENT_TO_N1RNOF      The argument passed to N1RNOF must be
                                       & 1 or 2.
63000 IMSL_BAD_CHECKSUM                The pre-determined value is %(F1) and
                                       & the computed value is %(F2).
63001 IMSL_BAD_CHECKSUM_1              The pre-determined value is %(F1)
                                       & and the scalar value is %(I2).
63002 IMSL_BAD_CHECKSUM_2              The pre-determined value is %(F1)
                                       & and the scalar value is %(F2).
63005 IMSL_BAD_IOP_VALUE               "iop" must contain the value 1, 2, 3,
                                       & or, 4.  "iop" currently contains the
                                       & value %(I1).
63006 IMSL_BAD_IOP_VALUE_2             "iop" must contain the value 1, 2, 3,
                                       & or, 4.  "iop" currently contains the
                                       & value %(I1) for test %(I2).
63007 IMSL_SHGEQZ_FAILURE              The QZ iteration in LAPACK routine
                                       & SHGEQZ failed. No eigenvectors have
                                       & been calculated.
63008 IMSL_SHGEQZ_FAILURE_1            Other than QZ iteration failed in LAPACK
                                       & routine SHGEQZ.
63009 IMSL_STGEVC_FAILURE              The call to LAPACK routine STGEVC
                                       & failed.
63010 IMSL_CHGEQZ_FAILURE              The QZ iteration in LAPACK routine
                                       & CHGEQZ failed. No eigenvectors have
                                       & been calculated.
63011 IMSL_CHGEQZ_FAILURE_1            Other than QZ iteration failed in LAPACK
                                       & routine CHGEQZ.
63012 IMSL_CTGEVC_FAILURE              The call to LAPACK routine CTGEVC
                                       & failed.
63013 IMSL_SSYEV_FAILURE               LAPACK routine SSYEV failed to converge.
                                       & %(I1) off-diagonal elements of an
                                       & intermediate tridiagonal form did not
                                       & converge to zero.
63016 IMSL_DISCONTINUITY_IDENTIFIED    Apparently "fcn" has a discontinuity
                                       & between "a" = %(F1) and "b" = %(F2).
                                       & No zero has been identified.
63017 IMSL_ZERO_NOT_FOUND              "fcn(a)*fcn(b)" > 0 where "a" = %(F1)
                                       & and "b" = %(F2), but the algorithm is
                                       & unable to identify function values
                                       & with opposite signs.
63018 IMSL_ERROR_TOL_NOT_SATISFIED     The error tolerance criteria was not
                                       & satisfied. "b" contains the abscissa
                                       & at which "|fcn(x)|" had the smallest
                                       & value.
63019 IMSL_CRITERIA_NOT_SATISFIED      The algorithm has terminated without
                                       & satisfying any of the error tolerance
                                       & criteria. The error estimate is %(F1).
63020 IMSL_NONINTEGRABLE               The integrand apparently contains a
                                       & nonintegrable singularity. The
                                       & abscissa of the singularity is near
                                       & %(F1). The result has been set to NaN.
63021 IMSL_MAX_FCN_EVAL_EXCEEDED_NAN   The maximum number of function
                                       & evaluations allowed, "maxfn", has been
                                       & exceeded. "maxfn" is currently set to
                                       & a value of %(I1). The result has been
                                       & set to NaN.
63022 IMSL_MAX_NNLS_ITER_REACHED       The maximum number of iterations was
                                       & reached.  The best answer will be
                                       & returned.  "itmax" = %(I1) was used.
                                       & A larger value may help the
                                       & algorithm complete.
65000 IMSL_LAST_ERROR                  LAST ERROR IN FILE
