#   IMSL C/STAT/LIBRARY error messages
#   Recommended maximum message length: 1280 characters.
#
%shift 2 
#
102   IMSLS_MAJOR_VIOLATION            Major violation occurred.
103   IMSLS_UNKNOWN_OPTION             There is an error with argument number
                                       & %(I2).  This may be caused by an
                                       & incorrect number of values following
                                       & a previous optional argument name.
104   IMSLS_OPTIONAL_ARG_NULL_1        The argument "%(S1)" following the
                                       & optional argument %(S2) is NULL.
105   IMSLS_OPTIONAL_ARG_NULL_2        The second argument "%(S1)" following
                                       & the optional argument %(S2) is NULL.
109   IMSLS_INVALID_OPTION_VALUE       For "option" = %(S1), the option value
                                       & must be between %(I1) and %(I2),
                                       & inclusive, but "option_value" = %(I3).
110   IMSLS_INVALID_OPT_VALUE          For "option" = %(S1), the option value
                                       & must be greater than or equal to
                                       & %(I1), but "option_value" = %(I2).
120   IMSLS_REAL_OUT_OF_RANGE          "%(S1)" must be between %(F1) and
                                       & %(F2), but "%(S1)" = %(F3).
122   IMSLS_ILLEGAL_INTEGER_2          "%(S1)" must be either %(I1) or %(I2),
                                       & but "%(S1)" = %(I3).
132   IMSLS_INTEGER_OUT_OF_RANGE       "%(S1)" must be between %(I1) and %(I2),
                                       & but "%(S1)" = %(I3).
150   IMSLS_UNEXPECTED_NULL_POINTER    The argument "%(S1)" is a NULL pointer
                                       & when a NULL pointer is not allowed.
151   IMSLS_UNEXPECTED_NULL_POINT      The argument "%(S1)[%(I1)]" is a NULL
                                       & pointer when a NULL pointer is not
                                       & allowed.
160   IMSLS_BAD_ERROR_TYPE             Error type must be -1, ..., 8, but
                                       & "type" = %(I1).  Message = "%(S1)"
161   IMSLS_NEED_RARG_GT               "%(S1)" = %(F1).  "%(S1)" must be
                                       & greater than %(F2).
162   IMSLS_NEED_RARG_GE               "%(S1)" = %(F1).  "%(S1)" must be
                                       & greater than or equal to %(F2).
163   IMSLS_NEED_RARG_LT               "%(S1)" = %(F1).  "%(S1)" must be less
                                       & than %(F2).
164   IMSLS_NEED_RARG_LE               "%(S1)" = %(F1).  "%(S1)" must be less
                                       & than or equal to %(F2).
165   IMSLS_NEED_IARG_GT               "%(S1)" = %(I1).  "%(S1)" must be
                                       & greater than %(I2).
166   IMSLS_NEED_IARG_GE               "%(S1)" = %(I1).  "%(S1)" must be
                                       & greater than or equal to %(I2).
169   IMSLS_MISSING_REQ_ARG_1          %(S1) argument is missing.  This is a
                                       & required argument when arguments %(S2)
                                       & and %(S3) are present.
170   IMSLS_MISSING_REQ_ARG_2          %(S1) argument is missing.  This is a
                                       & required argument when argument %(S2)
                                       & is present.
200   IMSLS_OUT_OF_MEMORY              Not enough memory.
201   IMSLS_OUT_OF_MEMORY_1            Not enough memory, with "%(S1)" = %(I1).
202   IMSLS_OUT_OF_MEMORY_2            Not enough memory, with "%(S1)" = %(I1)
                                       & and "%(S2)" = %(I2).
203   IMSLS_OUT_OF_MEMORY_3            Not enough memory, with "%(S1)" = %(I1),
                                       & "%(S2)" = %(I2) and "%(S3)" = %(I3).
204   IMSLS_OUT_OF_MEMORY_4            Not enough memory, with "%(S1)" = %(I1),
                                       & "%(S2)" = %(I2), "%(S3)" = %(I3),
                                       & and "%(S4)" = %(I4).
205   IMSLS_OUT_OF_MEMORY_5            Not enough memory, with "%(S1)" = %(I1),
                                       & "%(S2)" = %(I2), "%(S3)" = %(I3),
                                       & "%(S4)" = %(I4), and "%(S5)" = %(I5).
206   IMSLS_OUT_OF_MEMORY_6            Not enough memory, with "%(S1)" = %(I1),
                                       & "%(S2)" = %(I2), "%(S3)" = %(I3),
                                       & "%(S4)" = %(I4), "%(S5)" = %(I5), and
                                       & "%(S6)" = %(I6).
220   IMSLS_WORKSPACE_ERROR            Error in workspace.  Probably overwrote
                                       & past the start of the allocation.
221   IMSLS_ERROR_ACTIVE_ALLOC_SIZE    The maximum allocation size = %(I2) is
                                       & less than the current active
                                       & allocation size.
499   IMSLS_NO_MT_SIGNAL_HANDLING      C/Stat/Library signal handling must be
                                       & turned off when using multiple
                                       & threads.  See imsls_err_options for
                                       & instuctions on turning off signal
                                       & handling by C/Stat/Library.
502   IMSLS_SIGNAL_INT                 Interrupt.
504   IMSLS_SIGNAL_ILL                 Illegal instruction.
506   IMSLS_SIGNAL_ABRT                Abnormal termination.
508   IMSLS_SIGNAL_FPE                 Floating point exception error.
510   IMSLS_SIGNAL_BUS                 Bus error.
511   IMSLS_SIGNAL_SGEV                Segmentation violation.  This can be
                                       & caused by:\n  (1) A missing argument
                                       & or a missing parameter after an
                                       & optional argument.\n  (2) An
                                       & incorrectly set pointer.  If the
                                       & procedure expects a pointer to be set
                                       & on input, and it is not set, then the
                                       & procedure will attempt to reference a
                                       & random location in memory.  This can
                                       & cause this error.
600   IMSLS_INEQUALITY_VIOLATION_0     "%(S1)" = %(I1) and "%(S2)" = %(I2).
                                       &  "%(S1)" must be greater than or equal
                                       & to "%(S2)".
601   IMSLS_INEQUALITY_VIOLATION       "%(S1)" = %(I1) and "%(S2)" = %(I2).
                                       &  "%(S1)" must be less than or equal to
                                       & "%(S2)".
602   IMSLS_INEQUALITY_VIOLATION_2     "%(S1)" = %(I1).  "%(S1)" must be
                                       & greater than or equal to %(I2) and
                                       & less than or equal to %(I3).
603   IMSLS_INEQUALITY_VIOLATION_3     "%(S1)" = %(I1).  "%(S1)" must be
                                       & greater than or equal to %(I2).
604   IMSLS_INEQUALITY_VIOLATION_4     "%(S1)" = %(I1) and "%(S2)" = %(I2).
                                       &  "%(S1)" must be greater than or equal
                                       & to "%(S2)" and "%(S2)" must be greater
                                       & than or equal to %(I3).
605   IMSLS_INEQUALITY_VIOLATION_5     "%(S1)" = %(I1) and "%(S2)" = %(I2).
                                       &  "%(S1)" must be greater than "%(S2)".
606   IMSLS_INEQUALITY_VIOLATION_6     "%(S1)" = %(I1).  "%(S1)" must be less
                                       & than "%(I2)".
607   IMSLS_COMPLEX_DIVIDE_BY_ZERO     Complex division by zero.
608   IMSLS_INEQUALITY_VIOLATION_7     "%(S1)" = %(R1).  "%(S1)" must be
                                       & greater than or equal to %(R2).
609   IMSLS_INEQUALITY_VIOLATION_8     "%(S1)" = %(R1).  "%(S1)" must be
                                       & greater than %(R2).
610   IMSLS_INEQUALITY_VIOLATION_10     "%(S1)" = %(R1) must be greater than or
                                       & equal to %(R2) and less than or equal
                                       & to %(R3).
611   IMSLS_INEQUALITY_VIOLATION_11     "%(S1)" = %(I1) must equal "%(S2)" = %(I2).
612   IMSLS_INEQUALITY_VIOLATION_12     "%(S1)" = %(R1) must equal "%(S2)" = %(R2).
613   IMSLS_INEQUALITY_VIOLATION_13    "%(S1)" = %(R1).  "%(S1)" must be
                                       & less than or equal to %(R2).
614   IMSLS_LENGTH_OF_VECTORS          The length of vectors "ra" and "rb" must
                                       & be greater than or equal to one.  On
                                       & input the length, "n", is given as
                                       & %(I1).
615   IMSLS_LENGTH_OF_VECTORS_2        "n" = %(I1).  The length of "ra" and
                                       & "rb", "n", must be greater than or
                                       & equal to one.
616   IMSLS_LENGTH_OF_VECTORS_3        The length of vectors "ra", "rb" and
                                       & "iperm" must be greater than or equal
                                       & to one.  On input the length, "n", is
                                       & given as %(I1).
620   IMSLS_NOT_ENOUGH_ROWS            The number of rows must be greater than
                                       & zero.  "nra" = %(I1)
621   IMSLS_NOT_ENOUGH_COLUMNS         The number of columns must be greater
                                       & than zero.  "nca" = %(I1)
622   IMSLS_INEQUALITY_VIOLATION_9     "%(S1)" = %(I1).  "%(S1)" must be less
                                       & than or equal to %(I2).
1020  IMSLS_NEED_LDA_GE_M              "lda" must be greater than or equal to M
                                       & and greater than zero while "lda" =
                                       & %(I1) and "m" = %(I2) are given.
1024  IMSLS_COL_DIM_LESS_COL           The number of columns in the matrix must
                                       & be less than or equal to its column
                                       & dimension while for "%(S1)" the number
                                       & of columns is %(I1) and the column
                                       & dimension is %(I2).
2014  IMSLS_NEED_N_GE_ZERO             "n" must be greater than or equal to
                                       & zero while %(I1) is given.
2015  IMSLS_INCX_EQUALS_ZERO           "incx" must not be equal to zero while
                                       & %(I1) is given.
2016  IMSLS_INCY_EQUALS_ZERO           "incy" must not be equal to zero while
                                       & %(I1) is given.
2025  IMSLS_NEED_A_AND_N_GT_ZERO       "n" = %(I1).  The order of "a", "n",
                                       & must be greater than zero.
2026  IMSLS_NEED_N_LE_LDA              "n" = %(I1) and "lda" = %(I2).  The
                                       & order of "a", "n", must be less than
                                       & or equal to the leading dimension of
                                       & "a", "lda".
2033  IMSLS_NEED_M_GE_ZERO             "m" must be greater than or equal to
                                       & zero while %(I1) is given.
6002  IMSLS_REQ_ARGUMENT_IS_NULL       The required argument "%(S1)" is NULL.
9001  IMSLS_CHEBY_NEG_TERMS            The number of terms in the series is
                                       & not positive.  "n" = %(I1).
9002  IMSLS_CHEBY_TOO_MANY_TERMS       The number of terms in the series is
                                       & greater than 1000.  "n" = %(I1).
9003  IMSLS_CHEBY_RANGE                The argument X = %(F1) is outside the
                                       & interval (-1.1,+1.1).
9004  IMSLS_CHEBY_EVAL_TERMS           The number of coefficients is less than
                                       & 1.  "nos" = %(I1)."
9005  IMSLS_CHEBY_EVAL_TOL             Too much accuracy may be requested.
                                       &  "eta" should be increased.
9006  IMSLS_NEGATIVE_INTEGER           The argument for the function can not be
                                       & a negative integer.  Argument "x" =
                                       & %(F1).
9008  IMSLS_F_INVERSE_OVERFLOW         Function overflows.  This is because
                                       & "df_numerator" or "df_denominator" and
                                       & "p" are too large.  The return value
                                       & is set to machine infinity.
9009  IMSLS_LARGE_ARG_OVERFLOW         The function overflows because "x" =
                                       & %(F1) is greater than %(F2).
9010  IMSLS_X_AND_A_TOO_LARGE          Since "x" = %(F1) and "a" = %(F2) are so
                                       & large, the algorithm would overflow.
9011  IMSLS_ZERO_ARG_OVERFLOW          The function overflows because "x" =
                                       & %(F1) is too close to zero.
9012  IMSLS_SMALL_ARG_OVERFLOW         The function overflows because "x" =
                                       & %(F1) is less than %(F2).
9013  IMSLS_LARGE_ABS_ARG_OVERFLOW     The function overflows because |%(F1)|
                                       & is greater than %(F2).
9014  IMSLS_SMALL_ARG_UNDERFLOW        The function underflows because "x" =
                                       & %(F1) is less than %(F2).  The result
                                       & is set to zero.
9015  IMSLS_LARGE_ARG_UNDERFLOW        The function underflows because "x" =
                                       & %(F1) is greater than %(F2).  The
                                       & result is set to zero.
9018  IMSLS_BETA_UNDERFLOW             The function underflows because "x" =
                                       & %(F1) and/or "y" = %(F2) is too large.
9020  IMSLS_NEAR_NEG_INT_WARN          The result is accurate to less than one
                                       & half precision because "x" = %(F1) is
                                       & too close to a negative integer.
9021  IMSLS_NEAR_NEG_INT_FATAL         The argument for the function can not be
                                       & a negative integer.  Argument "x" =
                                       & %(F1).
9022  IMSLS_CANNOT_FIND_XMIN           Unable to determine the value of "xmin".
9023  IMSLS_CANNOT_FIND_XMAX           Unable to determine the value of "xmax".
9024  IMSLS_ARG_ZERO                   The argument for the function can not be
                                       & zero.
9027  IMSLS_NON_POSITIVE_ARGUMENT      "x" = %(F1) must be greater than zero.
9031  IMSLS_BETA_NEG_ARG               Both "x" = %(F1) and "y" = %(F2) must be
                                       & greater than zero.
9032  IMSLS_FIRST_ARG_LT_ZERO          The first argument for the function must
                                       & be greater than zero.  Argument "a" =
                                       & %(F1).
9033  IMSLS_SECOND_ARG_LT_ZERO         The second argument for the function
                                       & must be greater than or equal to zero.
                                       &  Argument X = %(F1).
9034  IMSLS_NO_CONV_200_TS_TERMS       The function did not converge in 200
                                       & terms of Taylor series.
9035  IMSLS_NO_CONV_200_CF_TERMS       The function did not converge in 200
                                       & terms of continued fraction.
9036  IMSLS_NEED_ZERO_LT_X_LE_A        "x" = %(F1) must be greater than zero
                                       & and less than or equal to "a" = %(F2).
9037  IMSLS_LT_HALF_ACCURATE           The result is accurate to less than
                                       & one half precision.
9038  IMSLS_BOTH_ARGS_ARE_LT_ZERO      Both arguments for the function must
                                       & be greater than zero.
9039  IMSLS_X_IS_LESS_THAN_MINUS_1     The argument X = %(F1) must be greater
                                       & than -1.0.
9040  IMSLS_X_IS_TOO_CLOSE_TO_NEG_1    The result is accurate to less than one
                                       & half precision because "x" = %(F1) is
                                       & too close to -1.0.  "x" must be
                                       & greater than %(F2).
9041  IMSLS_NEED_ZERO_LT_P_LT_ONE      The argument to the function must be
                                       & greater than 0.0 and less than 1.0.
                                       &  "p" = %(F1).
9042  IMSLS_DF_MUST_BE_AT_LEAST_ONE    The input number of degrees of freedom,
                                       & "df" = %(F1), must be at least one.
9043  IMSLS_P_OUTSIDE_OPEN_INTERVAL    The input probability value, "p" =
                                       & %(F1), must be in the open interval
                                       & (0, 1).
9044  IMSLS_PIN_MUST_BE_POSITIVE       The first parameter of the beta
                                       & distribution, "pin" = %(F1), must be
                                       & positive.
9045  IMSLS_QIN_MUST_BE_POSITIVE       The second parameter of the beta
                                       & distribution, "qin" = %(F1), must be
                                       & positive.
9046  IMSLS_P_OUTSIDE_EXCLUSIVE_INT    The probability which the inverse of the
                                       & beta distribution is based on, "p" =
                                       & %(F1), must be in the exclusive
                                       & interval (0.0, 1.0).
9047  IMSLS_BEST_BETIN_APPROXIMATION   beta_inverse for the value "p" = %(F1)
                                       & could not be found in 100 iterations
                                       & of Newton's method.  The best
                                       & approximation calculated is
                                       & beta_inverse = %(F2).
9048  IMSLS_DFN_OR_DFD_IS_NEGATIVE     The input value for the numerator or
                                       & denominator degrees of freedom for the
                                       & F distribution, "dfn" = %(F1), "dfd" =
                                       & %(F2), must be positive.
9050  IMSLS_DIST_FCN_SET_TO_ZERO       Since F = %(F1) is not positive, the
                                       & distribution function is zero at F.
9051  IMSLS_DF_MUST_BE_GE_POINT_5      The degrees of freedom, "df" = %(F1),
                                       & must be greater than or equal to 0.5.
9052  IMSLS_UNABLE_TO_BRACKET_VALUE    Unable to bracket the value of the
                                       & inverse noncentral imsls_chi-squared
                                       & at "p" = %(F1), with parameters
                                       & "df" = %(F2) and "alam" = %(F3).
9053  IMSLS_CHI_2_INV_CDF_CONVERGENCE  Over 100 iterations have occurred
                                       & without convergence.  Convergence
                                       & is assumed.
9054  IMSLS_LESS_THAN_ZERO             Since "k" = %(I1) is less than zero, the
                                       & distribution function is set to zero.
9055  IMSLS_ARG_LESS_THAN_ZERO         Since "%(S1)" = %(F1) is less than zero,
                                       & the distribution function is zero at
                                       & "%(S1)".
9056  IMSLS_SHAPE_PARAMETER_NEGATIVE   The shape parameter of the gamma
                                       & distribution must be positive.
9058  IMSLS_NEED_N_GREATER_THAN_ZERO   "%(S1)" must be greater than zero,
                                       & "%(S1)" = %(I1).
9059  IMSLS_BAD_PROBABILITY_VALUE      "p" = %(F1), but "p" must be nonnegative
                                       & and no greater than 1.0, since "p" is
                                       & a probability.  Distribution function
                                       & is set to zero.
9060  IMSLS_GREATER_THAN_N             Since "k" = %(I1) is greater than "n" =
                                       & %(I2), the distribution function is
                                       & set to 1.0.
9062  IMSLS_LOT_SIZE_TOO_SMALL         The lot size must be greater than the
                                       & sample size and the number of
                                       & defectives in the lot.  Lot size =
                                       & %(I1).  Sample size = %(I2).  Number
                                       & of defectives in the lot = %(I3).
9063  IMSLS_K_GREATER_THAN_N           Since the argument to the function is
                                       & greater than the sample size, the
                                       & probability is set to 1.  Argument =
                                       & %(I1).  Sample size = %(I2).
9064  IMSLS_THETA_MUST_BE_POSITIVE     The mean of the Poisson distribution,
                                       & "theta" = %(F1), must be positive.
9065  IMSLS_COMP_CHISQ_ZERO            Since "%(S1)" = %(F1) is less than zero,
                                       & the distribution function is one at
                                       & "%(S1)".
9066  IMSLS_NEED_ARGUMENT_GE_ZERO      The sample size and the number of
                                       & defectives must be greater than or
                                       & equal to zero.  Sample size = %(I1).
                                       &  Number of defectives = %(I2).
9067  IMSLS_SCALE_PARAMETER_NOT_POS    The scale parameter "%(S1)"= %(F1) must
                                       & be positive.
9068  IMSLS_SHAPE_PARAMETER_NOT_POS    The shape parameter "%(S1)"= %(F1) must
                                       & be positive.
9069  IMSLS_X_SMALLER_THAN_SHAPE       The point at which the Pareto
                                       & distribution is to be evaluated,
                                       & "%(S1)" = %(F1), must be of equal or
                                       & greater magnitude than the scale
                                       & parameter, "%(S2)" = %(F2).
10001 IMSLS_FORMAT_INVALID             The specified format is an invalid
                                       & format string: "fmt" = "%(S1)".
10002 IMSLS_FORMAT_INVALID_CONV        A character which is not a valid
                                       & conversion specification character for
                                       & this data type has been encountered in
                                       & a format string.  "fmt" = "%(S1)".
10003 IMSLS_FORMAT_NO_CONV             A format with no conversion
                                       & specification has been encountered.
                                       &  The format is "fmt" = "%(S1)".
10004 IMSLS_FORMAT_STAR                A conversion specification with a '*'
                                       & for a field width is not allowed.
                                       &  "fmt" = "%(S1)".
10005 IMSLS_FORMAT_WIDE_FIELD          A field width greater than 40 has been
                                       & encountered.  All field widths must be
                                       & 40 or less.  "fmt" = "%(S1)"
10006 IMSLS_FORMAT_TOO_NARROW          The number of significant digits to be
                                       & printed is greater than the field
                                       & width.  This conversions specification
                                       & is not allowed.  "fmt" = "%(S1)"
10007 IMSLS_FORMAT_BAD_CONV            An invalid conversion specification has
                                       & been encountered, "fmt" = "%(S1)".
10008 IMSLS_FORMAT_TOO_WIDE            A page width of %(I1) was retrieved via
                                       & IMSLS routine imsls_page.  The format,
                                       & "fmt", contains a field width of
                                       & %(I3).  Either the largest field width
                                       & in "fmt" must be decreased or the page
                                       & width increased to at least %(I2) by a
                                       & call to imsls_page.
10009 IMSLS_NARROW_PAGE                A page width of %(I1) was retrieved via
                                       & IMSLS routine imsls_page.  The page
                                       & width must be increased to at least
                                       & %(I2) by a call to imsls_page.
10010 IMSLS_WIDE_PAGE                  A page width of %(I1) was retrieved via
                                       & IMSLS routine imsls_page.  The page
                                       & width must be reset to no greater than
                                       & 255 by a call to imsls_page.
10011 IMSLS_ZERO_LINE                  The length for an output line must be
                                       & greater than zero.
10012 IMSLS_LONG_TITLE                 The title message length is too long.
                                       &  Maximum length of a title is 255
                                       & characters.
10013 IMSLS_MUT_EXC_PRINT_OPTIONS      The options IMSLS_PRINT_ALL,
                                       & IMSLS_PRINT_UPPER, IMSLS_PRINT_LOWER,
                                       & IMSLS_PRINT_UPPER_NO_DIAG, and
                                       & IMSLS_PRINT_LOWER_NO_DIAG are mutually
                                       & exclusive options.  Only one can be
                                       & specified in a single invocation of
                                       & this routine.
10014 IMSLS_MUT_EXC_ROW_LABEL_OPT      The options IMSLS_ROW_LABEL,
                                       & IMSLS_NO_ROW_LABEL, and
                                       & IMSLS_ROW_NUMBER_ZERO are mutually
                                       & exclusive options.  Only one can be
                                       & specified in a single invocation of
                                       & this routine.
10015 IMSLS_MUT_EXC_COL_LABEL_OPT      The options IMSLS_COL_LABEL,
                                       & IMSLS_NO_COL_LABEL, and
                                       & IMSLS_COL_NUMBER_ZERO are mutually
                                       & exclusive options.  Only one can be
                                       & specified in a single invocation of
                                       & this routine.
10016 IMSLS_MUT_EXC_COV_OPTIONS        The options
                                       & IMSLS_VARIANCE_COVARIANCE_MATRIX,
                                       & IMSLS_CORRECTED_SSCP_MATRIX,
                                       & IMSLS_CORRELATION_MATRIX, and
                                       & IMSLS_STDEV_CORRELATION_MATRIX are
                                       & mutually exclusive options.  Only one
                                       & can be specified in a single
                                       & invocation of this routine.
10017 IMSLS_MUT_EXC_TIE_OPTION         The options IMSLS_AVERAGE_TIE,
                                       & IMSLS_HIGHEST, IMSLS_LOWEST, and
                                       & IMSLS_RANDOM_SPLIT are mutually
                                       & exclusive options.  Only one can be
                                       & specified in a single invocation of
                                       & this routine.
10018 IMSLS_MUT_EXC_SCORE_OPTION       The options IMSLS_RANKS,
                                       & IMSLS_BLOM_SCORES, IMSLS_TUKEY_SCORES,
                                       & IMSLS_VAN_DER_WAERDEN_SCORES,
                                       & IMSLS_EXPECTED_NORMAL_SCORES,
                                       & and IMSLS_SAVAGE_SCORES are mutually
                                       & exclusive options.  Only one can
                                       & be specified in a single invocation
                                       & of this routine.
10019 IMSLS_ILLEGAL_WRITE_OPTION       The value input for option is not
                                       & recognized.  The variable option must
                                       & be one of IMSLS_SET_CENTERING,
                                       & IMSLS_GET_CENTERING,
                                       & IMSLS_SET_ROW_WRAP,
                                       & IMSLS_GET_ROW_WRAP,
                                       & IMSLS_SET_PAGING, IMSLS_GET_PAGING,
                                       & IMSLS_SET_NAN_CHAR,
                                       & IMSLS_GET_NAN_CHAR,
                                       & IMSLS_SET_TITLE_PAGE,
                                       & IMSLS_GET_TITLE_PAGE,
                                       & IMSLS_SET_FORMAT, IMSLS_GET_FORMAT,
                                       & or IMSLS_SET_DEFAULTS.
10020 IMSLS_INVALID_PAGE_OPTION        The value input for option is not
                                       & recognized.  The variable option must
                                       & be one of IMSLS_SET_PAGE_WIDTH,
                                       & IMSLS_GET_PAGE_WIDTH,
                                       & IMSLS_SET_PAGE_LENGTH,
                                       & or IMSLS_GET_PAGE_LENGTH.
10021 IMSLS_BAD_PAGE_WIDTH             "page_attribute" = %(I1).  The page
                                       & width must be greater than or equal to
                                       & 10.
10022 IMSLS_BAD_PAGE_LENGTH            "page_attribute" = %(I1).  The page
                                       & length must be greater than or equal
                                       & to 10.
10023 IMSLS_RANK_LESS_THAN             The rank of %(S1) = %(I1).  This must be
                                       & greater than or equal to %(S2) =
                                       & %(I2).
10024 IMSLS_SVD_ERROR                  An error occurred in the singular value
                                       & decomposition of tran(A)*X.  The
                                       & rotation matrix, T, may not be
                                       & accurate.
10025 IMSLS_NO_ROTATION                "n_factors" = %(I1).  No rotation is
                                       & possible.
10026 IMSLS_MUST_BE_NONPOSITIVE        "%(S1)" = %(R1).  "%(S1) must be
                                       & nonpositive.
11001 IMSLS_ILLEGAL_OPT_ARG            Illegal optional argument %(I1) on
                                       & argument number %(I2).
11002 IMSLS_NOBS_LESS_THAN_ONE         The number of observations must be
                                       & at least one,  while "n_observations"
                                       & = %(I1) is given.
11003 IMSLS_POLY_DEGREE_LT_ZERO        "degree" = %(I1).  The degree of the
                                       & polynomial to be fit must be greater
                                       & than or equal to 0.
11004 IMSLS_LARGER_NOBS_REQUIRED       "nobs" = %(I1).  The number of
                                       & observations, "nobs", must be greater
                                       & than one.
11005 IMSLS_NEED_LDX_GE_NOBS           "nobs" = %(I1) and LDX = %(I2).  The
                                       & leading dimension of "x", "ldx", must
                                       & be greater than or equal to the number
                                       & of observations, "nobs".
11006 IMSLS_NCOL_MUST_BE_GE_ONE        "ncol" = %(I1).  The number of columns
                                       & in "x", "ncol", must be greater than
                                       & or equal to one.
11007 IMSLS_NEED_MAXDEG_GE_ZERO        "maxdeg" = %(I1).  The maximum degree of
                                       & the polynomial to be fit, "maxdeg",
                                       & must be greater than or equal to zero.
11008 IMSLS_WRONG_ICRIT_VALUE          "icrit" = %(I1).  The criterion option,
                                       & "icrit", must be either 0, 1, or 2.
11009 IMSLS_BAD_ICRIT_OR_LOF_VALU      "icrit" = %(I1) and "lof" = %(I2).  When
                                       & the criterion option, "icrit", equals
                                       & 2, the lack of fit option, "lof", must
                                       & be equal to one.
11010 IMSLS_BAD_CRIT_OR_ICRIT_VALU     "crit" = %(F1) when "icrit" = %(I1).
                                       &  The significance level for the lack
                                       & of fit test, "crit", must be greater
                                       & than or equal to 0 and less than or
                                       & equal to 100 when the criterion
                                       & option, "icrit", is equal to two.
11011 IMSLS_BAD_CRIT_IF_ICRIT_EQ_1     "crit" = %(F1) when "icrit" = %(I1).
                                       & The R-squared that the fitted
                                       & polynomial must achieve, "crit", must
                                       & be greater than zero and less than or
                                       & equal to 100 when the criterion
                                       & option, "icrit", is equal to one.
11012 IMSLS_CONSTANT_XVALUES           Each value of the independent variable
                                       & is the same.  The independent
                                       & variable, "x", cannot be constant.
11013 IMSLS_PERFECT_FIT_POLY           The degree %(I1) polynomial fit is a
                                       & perfect fit within machine precision.
11014 IMSLS_CONSTANT_YVALUES           The response variable, "y", is constant.
                                       &  A zero degree polynomial is fit.
11015 IMSLS_FEW_DISTINCT_XVALUES       A degree %(I1) polynomial is fitted.
                                       &  There are only %(I2) distinct
                                       & abscissas, so a higher degree
                                       & polynomial fit cannot  be computed.
11016 IMSLS_PERFECT_FIT                Although a degree %(I1) fit was
                                       & requested, a degree %(I2) polynomial
                                       & is fitted because the degree %(I2)
                                       & polynomial fit is a perfect fit within
                                       & machine precision.
11017 IMSLS_WRONG_LOF_VALUE            "lof" = %(I1).  The lack of fit option,
                                       & "lof", must be either 0 or 1.
11019 IMSLS_BAD_NDEG_VALUE             "ndeg" = %(I1).  The degree of the
                                       & polynomial regression, "ndeg", must
                                       & be greater than or equal to zero.
11020 IMSLS_NEGATIVE_D_ELMNTS          "d(%(I1))" = %(F1).  Each element of D,
                                       & the vector containing the diagonal
                                       & elements of the sum of squares and
                                       & cross-products matrix, must be
                                       & positive.
11021 IMSLS_WRONG_DFE_VALUE            "dfe" = %(F1).  The degrees of freedom
                                       & for error, "dfe", must be greater than
                                       & or equal to zero.
11022 IMSLS_WRONG_SSE_VALUE            "sse" = %(F1).  The sum of squares for
                                       & error, "sse", must be greater than or
                                       & equal to zero.
11023 IMSLS_BAD_DFPE_VALUE             "dfpe" = %(F1).  The degrees of freedom
                                       & for pure error, "dfpe", must be
                                       & greater than or equal to zero.
11024 IMSLS_BAD_SSPE_VALUE             "sspe" = %(F1).  The sums of squares for
                                       & pure error, "sspe", must be greater
                                       & than or equal to zero.
11025 IMSLS_WRONG_IPRINT_VALUE         "iprint" = %(I1).  The printing option,
                                       & "iprint", must be equal to either 0 or
                                       & 1.
11026 IMSLS_NEED_LDSQSS_GE_NDEG        "ndeg" = %(I1) and "ldsqss" = %(I2).
                                       &  The leading dimension of "sqss",
                                       & "ldsqss", must be greater than or
                                       & equal to the degree of the polynomial
                                       & regression, "ndeg".
11027 IMSLS_NEED_LDTLOF_GE_NDEG        "ndeg" = %(I1) and "ldtlof" = %(I2).
                                       &  The leading dimension of "tlof",
                                       & "ldtlof", must be greater than or
                                       & equal to the degree of the polynomial
                                       & regression, "ndeg".
11028 IMSLS_NEED_LARGER_LDCOEF         "ndeg" = %(I1) and "ldcoef" = %(I2).
                                       &  The leading dimension of "coef",
                                       & "ldcoef", must be greater than or
                                       & equal to one plus the degree of the
                                       & polynomial regression, "ndeg".
11029 IMSLS_NEGATIVE_DFE_VALUE         "dfe" = %(F1).  It must be nonnegative.
11030 IMSLS_NEGATIVE_STDB_VALUE        "stdb[%(I1)]" = %(F1).  It must be
                                       & nonnegative.
11031 IMSLS_STRICTLY_POS_TABLE_ELMNTS  "table[%(I1)]" = %(F1).  All elements of
                                       & "table" must be positive and strictly
                                       & less than 1.0.
11032 IMSLS_NEED_POSITIVE_THETA        The parameter "theta" = %(F1), but
                                       & "theta" must be positive.
11033 IMSLS_NEED_POSITIVE_PIN_VALUE    "pin" = %(F1).  But, it must be
                                       & positive.
11034 IMSLS_NEED_POSITIVE_QIN_VALUE    "qin" = %(F1).  But, it must be
                                       & positive.
11035 IMSLS_ELMNTS_SET_TO_NAN          1000 unsuccessful attempts were made to
                                       & assign a imsls_beta random deviate to
                                       & "r[%(I1)]", since "pin" and "qin" are
                                       & so small.  All elements of "r" beyond
                                       & %(I1) are set to not-a-number.
11036 IMSLS_SHAPE_PARAMETER_A          The shape parameter "a" = %(F1), but "a"
                                       & must be positive.
11037 IMSLS_A_IS_TOO_LARGE             The value of "a" is too large to allow
                                       & the imsls_gamma distribution to be
                                       & represented in the manner required by
                                       & the algorithm.
11038 IMSLS_COVARIANCE_SPECIFIERS      IMSLS_COV_COL_DIM must be used with
                                       & IMSLS_COEF_COVARIANCES or
                                       & IMSLS_COEF_COVARIANCES_USER.
11043 IMSLS_WRONG_INTCEP_VALUE         "intcep" = %(I1).  The intercept option,
                                       & "intcep", must be equal to 0 or 1.
11046 IMSLS_NEED_NOBS_GE_ZERO          "nobs" = %(I1).  The number of
                                       & observations, "nobs", must be
                                       & greater than zero.
11047 IMSLS_RANK_DEFICIENT             The model is not full rank.  There is
                                       & not a unique least squares solution.
                                       &  The rank of the matrix of regressors
                                       & is %(I1).
11048 IMSLS_DOWNDATING_REQUESTED       Downdating is requested, but
                                       & "%(S1)[%(I1)]" equals the current
                                       & value (= %(F1)) of the associated
                                       & regressor variable.  Downdating
                                       & of "%(S1)" cannot occur.
11049 IMSLS_NO_STAT_INFERENCE          "dfe" = %(F1).  Statistical inference is
                                       & not possible.  More observations are
                                       & needed.
11050 IMSLS_WRONG_VALUE_OF_TOL         "tol" = %(F1).  "tol" must be between
                                       & 0.0 and 1.0, inclusive.
11051 IMSLS_ISUB_SHOULD_BE_ZERO        "intcep" = 0 and "isub" = %(I1).  When
                                       & "intcep" = 0, "isub" must equal 0.
11052 IMSLS_INDDEP_LE_NCOL             "inddep[%(I1)]" = %(I2) and "ncol" =
                                       & %(I3).  "inddep[%(I1)]" must be
                                       & greater than or equal one and less
                                       & than or equal to "ncol".
11053 IMSLS_INDIND_LE_NCOL             "indind[%(I1)]" = %(I2) and "ncol" =
                                       & %(I3).  "indind[%(I1)]" must be
                                       & greater than or equal one and less
                                       & than or equal to "ncol".
11054 IMSLS_NONNEG_FREQ_REQUEST_1      The frequency for row %(I1) of "x" on
                                       & invocation number %(I2) of this
                                       & routine is %(F1).  Frequencies must
                                       & be nonnegative.
11055 IMSLS_NONNEG_FREQ_REQUEST_2      The frequency for row %(I1) of "x"
                                       & is %(F1).  Frequencies must be
                                       & nonnegative.
11056 IMSLS_NONNEG_WEIGHT_REQUEST_1    The weight for row %(I1) of "x" on
                                       & invocation number %(I2) of this
                                       & routine was %(F1).  Weights must be
                                       & nonnegative.
11057 IMSLS_NONNEG_WEIGHT_REQUEST_2    The weight for row %(I1) was %(F1).
                                       &  Weights must be nonnegative.
11058 IMSLS_TOLERALNCE_INCONSISTENT    The linear system of equations is
                                       & inconsistent within the computed
                                       & tolerance.  Elements of row %(I1) are
                                       & zero, but B(%(I1),%(I2)) = %(F1).
                                       &  X(%(I1),%(I2)) is set to zero.
11059 IMSLS_TOLERALNCE_INCONSISTENT_2  The linear system of equations is
                                       & inconsistent within the computed
                                       & tolerance.  "x[%(I1)][%(I2)]" is set
                                       & to zero.
11060 IMSLS_REMAINING_ELMNTS_NOT_ZERO  "r[%(I1)][%(I1)]" = %(F1).  Remaining
                                       & elements for the row must also be
                                       & zero, but "r[%(I1)][%(I2)]" = %(F2) is
                                       & not.
11061 IMSLS_NEED_RARG_GE_ZERO          "%(S1)" = %(F1).  "%(S1)" must be
                                       & greater than or equal to zero.
11062 IMSLS_ROW_OF_X_CONTAINED_NAN     At least one row of "x" contained NaN (a
                                       & missing value).  These rows were
                                       & excluded from calculations.
11063 IMSLS_NONPOSITIVE_NROW_VALUE     "nrow" = %(I1) and "ido" = %(I2).  If
                                       & "nrow" is nonpositive, "ido" must be
                                       & equal to 2 or 3.
11064 IMSLS_CONPRM_VALUE_TOO_BIG       "confidence_means" = %(F1).  The
                                       & confidence level for the mean,
                                       & "confidence_means", must be less than
                                       & 100.0.
11065 IMSLS_CONPRV_VALUE_TOO_BIG       "confidence_variances" = %(F1).  The
                                       & confidence level for the variance,
                                       & "confidence_variances", must be less
                                       & than 100.0.
11066 IMSLS_NUM_NONMISS_OBS_LT_ZERO    The number of nonmissing observations is
                                       & less than zero.
11067 IMSLS_LESS_THAN_TWO_VALID_OBS    Fewer than two valid observations are
                                       & present.  The corresponding statistics
                                       & are set to NaN (not a number), (except
                                       & for the mean, which is not correct if
                                       & no valid observations).
11068 IMSLS_ZERO_SUM_OF_WEIGHTS        The sum of the weights is zero.  The
                                       & statistics, except for the minima,
                                       & maxima, ranges and counts, are set to
                                       & NaN (not a number).
11069 IMSLS_SUM_OF_WEIGHTS_ZERO        The sum of the weights for variable
                                       & %(I1) is zero.  The statistics, except
                                       & for the minima, maxima, ranges and
                                       & counts, are set to NaN (not a number).
11070 IMSLS_MAX_LESS_THAN_MIN          The maximum value is less than the
                                       & minimum value.  The corresponding
                                       & statistics are set to NaN (not a
                                       & number).
11071 IMSLS_MIN_GREATER_THAN_MAX       The maximum value is less than the
                                       & minimum value for variable %(I1).  The
                                       & corresponding statistics are set to
                                       & NaN (not a number).
11072 IMSLS_NOT_ENOUGH_OBSERVATIONS    Fewer than two valid observations are
                                       & present for variable %(I1).  The
                                       & corresponding statistics are set to
                                       & NaN (not a number), (except for the
                                       & mean, which is not correct if no valid
                                       & observations are present, or is
                                       & correct if one observation is
                                       & present).
11073 IMSLS_VARIANCE_UNDERFLOW         Since the range of variable %(I1) is
                                       & very small, the variance for this
                                       & variable underflows.  Therefore, the
                                       & variance and standard deviation are
                                       & set to 0, and the skewness and
                                       & kurtosis are set to NaN (not a
                                       & number).
11074 IMSLS_HIGH_ORDER_UNDERFLOW       Since the range of variable %(I1) is
                                       & very small, the higher order moments
                                       & for this variable underflow.
                                       &  Therefore, the skewness and kurtosis
                                       &  are set to NaN (not a number).
11075 IMSLS_FOURTH_ORDER_UNDERFLOW     Since the range of variable %(I1) is
                                       & very small, the fourth order moment
                                       & for this variable underflows.
                                       &  Therefore, the kurtosis is set to NaN
                                       & (not a number).
11076 IMSLS_CONSTANT_OBSERVATIONS      The observations on variable %(I1) are
                                       & constant.
11077 IMSLS_VAR_AND_STD_ARE_NEGATIVE   The variance and standard deviation are
                                       & negative for variable %(I1).
11078 IMSLS_COEFF_OF_VARIATION_NAN     The coefficient of variation is set to
                                       & NaN (not a number) for variable %(I1).
                                       &  This is due to the value of the mean,
                                       & standard deviation, or both.
11079 IMSLS_NEGATIVE_STD_VALUE         The standard deviation is negative for
                                       & variable %(I1).  The corresponding
                                       & confidence limits for the mean are set
                                       & to NaN (not a number).
11080 IMSLS_ERROR_IN_T_STATISTIC       An error occurred in determining the t
                                       & statistic.  The confidence limits are
                                       & set to NaN (not a number).
11081 IMSLS_NEGATIVE_VARIANCE          The variance is negative for variable
                                       & %(I1).  The corresponding confidence
                                       & limits for the variance are set to NaN
                                       & (not a number).
11082 IMSLS_CHI_SQUARED_STAT_ERROR     An error occurred in determining the
                                       & chi-squared statistic.  The lower
                                       & confidence limit for the variance is
                                       & set to NaN (not a number).
11083 IMSLS_NOBS_MUST_BE_GE_TWO        "n_observations" = %(I1).  The number of
                                       & observations, "n_observations", must
                                       & be greater than or equal to 2.
11084 IMSLS_NEED_LARGER_FUZZ_VALUE     The value used to determine ties,
                                       & "fuzz_value", must be greater than or
                                       & equal to 0.
11085 IMSLS_WRONG_ITIE_OPTION_USED     "itie" = %(I1).  The option used to
                                       & assign a rank to a tied observation,
                                       & "itie", must be equal to 0, 1, 2,
                                       & or 3.
11086 IMSLS_WRONG_ISCORE_OPTION_USED   "iscore" = %(I1).  The option used to
                                       & give the type of values returned in
                                       & "score", "iscore", must be equal to
                                       & 0, 1, 2, 3, 4, or 5.
11087 IMSLS_NEED_LARGER_SAMPLE_SIZE    The sample size must be at least one
                                       & while "n" = %(I1) is given.
11088 IMSLS_RANK_MUST_BE_AT_LEAST_ONE  The rank must be at least one while "i"
                                       & %(I1) is given.  "i" = 1 is used.
11089 IMSLS_NEED_RANK_LE_SAMPLE_SIZE   The rank must be less than or equal to
                                       & the sample size while I = %(I1) and
                                       & "n" = %(I2) are given.  I = %(I2) is
                                       & used.
11090 IMSLS_NEED_N_CATEGORIES_GE_TWO   "n_categories" = %(I1).  The number of
                                       & cells must be greater than or equal to
                                       & two.
11091 IMSLS_NEED_N_PARAMETERS_GE_ZERO  "n_parameters" = %(I1).  The number of
                                       & parameters estimated in computing the
                                       & "cdf" must be greater than or equal to
                                       & zero.
11092 IMSLS_INCORRECT_CDF_1            "cdf(lower_bound)" = %(F1) and
                                       & "cdf(upper_bound)" = %(F2).  The
                                       & function CDF is not a cumulative
                                       & distribution function.
11093 IMSLS_INCORRECT_CDF_2            The probability of the range is %(F1).
                                       &  This value is not positive.
11094 IMSLS_X_VALUE_OUT_OF_RANGE       Row %(I1) of "x" contains a value which
                                       & is out of range.
11095 IMSLS_MISSING_DATA_ELEMENT       At least one data element is missing.
11096 IMSLS_INCORRECT_CDF_3            "cdf(lower_bound)" = %(F1) and
                                       & "cdf(upper_bound)" = %(F2), but
                                       & "cdf(x[%(I1)])" =  %(F3).  The
                                       & function "cdf" is not a cumulative
                                       & distribution function.
11097 IMSLS_TOO_MANY_CELL_DELETIONS    There are more observations deleted from
                                       & the cell than added.
11098 IMSLS_INCORRECT_CDF_5            An error occurred when inverting the
                                       & cumulative distribution function.
                                       &  This function must be continuous and
                                       & defined on the whole real line.  If
                                       & all else fails, specify the cutpoints.
11099 IMSLS_ALL_OBSERVATIONS_MISSING   All observations are missing (NaN, not
                                       & a number) values.
11100 IMSLS_INCORRECT_CDF_4            "cdf(lower_bound)" = %(F1) and
                                       & "cdf(upper_bound)" = %(F2), but
                                       & "cdf(cut_point[%(I4)])" = %(F3).  The
                                       & function cdf is not a cumulative
                                       & distribution function.
11101 IMSLS_EXPECTED_VAL_LESS_THAN_5   An expected value is less than 5.
11102 IMSLS_EXPECTED_VAL_LESS_THAN_1   An expected value is less than 1.
11103 IMSLS_NO_BOUND_AFTER_100_TRYS    After 100 attempts, a bound for the
                                       & inverse cannot be determined.  Try
                                       & again with a different initial
                                       & estimate.
11104 IMSLS_NO_UNIQUE_INVERSE_EXISTS   F(%(F1)) = F(%(F2)) = %(F3).  No unique
                                       & inverse exists.
11105 IMSLS_CONVERGENCE_ASSUMED        Over 100 iterations have occurred
                                       & without convergence.  Convergence
                                       & is assumed.
11109 IMSLS_ZERO_SUM_OF_WEIGHTS_2      The sum of the weights is zero.  The
                                       & means, variances and covariances are
                                       & set to NaN (not a number).
11110 IMSLS_ZERO_SUM_OF_WEIGHTS_3      The sum of the weights is zero.  The
                                       & means and correlations are set to
                                       & NaN (not a number).
11111 IMSLS_CONSTANT_VARIABLE          Correlations are requested but the
                                       & observations on variable %(I1) are
                                       & constant.  The pertinent correlation
                                       & coefficients are set to NaN (not a
                                       & number).
11112 IMSLS_INSUFFICIENT_DATA          Variances and covariances are requested
                                       & but fewer than two valid observations
                                       & are present for a variable.  The
                                       & pertinent statistics are set to NaN
                                       & (not a number).
11114 IMSLS_LOF_COL_DIM_4              "ssq_lof_col_dim" = %(i1).  The column
                                       & dimension of "ssq_lof" must be greater
                                       & than or equal to 4.
11115 IMSLS_POLY_COL_DIM_4             "ssq_poly_col_dim" = %(i1).  The column
                                       & dimension of "ssq_poly" must be
                                       & greater than or equal to 4.
11116 IMSLS_CHOOSE_S1_GREATER_S2       "%(S1)" = %(I1).  "%(S1)" must be chosen
                                       & greater than or equal to %(S2).
11117 IMSLS_MUT_EXCLUSIVE              The options %(S1) are mutually exclusive
                                       & options.  Only one can be specified in
                                       & a single invocation of this routine.
11118 IMSLS_NOBSX_NOBSY_LT_ONE         The minimum of the sample sizes must be
                                       & greater than or equal to 1.
11119 IMSLS_SUM_NOBSX_NOBSY_GE_THREE   The sum of the sample sizes must be
                                       & greater than or equal to 3.
11120 IMSLS_NEGATIVE_FUZZ              "fuzz" must be greater than or equal to
                                       & 0.
11122 IMSLS_ALL_X_Y_MISSING            Each element of X and/or Y is a missing
                                       & (NaN, not a number) value.
11123 IMSLS_AT_LEAST_ONE_TIE           At least one tie is detected between the
                                       & samples.
11124 IMSLS_NVAR_TOO_SMALL             "nvar" must be greater than zero.
11125 IMSLS_NEED_SWT_EQ_0              On the first call to imsls_s1msq, "swt"
                                       & must be equal to zero.  Afterwards, it
                                       & is nonnegative.
11126 IMSLS_SWT_SET_TO_0               "swt" = %(r1).  Since "swt" must be
                                       & nonnegative, "swt" = 0.0 is assumed.
                                       &  It is possible that more observations
                                       & have been deleted from the model than
                                       & have been added to it.
11127 IMSLS_NUM_RESPONSES_TOO_SMALL    "ni[%(i1)]" = %(i2).  The number of
                                       & responses for group %(i3) must be
                                       & nonnegative.
11128 IMSLS_NUM_FACTORS_GT_ONE         %(l1) = %(i1).  There must be at least
                                       & two factors.
11129 IMSLS_NUM_LEVELS_GT_ONE          "n_levels[%(i1)]" = %(i2).  There must
                                       & be at least two levels per factor.
11130 IMSLS_UNIQUE_ANOVA_TABLE         The model specified must lead to a
                                       & unique analysis of variance table.  A
                                       & lower order effect could be pooled
                                       & into either effect #%(i1) or effect
                                       & #%(i2).
11131 IMSLS_NO_MCNEMAR_TEST            Since "table" contains several zero
                                       & observed counts, the McNemar test of
                                       & symmetry cannot be computed.  Row
                                       & #%(i1) of "statistics" is set to NaN
                                       & (not a number).
11132 IMSLS_NO_ONE_DF_MCNEMAR_TEST     Since "table" contains several zero
                                       & observed counts, the McNemar one
                                       & degree of freedom test of symmetry
                                       & cannot be computed.  Row #%(i1) of
                                       & "statistics" is set to NaN (not a
                                       & number).
11133 IMSLS_NO_SPEARMANS_VALUES        Since "table" contains several zero
                                       & observed counts, Spearmans rank
                                       & correlation t-score and p-value cannot
                                       & be computed.  "statistics[6][3]" and
                                       & "statistics[6][4]" are set to NaN (not
                                       & a number).
11134 IMSLS_NO_PROD_M_CORR_VALUES      Since "table" contains several zero
                                       & observed counts, the product moment
                                       & correlation t-score and p-value cannot
                                       & be computed.  "statistics[5][3]" and
                                       & "statistics[5][4]" are set to NaN (not
                                       & a number).
11135 IMSLS_NO_KAPPA_PVALUE            Since the standard error is zero the
                                       & exact p-value for Kappa cannot be
                                       & computed.  "statistics[20][3]" and
                                       & "statistics[20][4]" are set to NaN
                                       & (not a number).
11136 IMSLS_DIM_OF_TABLE_GT_1          "%(s1)" = %(i1).  The number of rows in
                                       & the table, "%(s1)", must be greater
                                       & than 1.
11137 IMSLS_NEED_LD_GT_VALUE           "%(s1)" = %(i1) and "%(s2) = %(i2).  The
                                       & leading dimension of "%(s3)", "%(s1)",
                                       & must be greater than or equal to
                                       & "%(s4)".
11138 IMSLS_LD_STAT_GT_23              "ldstat" = %(i1).  The leading dimension
                                       & of "statistics", "ldstat", must be
                                       & greater than or equal to 23.
11139 IMSLS_WRONG_ICMPT_VALUE          "icmpt" = %(i1).  The computing option,
                                       & "icmpt", must be equal to 0 or 1.
11140 IMSLS_TABLE_VALUES_GT_0          "table[%(i1)][%(i2)] = %(r1).  The
                                       & observed counts in the contingency
                                       & table must be greater than or equal to
                                       & 0.
11141 IMSLS_MARG_TOTAL_NEAR_ZERO       At least one marginal total is near
                                       & zero.  The remainder of the analysis
                                       & cannot proceed.
11145 IMSLS_DF_GT_30                   The degrees of freedom for
                                       & imsls_chi_squared are greater than 30.
                                       &  The exact mean, standard deviation,
                                       & and the normal distribution function
                                       & should be used.
11146 IMSLS_EXP_VALUES_TOO_SMALL       Some expected values are less than
                                       & %(i1).  Some asymptotic p-values may
                                       & not be good.
11147 IMSLS_PERCENT_EXP_VALUES_LT_5    Twenty percent of the expected values
                                       & are calculated less than 5.
11148 IMSLS_COUNTS_LT_3                Since the total observed counts are less
                                       & than 3, "chisq[6]" and "chisq[7]"
                                       & cannot be computed.  Both are set to
                                       & NaN (not a number).
11149 IMSLS_ZERO_COUNTS_IN_DIAGONAL    Since the main diagonal of "%(s1)"
                                       & contains zero observed counts, the
                                       & t-value and p-value for %(s2) cannot
                                       & be computed.  "stat[%(i1)][%(i2)]" and
                                       & "stat[%(i3)][%(i4)]" are set to NaN
                                       & (not a number)
11150 IMSLS_NUM_GROUPS_GT_1            "n_groups" = %(i1).  There must be at
                                       & least two groups
11151 IMSLS_STD_ERR_NONNEGATIVE        "std_err" = %(r1).  The standard error
                                       & of the means must be nonnegative
11152 IMSLS_DF_GT_0                    "df" = %(r1).  There must be at least
                                       & one degree of freedom associated with
                                       & the standard error.
11153 IMSLS_ALPHA_OUT_OF_RANGE         "alpha" = %(r1).  The significance level
                                       & must be in the inclusive range(0.01,
                                       & 0.10).
11154 IMSLS_PROB_OUT_OF_RANGE          The probability must be in the range
                                       & (.90, .99) inclusive, "p" = %(r1).
11155 IMSLS_NUM_SAMPLES_GT_1           The number of samples must be greater
                                       & than or equal to 2.0.  "r" = %(r1).
11156 IMSLS_Q_NOT_POSITIVE             Since "q" = %(r1) is not positive, the
                                       & distribution function is 0.0 at "q".
11157 IMSLS_ONE_OBS_IN_EACH_MEAN       "ni%(i1)" = %(i2).  There must be at
                                       & least one observation in each mean.
11158 IMSLS_S_SQUARED_GT_0             "s2" = %(r1).  S-squared, the estimated
                                       & variance of an observation, must be
                                       & positive.
11159 IMSLS_CONPER_OUT_OF_RANGE        "confidence" = %(r1).  Since the Tukey
                                       & method is requested, "confidence" must
                                       & be in the inclusive range
                                       & (90.0, 99.0).
11160 IMSLS_DFS2_GT_0                  "dfs2" = %(r1).  Degrees of freedom must
                                       & be positive.
11161 IMSLS_WRONG_LD_DIFF_STAT         "ld_diff_stat" = %(i1) and "ngroup" =
                                       & %(i2).  "ld_diff_stat" must be greater
                                       & than or equal to "ngroup" * ("ngroup"
                                       & - 1) / 2.
11162 IMSLS_DF_LT_2                    "df" = %(r1).  The probabilty density
                                       & function diverges at "x" = 0 when
                                       & degrees of freedom, "df" < 2.
11163 IMSLS_OVERFLOW_NCCS_PDF_1        Overflow occurred on first term of
                                       & series.  The return value is set to
                                       & machine infinity.
11164 IMSLS_OVERFLOW_NCCS_PDF_2        Overflow occurred on %(I1) term of
                                       & series.  The return value is set to
                                       & machine infinity.
11165 IMSLS_UNDERFLOW_NCCS_PDF         Underflow occurred on first term of
                                       & series.
11166 IMSLS_DF_NUM_LT_2                "df_numerator" = %(r1).  The probabilty
                                       & density function diverges at "f" = 0
                                       & when numerator degrees of freedom
                                       & "df_numerator" < 2.
11167 IMSLS_NCFINV_UNABLE_TO_BRACKET   Unable to bracket the value of the
                                       & inverse noncentral F CDF at "p" =
                                       & %(F1), with parameters "df_numerator"
                                       & = %(F2), "df_denominator" = %(F3),
                                       & and "lambda" = %(F4).
11168 IMSLS_DIVERGE_LT_1               "%(S1)" = %(F1).  The probabilty density
                                       & function diverges at x = %(F2) when
                                       & "%(S1)" < 1.
11170 IMSLS_ALT_SERIES_ACCURACY_LOSS   Magnitude of alternating series sum too
                                       & small relative to sum of positive
                                       & terms to permit reliable accuracy.
11200 IMSLS_TOO_MANY_ITERATIONS        Too many iterations.  Convergence is
                                       & assumed.
11201 IMSLS_TOO_MANY_HALVINGS          Too many step halvings.  Convergence is
                                       & assumed.
11202 IMSLS_ALPHA_FACTOR_EVAL_NEG      In alpha factor analysis on iteration
                                       & %(i2), eigenvalue %(i1) is %(r2).
                                       &  As all eigenvalues corresponding to
                                       & the factors must be positive, either
                                       & the number of factors must be reduced,
                                       & or new initial estimates for
                                       & "unique_variances" must be given.
11203 IMSLS_COV_EVAL_ERROR             An error occured in calculating the
                                       & eigenvalues of the adjusted (inverse)
                                       & covariance matrix.  Check
                                       & "covariances".
11204 IMSLS_NEG_INPUT_VARIANCES        "IMSLS_UNWEIGHTED_LEAST_SQUARES" is
                                       & specified and
                                       & "unique_variances[%(i1)]" = %(r2).
                                       &  "unique_variances[%(i1)]" must not be
                                       & less than zero or greater than
                                       & "covariances[%(i1),%(i1)]" = %(r1).
11205 IMSLS_COV_NOT_POS_DEF            "covariances" is not positive
                                       & semi-definite.  The computations
                                       & cannot proceed.
11206 IMSLS_COV_IS_SINGULAR            The matrix "covariances" is singular.
                                       &  The computations cannot continue
                                       & because variable %(i1) is linearly
                                       & related to the remaining variables.
11207 IMSLS_COV_NOT_POS_DEF_2          "covariances" is not positive definite.
                                       &  Variable %(i1) is linearly related
                                       & to the other variables.
11208 IMSLS_COV_RANK_LESS_THAN_NF      The rank of the covariance matrix =
                                       & %(i1).  This must be greater than or
                                       & equal to "n_factors" = %(i2).
11209 IMSLS_NVAR_WRONG_RANGE           "n_variables" = %(i2) and "n_factors"
                                       & = %(i1).  "n_factors" must be greater
                                       & than or equal to 1 and less than
                                       & "n_variables".
11210 IMSLS_VARIANCES_INPUT_IGNORED    When using the IMSLS_PRINCIPAL_COMPONENT
                                       & option, the unique variances are
                                       & assumed to be 0.  Input for
                                       & IMSLS_UNIQUE_VARIANCES_INPUT is
                                       & ignored.
11211 IMSLS_NVAR_TOO_SMALL_2           "n_variables" = %(i1).  "n_variables"
                                       & must be 2 or more.
11212 IMSLS_NVAR_TO_SMALL_FOR_MTH      "n_variables+1" = %(i2) and
                                       & "df_covariances" = %(i1).  When
                                       & IMSLS_GENERALIZED_LEAST_SQUARES,
                                       & IMSLS_MAXIMUM_LIKELIHOOD, or
                                       & IMSLS_ALPHA are specified,
                                       & "df_covariances" must be greater than
                                       & or equal to "n_variables+1".
11213 IMSLS_MAX_ITERATIONS_SMALL       "max_iterations" = %(i1).
                                       &  "max_iterations" must be greater than
                                       & or equal to 1.
11214 IMSLS_MAX_STEPS_SMALL            "max_steps_line_search" = %(i1).
                                       &  "max_steps_line_search" must be
                                       & greater than or equal to 1.
11215 IMSLS_EPS_LT_0                   "convergence_eps" = %(r1).
                                       &  "convergence_eps" must be greater
                                       & than or equal to 0.
11216 IMSLS_EPSE_LT_0                  "switch_epsilon" = %(r1).
                                       &  "switch_epsilon" must be greater than
                                       & or equal to 0.
11217 IMSLS_HESSIAN_NOT_POS_DEF        The approximate Hessian is not
                                       & semi-definite on iteration %(i1).  The
                                       & computations cannot proceed.  Try
                                       & using different initial estimates.
11218 IMSLS_FACTOR_EVAL_NOT_POS        "eigenvalues[%(i1)]" = %(r1).
                                       &  An eigenvalue corresponding to a
                                       & factor is negative or zero.  Either
                                       & use different initial estimates for
                                       & "unique_variances", or reduce the
                                       & number of factors.
11219 IMSLS_NO_DEG_FREEDOM             "n_variables" = %(i1) and "n_factors" =
                                       & %(i2).  There are no degrees of
                                       & freedom for the siginificance testing.
11220 IMSLS_NO_MULT_COMP_TEST          Missing values exist in the data, and a
                                       & multiple comparisons test was
                                       & requested.  The multiple comparisons
                                       & procedure does not handle missing
                                       & values.
11221 IMSLS_NUM_AR_PARS_TOO_SMALL      "p" = %(i1) and "q" = %(i2).  "p" must
                                       & be greater than or equal to one and
                                       & "q" must be greater than or equal to
                                       & zero.
11222 IMSLS_MAXLAG_TOO_SMALL           "maxlag" = %(i1) and "p"+"q" = %(i2).
                                       &  "maxlag" must be greater than or
                                       & equal to "p" + "q".
11223 IMSLS_VARIANCE_POSITIVE          "acv[0]" = %(r1).  The variance of the
                                       & series must be greater than zero.
11224 IMSLS_ILL_CONDITIONED            The problem is ill-conditioned.
                                       &  Transformation of the data or
                                       & increased precision in the
                                       & calculations may be appropriate.
11225 IMSLS_YULE_WALKER_SINGULAR       The Yule-Walker equations form a
                                       & singular system of equations.
11226 IMSLS_MAXLAG_OUT_OF_RANGE        "maxlag" = %(i2).  "maxlag" must be
                                       & greater than 1 and less than
                                       & "n_observations" = %(i1).
11227 IMSLS_Z_HAS_MISSING_VALUES       "z[%(i1)]" = NaN (not a number).  "z"
                                       & may not contain missing values.  There
                                       & may be other elements of "z" to equal
                                       & NaN.
11228 IMSLS_IPRINT_OUT_OF_RANGE        "iprint" = %(i1).  "iprint must be 1, 2,
                                       & or 3.
11229 IMSLS_WRONG_ISEOPT_VALUE         "iseopt" = %(i1).  "iseopt" must be 0,
                                       & 1, or 2.
11230 IMSLS_WRONG_IMEAN_VALUE          "imean" = %(i1).  "imean" must be 0 or
                                       & 1.
11231 IMSLS_SEAC_NOT_PRINTED           "iprint" = %(i1) and "iseopt" = %(i2).
                                       &  The "seac" array is not calculated so
                                       & it can't be printed.
11232 IMSLS_CONSTANT_SERIES            The minimum element of "z" is "z[%(i1)]"
                                       & = %(r1).  This equals the maximum
                                       & element of "z".  The series is
                                       & constant.
11233 IMSLS_ORDER_POSITIVE             The order of the matrix must be positive
                                       & while "n" = %(i1) is given.
11234 IMSLS_ORDER_LE_LD                The order of the matrix must be less
                                       & than or equal to its leading dimension
                                       & while "n" = %(i1) and "ldfac" = %(i2)
                                       & are given.
11235 IMSLS_WRONG_FLAG_VALUE           The flag value for computing the matrix
                                       & condition number must be 1 or 2 while
                                       & %(i1) is given.
11236 IMSLS_MATRIX_ALG_SINGULAR        The matrix is algorithmically singular.
                                       &  An estimate of the reciprocal of its
                                       & L1 condition number is "rcond" =
                                       & %(r1).
11237 IMSLS_NUM_EQNS_POSITIVE          The number of equations must be positive
                                       & while "n" = %(i1) is given.
11238 IMSLS_WRONG_IPATH_VALUE          "ipath" must be either 1 or 2 while a
                                       & value of %(i1) is given.
11239 IMSLS_WRONG_OPTION_VALUES        The option values 3,4 must be
                                       & respectively not less than zero, and
                                       & non-negative while %(i1) and %(i2) are
                                       & given.
11240 IMSLS_MATRIX_ILL_CONDITIONED     The matrix is too ill-conditioned.  An
                                       & estimate of the reciprocal of its L1
                                       & condition number is "rcond" = %(r1).
                                       &  The solution might not be accurate.
11241 IMSLS_MATRIX_SINGULAR            The input matrix is singular.  Some of
                                       & the diagonal elements of the upper
                                       & triangular matrix U of the LU
                                       & factorization are close to zero.
11242 IMSLS_NUM_MA_PARS_TOO_SMALL      "p" = %(i1) and "q" = %(i2).
                                       &  "p" must be greater than or equal
                                       & to zero and "q" must be greater than
                                       & or equal to one.
11243 IMSLS_MAXIT_GE_ZERO              The maximum number of iterations =
                                       & %(i1).  This argument must be greater
                                       & than or equal to 0.
11244 IMSLS_RELERR_GT_ZERO             "relerr" = %(r1).  "relerr" must be
                                       & greater than or equal to 0.0.
11245 IMSLS_DERIVED_VAR_GT_ZERO        The variance of the derived moving
                                       & average process is equal to %(r1).
                                       &  It must be greater than zero.  Check
                                       & the elements of "acv".
11246 IMSLS_WRONG_RAND_SHOCK_VAR       The estimate of random shock variance is
                                       & equal to %(r1).
11248 IMSLS_NUM_EQNS_AND_UNKNOWNS      The argument "n" = %(i1).  The number of
                                       & equations to be solved and the number
                                       & of unknowns must be at least equal to
                                       & 1.
11249 IMSLS_ERRREL_GE_ZERO             The argument "errrel" = %(r1).  The
                                       & bound for the relative error should
                                       & be at least equal to 0.
11250 IMSLS_TOO_MANY_CALLS             The number of calls to the function has
                                       & exceeded "itmax" * ("n" + 1) = %(i1).
                                       &  The user may try a new initial guess.
11251 IMSLS_INCREASE_ERRREL            The bound for the relative error,
                                       & "errrel" = %(r1), is too small.  No
                                       & further improvement in the approximate
                                       & solution is possible.  The user should
                                       & increase "errrel".
11252 IMSLS_NEW_INITIAL_GUESS          The iteration has not made good
                                       & progress.  The user may try a new
                                       & initial guess.
11253 IMSLS_NUM_PARS_GE_ONE            "p" and "q" both equal zero.  "p" + "q"
                                       & must be 1 or more.
11254 IMSLS_LDCOV_TOO_SMALL            "ldcov" = %(i1).  "ldcov" must be
                                       & greater than or equal to "np" =
                                       & "imean" + "p" + "q" = %(i2).
11255 IMSLS_LDFJAC_TOO_SMALL           "ldfjac" = %(i1).  "ldfjac" must be
                                       & equal to "m" = "n_observations" -
                                       & "iardeg" - "length" = %(i2).
11256 IMSLS_LEAST_SQUARES_FAILED       Least squares estimation of the
                                       & parameters has failed to converge.
                                       &  Solution from last iteration is
                                       & returned.  The estimates of the
                                       & parameters at the last iteration may
                                       & be used as new starting values.
11257 IMSLS_NUM_PARS_TOO_SMALL         "p" = %(i1) and "q" = %(i2).  Each
                                       & of them must be greater than or equal
                                       & to 0 and their sum must be greater
                                       & than or equal to 1.
11258 IMSLS_WRONG_NOBS_AND_NUM_PARS    "n_observations" = %(i1), "p" = %(i2),
                                       & "q" = %(i3).  "p" + "q" must be
                                       & greater than or equal to one and
                                       & "n_observations" must be greater than
                                       & "p" + "q" + 1.
11259 IMSLS_IPRINT_OUT_OF_RANGE_2      "iprint" = %(i1).  "iprint" must be 0,
                                       & 1, or 2.
11260 IMSLS_NPAR_TOO_SMALL             "p" = %(i1).  "p" must be 0 or more.
11261 IMSLS_LAGAR_GT_ONE               The minimum element of "ar_lags" = 
                                       & "ar_lags[%(i1)]" = %(i2).  All
                                       & elements of "ar_lags" must be greater
                                       & than or equal to one.
11262 IMSLS_LAGMA_GT_ONE               The minimum element of "ma_lags" =
                                       & "ma_lags[%(i1)]" = %(i2).  All
                                       & elements of "ma_lags" must be greater
                                       & than or equal to one.
11263 IMSLS_NPMA_TOO_SMALL             "q" = %(i1).  "q" must be 0 or more.
11264 IMSLS_MAXBC_GE_ZERO              "length" = %(i1).  "length" must be 0 or
                                       & more.
11265 IMSLS_TOLBC_GE_ZERO              "tolerance" = %(r1).  "tolerance" must
                                       & be greater than or equal to 0.0.
11266 IMSLS_TOLSS_OUT_OF_RANGE         "convergence_tolerance" = %(r1).
                                       &  "convergence_tolerance" must be
                                       & greater than or equal to 0.0 and less
                                       & than 1.0.
11267 IMSLS_NOBS_GE_ONE                "n_observations" = %(i1).
                                       &  "n_observations" must be 1 or more.
11268 IMSLS_WRONG_IDIR_VALUE           "idir" = %(i1).  "idir" must be 1 or -1.
11269 IMSLS_MXLEAD_GE_ONE              "mxlead" = %(i1).  "mxlead" must be 1 or
                                       & more.
11270 IMSLS_TOL_GE_ZERO                "tol" = %(r1).  "tol" must be 0.0 or
                                       & more.
11271 IMSLS_ISAR_GE_ONE                "isar" = %(i1).  "isar" must be one or
                                       & more.
11272 IMSLS_ISMA_GE_ONE                "isma" = %(i1).  "isma" must be one or
                                       & more.
11273 IMSLS_OUT_OF_RANGE_1             "idir" = 1, "iardeg" = %(i1), "lorig" =
                                       & %(i2), and "n_observations" = %(i3).
                                       &  When "idir" = 1, then "iardeg" must
                                       & be less than or equal to "lorig" which
                                       & must be less than or equal to
                                       & "n_observations".
11274 IMSLS_OUT_OF_RANGE_2             "idir" = -1, "iardeg" = %(i1), "lorig"
                                       & = %(i2), and "n_observations" = %(i3).
                                       &  When "idir" = -1, then "lorig" must
                                       & be greater than or equal to 1 and less
                                       & than or equal to "n_observations" -
                                       & "iardeg + 1.
11275 IMSLS_OUT_OF_RANGE_3             1+("isar" * the maximum element of
                                       & "ar_lags") + "nfcst" = %(i1), "nstart"
                                       & = %(i2), "nend" = %(i3),
                                       & "n_observations" = %(i4), and "idir" =
                                       & 1.  Some argument(s) are out of range.
11278 IMSLS_NCA_EQ_NB                  The order of the output matrix must be
                                       & equal to the number of columns of the
                                       & input matrix.  "nca" = %(i2) and "nb"
                                       & = %(i1) is given.
11279 IMSLS_NB_LE_LDB                  The order of a matrix must be less than
                                       & or equal to its leading dimension.
                                       &  "nb" = %(i2) and "ldb" = %(i1) are
                                       & given.
11280 IMSLS_LDA_GE_N                   The argument "lda" = %(i1).  It must be
                                       & at least as large as "n" = %(i2).
11281 IMSLS_LDB_GE_N                   The argument "ldb" = %(i1).  It must be
                                       & at least as large as "n" = %(i2).
11282 IMSLS_NEED_K_GE_ZERO             "k" must be greater than or equal to
                                       & zero while %(i1) is given.
11283 IMSLS_LDC_GE_M                   "ldc" must be greater than or equal to
                                       & "m" and greater than zero while "ldc"
                                       & = %(i1) and "m" = %(i2) are given.
11284 IMSLS_LDA_GE_M                   "lda" must be greater than or equal to
                                       & "m" and greater than zero when
                                       & "transa" = "n", but "lda" = %(i1) and
                                       & "m" = %(i2) are given.
11285 IMSLS_LDA_GE_K                   "lda" must be greater than or equal to
                                       & "k" and greater than zero when
                                       & "transa" = "t" or "c", but "lda" =
                                       & %(i1) and "k" = %(i2) are given.
11286 IMSLS_WRONG_TRANSA_VALUE         "transa" must be set equal to "n" or "t"
                                       & or "c" while %(l1) is given.
11287 IMSLS_LDB_GE_K                   "ldb" must be greater than or equal to
                                       & "k" and greater than zero when
                                       & "transb" = "n", but "ldb" = %(i1) and
                                       & "k" = %(i2) are given.
11288 IMSLS_VAR_IN_X_CONTAINED_NAN     At least one observation for a variable
                                       & in "x" contained NaN (a missing
                                       & value).  Missing observations were
                                       & excluded from calculations for those
                                       & variables.
11289 IMSLS_MATRIX_ILL_CONDITIONED_2   The matrix is too ill-conditioned for
                                       & iterative refinement to be effective.
11290 IMSLS_TIE_DETECTED               "%(i1)" ties were detected in the
                                       & sample.
11400  IMSLS_DIM_OF_HYPER_REC_0        The dimension of the hyper-rectangle "n"
                                       & = %(I1).  "n" must be greater than
                                       & zero.
11401  IMSLS_SKIP_NEG                  Argument skip cannot be less than or
                                       & equal to zero, while "skip" = %(I1) is
                                       & given.
11402  IMSLS_BASE_NOT_PRIME            Argument base must be a prime at least
                                       & as large as the dimension, while
                                       & "base" = %(I1) and "dim" = %(I2) are
                                       & given.
11410  IMSLS_NOBS_GT_NY_NX             The number of observations must be
                                       & greater than 0 and less than or equal
                                       & to min("ny","nx"), while "nobs" =
                                       & %(i1) and min("ny","nx") = %(i2).
11411  IMSLS_INDICES_NOT_VALID         Elements of "%(l1)" must be between 0
                                       & and "%(l2)"-1, while the minimum value
                                       & in "%(l1)" is equal to %(i1), the
                                       & maximum value in "%(l1)" is equal to
                                       & %(i2) and "%(l2)" = %(i3).
11412  IMSLS_INDICES_UNIQUE            "%(l1)[%(i1)]" = "%(l1)[%(i2)]" = %(i3).
                                       &  The elements of "%(l1)" must be
                                       & unique.
11413  IMSLS_COMPONENT_NOT_VAILD       The number of components must be greater
                                       & than 0 and less than or equal to the
                                       & number of predictors, %(i2), while
                                       & "ncomps" = %(i1).
11414  IMSLS_K_GT_NOBS                 The number of folds must be greater than
                                       & 0 and less than or equal to "nobs",
                                       & while "k" = %(i1) and "nobs" = %(i2)."
11415  IMSLS_RESIDUAL_CONVERGED        For response %(i2), residuals converged
                                       & in %(i1) components, while %(i3) is
                                       & the requested number of components.
11416  IMSLS_NOBS_NY_EQUAL             "y" and "x" must have the same number of
                                       & observations while "nobs" = %(i1) and
                                       & "ny" = %(i2)
11417  IMSLS_INVALID_MODEL_VAL0        The number of autoregressive parameters,
                                       & "model[0]", must be nonnegative, while
                                       & "model[0]" = %(i1).
11418  IMSLS_INVALID_MODEL_VAL1        The order of the nonseasonal difference
                                       & operator, "model[1]", must be
                                       & nonnegative, while "model[1]" = %(i1).
11419  IMSLS_INVALID_MODEL_VAL2        The number of moving average parameters,
                                       & "model[2]", must be nonnegative, while
                                       & "model[2]" = %(i1).
11420 IMSLS_6529_INF_INIT_TRM          A and S series 6.5.29 has infinite
                                       & initial term.
11421 IMSLS_6531_INF_INIT_APPRX        A and S series 6.5.31 has infinite
                                       & initial approximation.
11422 IMSLS_USE_NRM_APPRX_LRG_DF       Use normal approximation for large
                                       & degrees of freedom parameter.
11423 IMSLS_6529_NOT_CONVERGE          A and S series 6.5.29 did not converge.
11424 IMSLS_6531_NOT_CONVERGE          continued fraction A and S 6.5.31 did
                                       & not converge.
11425 IMSLS_PVAL_UNDERFLOW             The p-value has fallen below the minimum
                                       & value of %(r1) for which its
                                       & calculation has any accuracy; ZERO is
                                       & returned.
11426 IMSLS_BAD_IDO_AND_MED_OPTIONS    IMSLS_MEDIAN and IMSLS_MEDIAN_AND_SCALE
                                       & are not valid optional arguments when
                                       & "ido" is greater than 0.  "ido=%(I1)".
11427 IMSLS_BAD_N_CATEGORIES           "n_categories" = %(i1).  The number of
                                       & categories variable, "n_categories",
                                       & must be the same in separate function
                                       & calls.
11428 IMSLS_BAD_N_VARIABLES            "n_variables" = %(i1).  The number of
                                       & variables must be the same in
                                       & separate function invocations.
11429 IMSLS_LDB_GE_N_GEMM              ldb must be greater than or equal to N 
                                       & and greater than zero when TRANSB = T 
                                       & or C, but LDB = %(i1) and N = %(i2) 
                                       & are given.
11430 IMSLS_WRONG_TRANSB_VALUE         "transb" must be set equal to "n" or "t"
                                       & or "c" while %(l1) is given.
12009 IMSLS_ARG_OUT_OF_RANGE           The argument must be between 1 and 8
                                       & inclusive.  "n" = %(I1).
12010 IMSLS_INDEX_VARIABLE_VALUE       The absolute value of the index variable
                                       & must be 1 or 2.  "n" = %(I1).
12111 IMSLS_BAD_CONST_NAME             The argument "name" = "%(S1)" is
                                       & illegal.
12112 IMSLS_INCOMPATIBLE_UNITS         The units "xunits" = "%(S1)" and
                                       & "yunits" = "%(S2)" are not compatible.
12113 IMSLS_MASS_TO_FORCE              A conversion of units of mass to units
                                       & of force was required for consistency.
12114 IMSLS_ILLEGAL_UNIT               The unit "%(S1)" is illegal.
12115 IMSLS_HEXAGONAL_WRAP_AROUND      "%(S1)" = %(I1).  A hexagonal grid must
                                       & have an even numbers of rows to wrap
                                       & around.
12116 IMSLS_STOP_USER_FCN              Request from user supplied function to
                                       & stop algorithm.  User flag = "%(I1)".
12117 IMSLS_PRODS_GT_MAXNUMPRODS       There are more unique products in your
                                       & data than indicated by "%(S1)"
                                       & ("%(S1)" = %(i1)). Increase "%(S1)"
                                       & to account for the maximum possible
                                       & number of products.
12118 IMSLS_MIN_SUPPORT_NOT_MET        No items met minimum support of %(r1).
12119 IMSLS_MUT_EXC_OPT                The options IMSLS_FREQUENT_ITEMSETS,
                                       & IMSLS_UNION,
                                       & IMSLS_COUNT,
									   & IMSLS_SUM,
                                       & IMSLS_UPDATE_FREQ_ITEMSETS, and
                                       & IMSLS_ASSOCIATION_RULES are mutually
                                       & exclusive options.  Exactly one can be
                                       & specified in a single invocation of
                                       & this function.
12120 IMSLS_INVALID_STEP               "%(S1)" must be IMSLS_FREQUENT_ITEMSETS,
                                       & IMSLS_UNION, IMSLS_COUNT, IMSLS_SUM, 
                                       & IMSLS_UPDATE_FREQ_ITEMSETS or
									   & IMSLS_ASSOCIATION_RULES.
12123 IMSLS_PARAM_LIMIT                Hitting the %(s1) bound, %(r1). Try
                                       & %(s2) values of "t_order" and/or "s_order".
20020 IMSLS_IOPT_NEED_2_INTERVALS      "n_intervals" = %(i1).  Since %(s1) is
                                       & specified, there must be at least two
                                       & intervals.
20021 IMSLS_IOPT_NEED_3_INTERVALS      "n_intervals" = %(i1).  Since
                                       & IMSLS_KNOWN_BOUNDS is specified, there
                                       & must be at least three intervals.
20022 IMSLS_MUT_EXC_TALLY_OPT          The options IMSLS_DATA_BOUNDS,
                                       & IMSLS_KNOWN_BOUNDS, IMSLS_CUTPOINTS,
                                       & and IMSLS_CLASS_MARKS are mutually
                                       & exclusive options.  Only one can be
                                       & specified in a single invocation of
                                       & this routine.
20023 IMSLS_XHI_LT_XLO                 "lower_bound" = %(r1) and "upper_bound"
                                       & = %(r2).  The lower bound must be less
                                       & than the upper bound.
20024 IMSLS_DIV_NOT_MONOTONIC          "%(l1)[%(i1)]" = %(r1) and
                                       & "%(l1)[%(i2)]" = %(r2).  The elements
                                       & of "%(l1)" must be monotonically
                                       & increasing.
20025 IMSLS_N_INTERVALS_LT_1           "n_intervals" = %(i1).  There must be at
                                       & least one interval.
20026 IMSLS_NAN_NOT_ALLOWED            "%(S1)" contains missing values.
                                       &  Missing values are not allowed.
20027 IMSLS_INDKEY_RANGE               "%(S1)[%(i1)]" = %(i2) and "%(S3)" =
                                       & %(i3).  "%(S1)[i]" must be greater
                                       & than 0 and less than or equal to
                                       & "%(S3)".
20030 IMSLS_NEED_ABS_RHO_LE_1          The absolute value of the correlation
                                       & coefficient, "rho" = %(r1), must be
                                       & less than or equal to 1.
20031 IMSLS_ABS_RHO_EQ_1               Since the absolute value of the
                                       & correlation coefficient, "rho", is
                                       & equal to 1.0, the distribution is
                                       & singular and the function is computed
                                       & based on the univariate normal
                                       & distribution.
20050 IMSLS_NONESTIMABLE               Within the preset tolerance, the linear
                                       & combination of regression coefficients
                                       & is nonestimable.
20051 IMSLS_LEVERAGE_GT_1              A leverage (= %(r1)) much greater than
                                       & 1.0 is computed.  It is set to 1.0.
20052 IMSLS_DEL_MSE_LT_0               A deleted residual mean square (= %(r1))
                                       & much less than zero is computed.  It
                                       & is set to zero.
20053 IMSLS_INDICES_RANGE              "%(S1)[%(i1)]" = %(i2) and "%(S3)" =
                                       & %(i3).  "%(S1)[i]" must be greater
                                       & than or equal to 0 and less than
                                       & "%(S3)".
20054 IMSLS_NEGATIVE_SAMPLE_SIZE       The sample size specified for computing
                                       & a prediction interval on the average
                                       & is "n_sample[%(i1)]" = %(r1).  Sample
                                       & sizes must be positive.
20060 IMSLS_MALLOWS_CP_ERROR           "n_observations" = %(I1) and
                                       & "n_candidate" = %(i2).  The number of
                                       & observations, "n_observations", must
                                       & be greater than or equal to the
                                       & number of independent variables plus
                                       & 1, "n_candidate" + 2, when using the
                                       & Mallows Cp criterion.
20061 IMSLS_SUBSET_SIZE_ERROR          "max_subset_size" = %(i1).  The maximum
                                       & subset size must be greater than 0 and
                                       & less than than or equal to the number
                                       & of candidate variables, "n_candidate"
                                       & = %(i2).
20062 IMSLS_LEVEL_MINIMUM              The minimum element of "level" is
                                       & "level[%(i1)]" = %(i2).  All elements
                                       & of "level" must be greater than or
                                       & equal to -1.
20063 IMSLS_LEVEL_MAXIMUM              The maximum element of "level" is
                                       & "level[%(i1)]" = %(i2).  This is less
                                       & than or equal to 0.  No variables can
                                       & be added to or deleted from the model.
20064 IMSLS_LEVEL_DEPENDENT            "level[%(i1)]" = -1 and "level[%(i2)]"
                                       & = -1.  There can be only one dependent
                                       & variable in the model.
20065 IMSLS_ISTEP                      "istep" = (%i1).  "istep" must be -1, 0,
                                       & or 1.
20066 IMSLS_P_IN_RANGE                 "p_value_in" = %(r1).  "p_value_in" must
                                       & be in the exclusive range 0.0 to 1.0.
20067 IMSLS_P_OUT_RANGE                "p_value_out" = %(r1).  "p_value_out"
                                       & must be in the exclusive range 0.0 to
                                       & 1.0.
20068 IMSLS_IN_GT_OUT                  "p_value_in" = %(r1) and "p_value_out" =
                                       & %(r2).  "p_value_in" must be less than
                                       & or equal to "p_value_out" and each of
                                       & them must be in the exclusive range
                                       & 0.0 to 1.0.
20069 IMSLS_TOLERANCE_RANGE            "tolerance" = %(r1).  "tolerance" must
                                       & be greater than or equal to 0 and
                                       & less than or equal to 1.
20070 IMSLS_LINEAR_DEPENDENCE_1        Based on "tolerance" = %(r1), there are
                                       & linear dependencies among the
                                       & variables to be forced.
20071 IMSLS_CYCLING_IS_OCCURING        %(i1) steps have been taken.  This is
                                       & greater than twice the number of
                                       & variables with "level" greater than 0.
                                       &  Cycling is occuring.  No more steps
                                       & will be taken.
20072 IMSLS_NO_VARIABLES_ENTERED       No variables entered the model.  All
                                       & elements of "anova_table" are set to
                                       & NaN (not a number).
20080 IMSLS_INCORRECT_N_CLUSTERS       The number of clusters, "n_clusters" =
                                       & %(i1), is misspecified.  It should be
                                       & a positive integer ranging from two to
                                       & the number of observations,
                                       & "n_observations" = %(i2).
20081 IMSLS_INVALID_FREQUENCY          All frequencies must be nonnegative and
                                       & nonmissing.  A negative, zero, or
                                       & missing frequency has been found at
                                       & "frequencies[%(i1)]".
20082 IMSLS_INVALID_WEIGHT             All weights must be nonnegative and
                                       & nonmissing.  A negative, zero, or
                                       & missing weight has been found at
                                       & "weights[%(i1)]".
20083 IMSLS_CLUSTER_EMPTY              The cluster seed for cluster number
                                       & %(i1) yields a cluster which has no
                                       & points.
20084 IMSLS_NO_CONVERGENCE             Convergence did not occur in %(i1)
                                       & iterations.
20085 IMSLS_NO_CONVERGENCE_FERR        Convergence did not occur in %(i1)
                                       & iterations.  Fractional error = %(r1).
20090 IMSLS_K2EAN_ERROR_59             IND(%(i2)) = IWT = %(i1).  IWT must not
                                       & be equal to any of the INDs.
20091 IMSLS_K2EAN_ERROR_60             IND(%(i2)) = IFRQ = %(i1).  IFRQ must
                                       & not be equal to any of the INDs.
20092 IMSLS_K2EAN_ERROR_56             IFRQ = %(i3) and IWT = %(i4).  The
                                       & variable NVAR = %(i1) must be greater
                                       & than or equal to 1, and less than or
                                       & equal to NCOL = %(i2) minus 2.
20093 IMSLS_K2EAN_ERROR_57             IFRQ = %(i3) and IWT = %(i4).  NVAR =
                                       & %(i1) must be greater than or equal to
                                       & 1 and and less than or equal to NCOL =
                                       & %(i2) minus 1.
20094 IMSLS_K2EAN_ERROR_58             When the frequency and weight are both
                                       & zero, the variable NVAR = %(i1) must
                                       & range from 1 to the number of columns,
                                       & NCOL = %(i2).
20100 IMSLS_COV_DIAG_NONNEGATIVE       "covariances[%(i1)][%(i1)]" = %(r1).
                                       &  All diagonal elements of
                                       & "covariances" must be nonnegative.
20101 IMSLS_100_DF                     Because the number of degrees of freedom
                                       & in "covariances", "n_degress_freedom",
                                       & is less than or equal to 0, 100
                                       & degrees of freedom will be used.
20102 IMSLS_COV_NOT_NONNEG_DEF         "eigenvalues[%(i1)]" = %(r1).  One or
                                       & more eigenvalues much less than zero
                                       & are computed.  The matrix
                                       & "covariances" is not nonnegative
                                       & definite.  In order to continue
                                       & computations of "eigenvalues" and
                                       & "correlations", these eigenvalues
                                       & are treated as zero.
20104 IMSLS_NO_VARIABLES               No variables can enter any model.
20105 IMSLS_VARIABLES_DELETED          At least one variable is deleted from
                                       & the full model because the
                                       & variance-covariance matrix "cov" is
                                       & singular.
20106 IMSLS_ALMOST_EXACT_FIT           The residual mean squared error
                                       & indicates that the full model is
                                       & nearly an exact fit.  For these cases,
                                       & the value of Mallows CP criterion are
                                       & poorly determined.
20110 IMSLS_NEED_POSITIVE_NUM_FCNS     The number of functions must be positive
                                       & while "m" = %(I1) is given.
20111 IMSLS_N_MUST_BE_POSITIVE         The number of variables must be positive
                                       & while "n" = %(I1) is given.
20112 IMSLS_TOO_MANY_VARIABLES         The number of variables must be less
                                       & than or equal to the number of
                                       & functions while "n" = %(I1) and
                                       & "m" = %(I2) are given.
20113 IMSLS_NEGATIVE_STEP_EPS          The step tolerance must be nonnegative
                                       & while "step_eps" = %(F1) is given.
                                       &  The algorithm will use "step_eps" =
                                       & %(F2).
20114 IMSLS_NEGATIVE_SSE_REL_EPS       The relative SSE function tolerance must
                                       & be nonnegative while "sse_rel_eps" =
                                       & %(F1) is given.  The algorithm will
                                       & use "sse_rel_eps" = %(F2).
20115 IMSLS_NEGATIVE_FALSE_CONV_TOL    The false convergence tolerance must be
                                       & nonnegative while "tolerance" = %(F1)
                                       & is given.  The algorithm will use
                                       & "tolerance" = %(F2).
20116 IMSLS_NEGATIVE_SSE_ABS_EPS       The absolute SSE function tolerance must
                                       & be nonnegative while "sse_abs_eps" =
                                       & %(F1) is given.  The algorithm will
                                       & use "sse_abs_eps" = %(F2).
20117 IMSLS_NEED_NONNEGATIVE_STEPMX    The maximum allowable scaled step length
                                       & must be positive while "max_step" =
                                       & %(F1) is given.  The algorithm will
                                       & use "max_step" = %(F2).
20118 IMSLS_NEGATIVE_TRUST_REGION      The initial trust region radius must be
                                       & positive while "trust_region" = %(F1)
                                       & is given.  The algorithm will use the
                                       & length of the initial scaled Cauchy
                                       & step for "trust_region".
20119 IMSLS_LITTLE_FCN_CHANGE          Relative function convergence - Both
                                       & the scaled actual and predicted
                                       & reductions in the function are less
                                       & than or equal to the relative function
                                       & convergence tolerance "sse_rel_eps" =
                                       & %(F1).
20120 IMSLS_TOO_MANY_JACOBIAN_EVAL     Maximum number of Jacobian evaluations
                                       & exceeded.
20121 IMSLS_BAD_THETA_SCALE_VALUE      The values for the scaling matrix,
                                       & "theta_scale", must be positive while
                                       & at least one entry is less than or
                                       & equal to zero.  The algorithm will use
                                       & the identity scaling matrix for
                                       & "theta_scale".
20122 IMSLS_NEED_POSITIVE_FSCALE_ELEM  The values for the diagonal matrix,
                                       & "fscale", must be positive while at
                                       & least one entry is less than or equal
                                       & to zero.  The algorithm will use the
                                       & identity scaling matrix for "fscale".
20123 IMSLS_NEED_POSITIVE_NDIGIT       The estimate of the number of good
                                       & digits in the functions must be
                                       & positive while "ndigit" = %(I1) is
                                       & given.  The algorithm will assume
                                       & that the function is accurate to the
                                       & precision of the arithmetic.
20124 IMSLS_NEED_POSITIVE_MXITER       The maximum number of iterations must be
                                       & positive while "max_itn" = %(I1) is
                                       & given.  The algorithm will use
                                       & "max_itn" = 100.
20125 IMSLS_NEGATIVE_MAX_SSE_EVAL      The maximum number of sse function
                                       & evaluations must be positive while
                                       & "max_sse_eval" = %(I1) is given.  The
                                       & algorithm will use "max_sse_eval" =
                                       & 400.
20126 IMSLS_NEED_POSITIVE_MAXJAC       The maximum number of Jacobian
                                       & evaluations must be positive while
                                       & "max_jacobian" = %(I1) is given.  The
                                       & algorithm will use "max_jacobian" =
                                       & 100.
20127 IMSLS_NEGATIVE_GRADIENT_EPS      The gradient tolerance must be
                                       & nonnegative while "gradient_eps" =
                                       & %(F1) is given.  The algorithm will
                                       & use "gradient_eps" = %(F2).
20128 IMSLS_STEP_TOLERANCE             Scaled step tolerance satisfied; the
                                       & current point may be an approximate
                                       & local solution, or the algorithm is
                                       & making very slow progress and is not
                                       & near a solution, or "step_eps" is too
                                       & big.
20129 IMSLS_UNBOUNDED                  Five consecutive steps of length
                                       & "max_step" have been taken; either the
                                       & function is unbounded below, or has a
                                       & finite asymptote in some direction or
                                       & the maximum allowable step size
                                       & "max_step" is too small.
20130 IMSLS_FALSE_CONVERGENCE          False convergence - The iterates appear
                                       & to be converging to a noncritical
                                       & point.  Possibly incorrect gradient
                                       & information is used, or the function
                                       & is discontinuous, or the other
                                       & stopping tolerances are too tight.
20131 IMSLS_TOO_MANY_ITN               Maximum number of iterations exceeded.
20133 IMSLS_WRONG_EPSFCN_VALUE         The estimate for the relative noise in
                                       & the function must be between 0.0 and
                                       & 0.1 while "epsfcn" = %(F1) is given.
20134 IMSLS_POS_XSCALE_ELMNTS_NEEDED   The values for the diagonal scaling
                                       & matrix must be positive while
                                       & "xscale(%(I1))" = %(F1) is given.
20135 IMSLS_TOO_MANY_FCN_EVAL          Maximum number of function evaluations
                                       & exceeded.
20136 IMSLS_NEED_NRA_AND_NCA_GT_ZERO   Both the number of rows and the number
                                       & of columns of the input matrix have to
                                       & be positive while "nra" = %(I1) and
                                       & "nca" = %(I2) are given.
20137 IMSLS_NEED_SMALLER_NRA_VALUE     The number of rows of A must be less
                                       & than or equal to its leading dimension
                                       & while "nra" = %(I1) and "lda" = %(I2)
                                       & are given.
20138 IMSLS_NRQR_GREATER_THAN_LDQR     The number of rows of "qr" must be less
                                       & than or equal to its leading dimension
                                       & while "nra" = %(I1) and "ldqr" = %(I2)
                                       & are given.
20139 IMSLS_TRANS_MUST_EQUAL_N_T_OR_C  "trans" must be set equal to "n" or "t"
                                       & or "c" while "%(S1)" is given.
20150 IMSLS_BAD_RESULT_COL_DIM         The specified column dimension for the
                                       & result is %(i1).  For the matrix
                                       & operation %(l1), the column dimension
                                       & of the result must be greater than or
                                       & equal to %(i2).
20151 IMSLS_INVALID_MULT_STRING        Invalid matrix multiplication string:
                                       & "%(S1)".
20152 IMSLS_MAT_MUL_UNDEFINED          The array "%(S1)" is used but has not
                                       & been set via an optional argument.
20153 IMSLS_MATMUL_DIM_MISMATCH_2      Cannot multiply a %(I1) by %(I2) matrix
                                       & and a %(I3) by %(I4) matrix.
20154 IMSLS_MATMUL_DIM_MISMATCH_3      Cannot multiply a %(I1) by %(I2) matrix
                                       & times a %(I3) by %(I4) matrix times
                                       & a %(I5) by %(I6) matrix.
20200 IMSLS_TOO_MANY_MISSING           After removing the missing observations
                                       & only %(i1) observations remain.  The
                                       & test cannot proceed.
20201 IMSLS_ALL_OBS_TIED               All observations in "x" are tied.
20202 IMSLS_NEED_AT_LEAST_5            All but %(i1) elements of "x" are
                                       & missing.  At least five nonmissing
                                       & observations are necessary to
                                       & continue.
20203 IMSLS_NEG_IN_EXPONENTIAL         In testing for an exponential
                                       & distribution, an invalid element in
                                       & "x" is found (X = %(r1)).  Negative
                                       & values are impossible in exponential
                                       & distributions.
20204 IMSLS_NO_VARIATION_INPUT         There is no variation in the input data.
                                       &  All nonmissing observations are tied.
20205 IMSLS_PROB_LT_HUNDRETH           The computed probability is less than
                                       & 0.01.  Probability is set to 0.01.
20206 IMSLS_PROB_GT_TENTH              The computed probability is greater
                                       & than 0.10.  Probability is set to
                                       & 0.50.
20207 IMSLS_PROB_GT_FIFTEENTH          The computed probability is greater
                                       & than 0.15.  Probability is set to
                                       & 0.50.
20208 IMSLS_TWO_OR_MORE_TIED           Two or more elements in "x" are tied.
20210 IMSLS_PERIODS_LT_ZERO            "period[%(i1)]" = %(i2).  All elements
                                       & of period must be greater than zero.
20211 IMSLS_ORDER_NEGATIVE             "order[%(i1)]" = %(i2).  All elements of
                                       & "order" must be non-negative.
20212 IMSLS_Z_CONTAINS_NAN             "z[%(i1)]" = NaN (not a number).  "z"
                                       & may not contain missing values.  There
                                       & may be other elements of Z that are
                                       & equal to NaN.
20220 IMSLS_SPECIFY_Y                  The observed values, "y", are required
                                       & (use optional argument IMSLS_Y) when
                                       & optional argument %(S1) is specified.
20221 IMSLS_NEG_FUTURE                 "n_sample[%(i1)]" = %(r1).  The number
                                       & of future observations for a
                                       & prediction interval on the average
                                       & must be positive.
20222 IMSLS_NEG_WEIGHT                 "weights[%(i1)]" = %(f1).  Weights must
                                       & be nonnegative.
20223 IMSLS_D_MUST_BE_POSITIVE         "poly_info->d[%(i1)]" = %(r1).  Each
                                       element of "d" must be positive.
20230 IMSLS_BAD_MODEL_ORDER            "model_order" = %(I1).  The optional
                                       & argument IMSLS_MODEL_ORDER allows only
                                       & for model orders of one and two.
                                       &  Optional argument
                                       & IMSLS_INDICES_EFFECTS can be used to
                                       & specify higher model orders.
20231 IMSLS_GRGLM_1                    NCLVAL[%(i1)] = %(i2).  NCLVAL[%(i1)]
                                       & must be greater than or equal to one.
20232 IMSLS_BAD_DUMMY_METHOD           An invalid value is specified for
                                       & "dummy_method".  Valid choices are
                                       & IMSLS_ALL, IMSLS_LEAVE_OUT_LAST, and
                                       & IMSLS_SUM_TO_ZERO.
20233 IMSLS_BAD_COL_DIM                "x_col_dim" = %(I1).  The column
                                       & dimension of "x" must greater than or
                                       & equal to the sum of "n_class" and
                                       & "n_cont".
20234 IMSLS_NO_VARIABLES_1             "n_class" = 0 and "n_cont" = 0.  There
                                       & must be at least one variable
                                       & specified.
20235 IMSLS_BAD_CLASS_COLUMN           "x_class_column[%(i1)]" = %(i2) and
                                       & "x_col_dim" = %(i3).
                                       & "x_class_column[%(i1)]" must be
                                       & greater than or equal zero and less
                                       & than or equal to "x_col_dim" - 1.
20236 IMSLS_GRGLM_2                    MAXCL = %(i1) is too small.  MAXCL and
                                       & the dimension of CLVAL should be
                                       & increased, or the number of values of
                                       & the class variables must be decreased
                                       & (e.g, rounding may be desirable).
20237 IMSLS_INDEX_ERROR_1              "n_var_effects[%(i1)]" = %(i2).
                                       &  "n_var_effects[%(i1)]" must be
                                       & greater than or equal to 1.
20238 IMSLS_INDEX_ERROR_2              "indices_effects[%(i1)]" = %(i2) and
                                       & "x_col_dim" = %(i3).
                                       & "indices_effects[%(i1)]"must be
                                       & greater than or equal zero and less
                                       & than or equal "x_col_dim" - 1.
20240 IMSLS_NSBJF_1                    Bad input from "arma_info".  "p" =
                                       & %(i1).  "p" must be non-negative.
20241 IMSLS_NSBJF_2                    Bad input from "arma_info".  The
                                       & smallest element of "ar_lags" is
                                       & "ar_lags[%(i1)]" = %(i2).  All
                                       & elements of "ar_lags" must be greater
                                       & than zero.
20242 IMSLS_NSBJF_3                    Bad input from "arma_info".  "q" =
                                       & %(i1).  "q" must be non-negative.
20243 IMSLS_NSBJF_4                    Bad input from "arma_info".  The
                                       & smallest element of "ma_lags" is
                                       & "ma_lags[%(i1)]" = %(i2).  All
                                       & elements of "ma_lags" must be greater
                                       & than zero.
20244 IMSLS_NSBJF_5                    Bad input from "arma_info".  "constant"
                                       & = %(i1).  "constant" must be 0 or 1.
20245 IMSLS_NSBJF_6                    Bad input from "arma_info".
                                       &  "a_variance" = %(r1).  "a_variance"
                                       & must be greater than zero.
20246 IMSLS_NSBJF_7                    Bad input from "arma_info".
                                       &  "confidence" = %(r1).  "confidence"
                                       & must be in the exclusive range 0.0 to
                                       & 100.0.
20247 IMSLS_NSBJF_8                    Bad input from "arma_info".
                                       &  "n_observations" = %(i1).
                                       &  "n_observations" must be 1 or more.
20248 IMSLS_NSBJF_9                    Bad input from "arma_info".
                                       &  "n_observations" = %(i1).
                                       &  "n_observations" must be greater than
                                       & the sum of "constant" + (the maximum
                                       & element of "ar_lags") + (the maximum
                                       & element of "ma_lags") = %(i2).
20250 IMSLS_NSBJF_10                   Bad input from "arma_info".  The minimum
                                       & element of "ar_lags" is
                                       & "ar_lags[%(i1)]" = %(i2).  All
                                       & elements of "ar_lags" must be
                                       & non-negative.
20251 IMSLS_NSBJF_11                   Bad input from "arma_info".  The minimum
                                       & element of "ma_lags" is
                                       & "ma_lags[%(i1)]" = %(i2).  All
                                       & elements of "ma_lags" must be
                                       & non-negative.
20252 IMSLS_NSBJF_12                   "IPOLY" = %(i1).  "IPOLY" must be -1, 0,
                                       & or 1.
20253 IMSLS_NSBJF_13                   "NX" = %(i1) and "NY" = %(i2).  Each of
                                       & them must be greater than or equal to
                                       & 1 when "IPOLY" is zero.
20254 IMSLS_NSBJF_14                   "NX" = %(i1) and "NY" = %(i2).  Each of
                                       & them must be greater than or equal to
                                       & 0 when "IPOLY" is not zero.
20255 IMSLS_NSBJF_15                   "X[%(i1)]" = NaN (\"not a number\").  No
                                       & element of "X" may equal NaN.  There
                                       & may be other elements of "X" that
                                       & equal NaN.
20256 IMSLS_NSBJF_16                   "Y[%(i1)] = NaN (\"not a number\").  No
                                       & element of "Y" may equal NaN.  There
                                       & may be other elements of "Y" that
                                       & equal NaN.
20257 IMSLS_NSBJF_17                   The minimum element of "IXEXP" is
                                       & "IXEXP[%(i1)]" = %(i2).  The degree of
                                       & X, the maximum element of "IXEXP", is
                                       & "IXEXP[%(i3)]" = %(i4).  All elements
                                       & of "IXEXP" must be non-negative and
                                       & the degree of "X" must be greater than
                                       & or equal to zero.
20258 IMSLS_NSBJF_18                   The minimum element of "IYEXP" is
                                       & "IYEXP[%(i1)]" = %(i2).  The degree of
                                       & Y, the maximum element of "IYEXP", is
                                       & "IYEXP[%(i3)] = %(i4).  All elements
                                       & of "IYEXP" must be non-negative and
                                       & the degree of "Y" must be greater than
                                       & or equal to zero.
20259 IMSLS_NSBJF_19                   "IZDEG" = %(i1).  "IZDEG" must be 1 or
                                       & more.
20260 IMSLS_NSBJF_20                   The zero order term for "X" = %(r1) and
                                       & the zero order term for "Y" = %(r2).
                                       &  Both of them must be 1.0.  Check
                                       & "IPOLY" and the "IXEXP" and "IYEXP"
                                       & vectors carefully.
20261 IMSLS_NSBJF_21                   "IXDEG" = %(i1), "IYDEG" = %(i2), and
                                       & "IZDEG" = %(i3).  Each of them must be
                                       & greater than or equal to zero.
20262 IMSLS_NSBJF_22                   "X[0]" = %(r1) and "X[IXDEG]" =
                                       & "X[%(i1)] = %(r2).  "X[0]" must be 1
                                       & and "X[IXDEG]" must be nonzero.
20263 IMSLS_NSBJF_23                   "Y[0]" = %(r1) and "Y[IYDEG] =
                                       & "Y[%(i1)]" = %(r2).  "Y[0]" must be 1
                                       & and Y[IYDEG] must be nonzero.
20264 IMSLS_NSBJF_24                   "X[%(i1)]" = NaN (\"not a number\").  No
                                       & element of "X" may equal NaN.  There
                                       & may be other elements of "X" that
                                       & equal NaN.
20265 IMSLS_NSBJF_25                   "Y[%(i1)]" = NaN (\"not a number\").  No
                                       & element of "Y" may equal NaN.  There
                                       & may be other elements of "Y" that
                                       & equal NaN.
20266 IMSLS_WRONG_BACK_ORIGIN          "backward_origin" = %(i1).
                                       &  "backward_origin" must be greater
                                       & than zero and less than or equal to
                                       & "n_observations" - (the maximum
                                       & element of "arma_info->ar_lags" and
                                       & "arma_info->ma_lags") = %(i2).
20270 IMSLS_OVERFLOW_T_TEST            Overflow occurred during computation of
                                       & t test statistic for %(S1) variances.
20271 IMSLS_NOBS_SATTHERWAITE          There must be more than 1 observation in
                                       & the %(S1) sample for computation of
                                       & the degrees of freedom for
                                       & Sattherwaite's approximation.
20272 IMSLS_OVRFLW_SATTHERWAITE        Overflow occurred during computation of
                                       & degrees of freedom for Sattherwaite's
                                       & approximation.
20273 IMSLS_CHI_SQR_NULL_IS_ZERO       The chi-squared null hypothesis must be
                                       & greater than zero.
20274 IMSLS_OVERFLOW_F_TEST            Overflow occurred during computation of
                                       & the F test statistic.
20276 IMSLS_SET_TO_NAN_1               Since the sample size for "x1" and "x2"
                                       & is one or the samples are constant,
                                       & the confidence limits for the
                                       & difference in the means are set to NaN
                                       & (Not a number).
20277 IMSLS_SET_TO_NAN_2               Since the sample size for "x1" and "x2"
                                       & is one or the samples are constant,
                                       & the confidence limits for the common
                                       & variance are set to NaN (Not a
                                       & number).
20278 IMSLS_SET_TO_NAN_3               Since the sample size for "x1" and "x2"
                                       & is one or at least one of the samples
                                       & is constant, the F value and the
                                       & probability of a larger F are set to
                                       & NaN (Not a number).
20279 IMSLS_SET_TO_NAN_4               Since the sample size for "x1" and "x2"
                                       & is one or the samples are constant,
                                       & the confidence limits for the variance
                                       & ratios are set to NaN (not a number).
20280 IMSLS_SET_TO_NAN_5               The number of valid observations for "x"
                                       & is %(R1).  Since the sample size is
                                       & not greater than one, the variance is
                                       & set to NaN (Not a number).
20281 IMSLS_SET_TO_NAN_6               The number of valid observations for "y"
                                       & is %(R1).  Since the sample size is
                                       & not greater than one, the variance is
                                       & set to NaN (Not a number).
20282 IMSLS_SET_TO_NAN_7               The degrees of freedom for the variance
                                       & assuming equality is %(R1).  The
                                       & pooled variance is set to NaN (Not a
                                       & number).
20283 IMSLS_SET_TO_NAN_8               Since the sample size for "x1" and "x2"
                                       & is one or the samples are constant,
                                       & the t value and the probability of a
                                       & larger t are set to NaN (Not a
                                       & number).
20284 IMSLS_SET_TO_NAN_9               Since the sample size for "x1" and "x2"
                                       & is one or the samples are constant,
                                       & the t value, assuming unequal
                                       & variances, and the probability of a
                                       & larger t are set to NaN (Not a
                                       & number).
20285 IMSLS_SET_TO_NAN_10              Since the sample size for "x1" and "x2"
                                       & is one or the samples are constant,
                                       & the degrees of freedom for
                                       & Sattherwaite's approximation is set to
                                       & NaN (Not a number).
20286 IMSLS_NEED_POSITIVE_XSCALE_ELEM  The values for the scaling matrix,
                                       & "xscale", must be positive while at
                                       & least one entry is less than or equal
                                       & to zero.  The algorithm will use the
                                       & identity scaling matrix for "xscale".
20287 IMSLS_NEED_POSITIVE_MAXFCN       The maximum number of sse function
                                       & evaluations must be positive while
                                       & "maxfcn" = %(I1) is given.  The
                                       & algorithm will use "maxfcn" = 400.
20288 IMSLS_NEED_POSITIVE_GRADTL       The gradient tolerance must be
                                       & nonnegative while "grad_tol" = %(F1)
                                       & is given.  The algorithm will use
                                       & "grad_tol" = %(F2).
20289 IMSLS_NEGATIVE_STEP_TOL          The step tolerance must be nonnegative
                                       & while "step_tol" = %(F1) is given.
                                       &  The algorithm will use "step_tol" =
                                       & %(F2).
20290 IMSLS_NEGATIVE_REL_FCN_TOL       The relative function tolerance must be
                                       & nonnegative while "rfcntol" = %(F1) is
                                       & given.  The algorithm will use
                                       & "rfcntol" = %(F2).
20291 IMSLS_NEGATIVE_ABS_FCN_TOL       The absolute function tolerance must be
                                       & nonnegative while "afcntol" = %(F1) is
                                       & given.  The algorithm will use
                                       & "afcntol" = %(F2).
20292 IMSLS_NEED_NONNEGATIVE_DELTA     The initial trust region radius must be
                                       & positive while "trust_region" = %(F1)
                                       & is given.  The algorithm will use the
                                       & length of the initial scaled Cauchy
                                       & step for "trust_region".
20300 IMSLS_BAD_STRUCTURE_INPUT_1      Bad input from "regression_info".
                                       &  "intercept" = %(i1).
                                       &  "intercept" must be equal to 0 or 1.
20301 IMSLS_BAD_STRUCTURE_INPUT_2      Bad input from "regression_info".
                                       &  "n_parameters" = %(i1).
                                       &  "n_parameters" must be greater than
                                       & or equal to 1.
20302 IMSLS_MODEL_ORDER_ZERO           "model_order" = %(i1).  "model_order"
                                       & cannot be zero.
20400 IMSLS_X_LT_NEG_ONE               The argument "x" = %(r1) must be greater
                                       & than -1.0.
20401 IMSLS_X_HALF_PRECISION           The result is accurate to less than one
                                       & half precision because  "x" = %(r1) is
                                       & too close to -1.0.  "x" must be
                                       & greater than %(r2).
20402 IMSLS_BINOMIAL_OVERFLOW          The result overflows because "n" and/or
                                       & "m" is too large.
20403 IMSLS_C1CIP_CONF_1               "%(l1)" = %(r1).  The confidence
                                       & percentage must be greater than or
                                       & equal to 0.0 and less than 100.0.
20404 IMSLS_C1CIP_CONF_2               "%(l1)" = %(r1).  Confidence percentage
                                       & is less than 50.0.  Commonly used
                                       & confidence percentages are 90.0, 95.0
                                       & or 99.0.
20405 IMSLS_TOLERANCE_2                "tolerance" = %(r1).  "tolerance" must
                                       & be between 0.0 and 1.0, inclusive.
20406 IMSLS_SUBMATRIX                  The leading %(i1) by %(i1) submatrix of
                                       & the input matrix is not nonnegative
                                       & definite within the tolerance defined
                                       & by "tolerance" = %(r1).
20407 IMSLS_E2CSF_1                    The argument "n" = %(i1).  The order of
                                       & the matrix must be at least 1.
20408 IMSLS_E2CSF_2                    The argument "lda" = %(i1).  The leading
                                       & dimension of the matrix must be at
                                       & least equal to the order of the
                                       & matrix, "n" = %(i2).
20409 IMSLS_E2CSF_3                    The argument "ldevec" = %(i1).  The
                                       & leading dimension of the eigenvector
                                       & matrix must be at least the order of
                                       & the matrix, "n" = %(i2).
20410 IMSLS_E4CSF_1                    The iteration for the eigenvalues did
                                       & not converge.
20411 IMSLS_IFRQ_RANGE                 "ifrq" = %(i1) and "x_col_dim" = %(i2).
                                       &  "ifrq" must be nonnegative and no
                                       & greater than "x_col_dim".
20412 IMSLS_INDCL_VALUES               "indcl[%(i1)]" = %(i2) and "x_col_dim" =
                                       & %(i3).  Each element of "indcl" must
                                       & be nonnegative and less than
                                       & "x_col_dim".
20413 IMSLS_MAXTAB_ERROR               The number of cells is at least %(i1),
                                       & which exceeds the value of "maxtab" =
                                       & %(i2).  Reset "maxtab" and the length
                                       & of "table".
20414 IMSLS_MAXCL_ERROR                The number of distinct values of the
                                       & different variables is at least %(i1),
                                       & which exceeds the value of "maxcl" =
                                       & %(i2).  Reset "maxcl" and the length
                                       & of "clval".
20415    IMSLS_ZERO_AT_X               Since "x" = %(r1) is less than or equal
                                       & to zero, the distribution function is
                                       & zero at "x".
20416    IMSLS_ONE_AT_X                Since "x" = %(r1) is greater than or
                                       & equal to one, the distribution
                                       & function is one at "x".
20417    IMSLS_NEG_SCALE               "scale[%(i1)]" = %(r1).  Each element of
                                       & "scale" must be nonnegative.
20418    IMSLS_BAD_SWEPT_VALUE         "swept[%(i1)]" = %(r1).  Each element of
                                       & "swept" must be %(r2) or %(r3).
20422    IMSLS_INDEX_ERROR_4           "permutation[%(i1)]" = %(i3) is not
                                       & allowed.  It must be greater than or
                                       & equal to zero and less than
                                       & "n_elements" = %(i2).
20423    IMSLS_DFE_NEGATIVE            "dfe" = %(r1).  It must be nonnegative.
20424    IMSLS_STDB_NEGATIVE           "stdb[%(i1)]" = %(r1).  It must be
                                       & nonnegative.
20425    IMSLS_IRBEF_INCREASING        "irbef[%(i1)]" = %(i3) and "irbef[%(i2)]
                                       & = %(i4).  Elements of "irbef" must be
                                       & nondecreasing.
20426    IMSLS_N_LT_ONE                The length of vectors "ia", "ib", and
                                       & "iperm" must be greater than or equal
                                       & to one.  On input the length, "n", is
                                       & given as %(i1).
20430    IMSLS_NEGATIVE_EPS            "eps" = %(r1).  A negative convergence
                                       & criterion is not allowed.
20431    IMSLS_INVALID_MODEL           "model" = %(i1).  "model" must be either
                                       & 0, 1, 2, 3, 4, or, 5.
20434    IMSLS_MAXIT_INIT              "max_iterations" = 0.  User must supply
                                       & the initial estimates when
                                       & "max_iterations" = 0.  See the
                                       & documentation for keyword
                                       & IMSLS_INITIAL_EST_INPUT.
20435    IMSLS_NO_LINEAR_RESPONSE      "n_effects" = 0 and IMSLS_NO_INTERCEPT
                                       & is specified.  Estimation is not
                                       & possible when there is no linear
                                       & response.
20436    IMSLS_NEED_ONE_VARIABLE       "n_var_effects[%(i1)]" = %(i2).  An
                                       & effect must have at least one
                                       & variable.
20437    IMSLS_INDEX_3                 "indices_effects[%(i5)]" = %(i3).
                                       &  Variable %(i2) in effect %(i1) is
                                       & given as %(i3).  The index must be
                                       & greater than or equal to 0 and less
                                       & than or equal to "x_col_dim"-1.
20438    IMSLS_INVALID_MAX_CLASS       "max_class" = %(i1).  "max_class" must
                                       & be greater than or equal to 1 when
                                       & "n_class" is greater than zero.
20439    IMSLS_NEGATIVE_FREQUENCY      "x[%(I1)]["ifrq"=%(i2)]" = %(r1).  All
                                       & observation frequencies must be
                                       & nonnegative.
20440    IMSLS_INVALID_CENSORING_CODE  "x[%(I1)]["icen"=%(I2)]" = %(r1).  All
                                       & censoring codes must be equal to 0, 1,
                                       & 2, or 3.
20441    IMSLS_INVALID_LOWER_BOUND     "lower[%(I1)]" = %(r1).  The lower bound
                                       & on the censoring interval must be
                                       & greater than or equal to %(i4) for
                                       & model number %(i3).
20442    IMSLS_INVALID_UPPER_BOUND_1   "upper[%(I1)]" = %(r1) is less than
                                       & "lower[%(I1)]" = %(r2).  The upper
                                       & bound of the censoring interval must
                                       & be greater than or equal to the lower
                                       & bound.
20443    IMSLS_INVALID_UPPER_BOUND_2   "upper[%(I1)]" = %(I2).  The upper bound
                                       & for interval censored data must be
                                       & less than %(i4) for model number
                                       & %(i3).
20444    IMSLS_INVALID_UPPER_BOUND_3   "upper[%(I1)]" = %(r1) =
                                       & "parameter[%(I1)]".  The upper bound
                                       & for interval censored data must be
                                       & less than the number of trials in
                                       & binomial distribution models.
20445    IMSLS_INVALID_DATA_1          "y[%(I1)]" = %(r1).  The %(l1) must be
                                       & greater than %(l2) %(i4) for model
                                       & number %(i3).
20446    IMSLS_INVALID_DATA_2          "x[%(I1)]["iy"=%(I2)]" = %(r1).  The
                                       & observation point must be greater than
                                       & or equal to %(i4) for model number
                                       & %(i3).
20447    IMSLS_INVALID_DATA_3          "x[%(I1)]["ipar"=%(i2)]" = %(r1).  The
                                       & binomial sample size must be greater
                                       & than zero.
20448    IMSLS_INVALID_DATA_4          "x[%(I1)]["irt"=%(i2)]" = %(r1) is
                                       & greater than "x[%(I1)]["ipar"=%(i3)]"
                                       & = %(r2).  For the binomial models, the
                                       & number of successes must be less than
                                       & or equal to the sample size.
20449    IMSLS_INVALID_DATA_5          "x[%(I1)]["ilt"=%(i3)]" = %(r1) is
                                       & greater than "x[%(I1)]["ipar"=%(i2)]"
                                       & = %(r2).  For the binomial models, the
                                       & number of successes must be less than
                                       & or equal to the sample size.
20450    IMSLS_INVALID_DATA_6          "x[%(I1)]["ipar"=%(i2)]" = %(r1).  The
                                       & parameter for the negative binomial
                                       & distribution must be greater than or
                                       & equal to 1.
20451    IMSLS_INVALID_DATA_7          "INDCL[%(i1)]" = %(i2).  Each element of
                                       & "INDCL" must be greater than or equal
                                       & to 0 and less than "n_class" +
                                       & "n_continuous" = %(i3).
20452    IMSLS_MAX_CLASS_TOO_SMALL     The number of distinct values of the
                                       & classification variables exceeds
                                       & "max_class" = %(i1).
20453    IMSLS_INVALID_DATA_8          "n_class_values[%(i1)]" = %(i2).  The
                                       & number of distinct values for each
                                       & classification variable must be
                                       & greater than one.
20456 IMSLS_NMAX_EXCEEDED              The number of observations to be deleted
                                       & has exceeded "lp_max" = %(i1).  Rerun
                                       & with a different model or increase the
                                       & workspace.
20457 IMSLS_RNNOR_NEG_VAR              VAR = %(r1).  The VAR must be greater
                                       & than 0.
20458 IMSLS_NEGATIVE_ORDER             The order of the matrix must be positive
                                       & while N = %(i1) is given.
20459 IMSLS_LDA_LESS_ORDER             The order of the matrix must be less
                                       & than or equal to its leading dimension
                                       & while N = %(i1) and LDA = %(i2) are
                                       & given.
20460 IMSLS_LDAINV_LESS_ORDER          The order of the matrix must be less
                                       & than or equal to its leading dimension
                                       & while N = %(i1) and LDAINV = %(i2) are
                                       & given.
20461 IMSLS_IPATH_RANGE_3              IPATH must be either 1 or 2 while a
                                       & value of %(i1) is given.
20462 IMSLS_SINGULAR_MATRIX            The matrix to be inverted is singular.
                                       & The index of the first zero diagonal
                                       & element of A is %(i1).
20463    IMSLS_BAD_NROW_1              "n_rows" = %(i1).  The number of rows,
                                       & "n_rows", must be greater than or
                                       & equal to 1.
20464    IMSLS_BAD_NROW_2              "n_rows" = %(i1).  The number of rows,
                                       & "n_rows", must be greater than or
                                       & equal to 0 when "ido" is not equal to
                                       & 0.
20465    IMSLS_BAD_X_COL_DIM_1         "x_col_dim" = %(i1).  "ncol" must be
                                       & greater than or equal to 2.
                                       & i.e., there must be at least one
                                       & grouping variable and one
                                       & discriminating variable.
20466    IMSLS_BAD_X_COL_DIM_2         "x_col_dim" = %(i1).  Since frequencies
                                       & and/or weights is specified, "ncol"
                                       & must be greater than or equal to
                                       & 1 + n_variables + m, where m is equal
                                       & to 2 if both wieghts and frequencies
                                       & are specified, or equal to 1
                                       & otherwise.
20467    IMSLS_IFRQ_RANGE_1            "ifrq" = %(i1) and "x_col_dim" = %(i2).
                                       & If frequencies are not specified, then
                                       & "ifrq" must be equal to -1.  Otherwise
                                       & "ifrq" must be in the range 0 to
                                       & "x_col_dim"-1.
20468    IMSLS_IWT_RANGE_1             "iwt" = %(i1) and "x_col_dim" = %(i2).
                                       & If weights are not specified, then
                                       & "iwt" must be equal to -1.  Otherwise
                                       & "iwt" must be in the range 0 to
                                       & "x_col_dim"-1.
20469    IMSLS_BAD_NVAR                "n_variables" = %(i1) and and
                                       & "x_col_dim" = %(i2).  The number of
                                       & variables, "n_variables", must be less
                                       & than "x_col_dim".
20470    IMSLS_METHODS_MIXED           Calls with "method" = 1, 2, 4, or 5 have
                                       & been mixed with calls with "method" =
                                       & 3 or 6.  See the description of
                                       & IMSLS_METHOD.
20471    IMSLS_INDEX_VAR_1             "ind[%(i1)]" = %(i2).  It must be
                                       & greater than or equal to zero, less
                                       & than "x_col_dim" = %(i4), and may not
                                       & equal "igrp" = %(i3).
20478    IMSLS_INDEX_VAR_2             "ind[%(i1)]" = "ind[%(i2)]" = %(i3).
                                       & Each element of "ind" must be unique.
20479    IMSLS_BAD_OBS_1               In call %(i2), row %(i3) of the data
                                       & matrix, "x", has group number =
                                       & %(i1).0.  The group number must be an
                                       & integer between 1.0 and "n_groups" =
                                       & %(i4).0, inclusively.  This
                                       & observation will be ignored.
20480    IMSLS_BAD_WEIGHT_1            In call %(i2), the weight of row %(i1)
                                       & of the data matrix "x" is %(r1).
                                       &  Weights must be nonnegative.
20481    IMSLS_BAD_FREQUENCY_1         In call %(i2), the frequency of row
                                       & %(i1) of the data matrix "x" is %(r1).
                                       &  Frequencies must be nonnegative.
20482    IMSLS_BAD_IDO_1               "ido" = %(i1).  Initial allocations must
                                       & be performed by making a call to
                                       & discriminant_analysis with "ido" = 1.
20483    IMSLS_BAD_IDO_2               "ido" = %(i1).  A new analysis may not
                                       & begin until the previous analysis is
                                       & terminated with "ido" equal to 5 or 6.
20484    IMSLS_BAD_IDO_3               "ido" = %(i1).  Calls with "ido" equal
                                       & to 4 or 5 are not allowed until a call
                                       & with "ido" = 3 is made.
20485    IMSLS_PRIOR_ERROR_1           "input_prior[%(i1)]" = %(r1).  Elements
                                       & of "input_prior" must be non-negative.
20486    IMSLS_PRIOR_ERROR_2           The sum of the elements of "input_prior"
                                       & = %(r1).  This sum must equal 1.0.
20487    IMSLS_EMPTY_GROUP             The number of observations in group
                                       & %(i1) is zero.  No statistics are
                                       & calculated.
20488    IMSLS_PRIOR_TOO_SMALL         "input_prior[%(i1)]" is less than or
                                       & equal to 1.0E-20.
20489    IMSLS_COV_SINGULAR_1          The variance-covariance matrix for
                                       & population number %(i1) is singular.
                                       & The computations cannot continue.
20490    IMSLS_COV_SINGULAR_2          The pooled variance-covariance matrix is
                                       & singular.  The computations cannot
                                       & continue.
20491    IMSLS_COV_SINGULAR_3          The group %(i1) covariance matrix is
                                       & singular.  "stats[1]" cannot be
                                       & computed.  "stats[1]" and "stats[3]"
                                       & are set to the missing value code
                                       & (NaN).
20492    IMSLS_BAD_OBS_3               The leaving out one method is specified
                                       & but this observation does not have a
                                       & valid weight or it does not have a
                                       & valid frequency.  This observation
                                       & (row %(i1)) is ignored.
20493    IMSLS_BAD_OBS_2               The leaving out one method is specified
                                       & but this observation does not have a
                                       & valid group number (Its group number
                                       & is %(i1).).  This observation (row
                                       & %(i2)) is ignored.
20494    IMSLS_SUM_WTS_NEG             The sum of the weights have become
                                       & negative for group %(i1).  Evidently,
                                       & more observations have been deleted
                                       & from this group than were initially
                                       & added to it.
20495    IMSLS_COV_SINGULAR_4          A variance-covariance matrix is
                                       & singular.  The index of the first zero
                                       & element is equal to %(i1).
20496    IMSLS_D5CRM_1                 "n_parameters" = %(i1).  must be greater
                                       & than or equal to 1 and less than or
                                       & equal to "x_col_dim"-1 = %(i2).
20497    IMSLS_D5CRM_2                 LDXMEA = %(i1).  LDXMEA must be greater
                                       & than or equal to NGROUP = %(i2).
20498    IMSLS_D5CRM_3                 LDCOV = %(i1).  LDCOV must be greater
                                       & than or equal to NVAR = %(i2).
20499    IMSLS_D5CRM_4                 "ifrq" = %(i1).  "ifrq" must be greater
                                       & than or equal to 0 and less than
                                       & "x_col_dim" = %(i2).
20500    IMSLS_D5CRM_5                 "iwt" = %(i1).  "iwt" must be greater
                                       & than or equal to 0 and less than
                                       & "x_col_dim" = %(i2).
20501    IMSLS_D5CRM_6                 The sum of "n_parameters" + 1 (for the
                                       &  groups variable) + 1 (if "ifrq" is
                                       & greater than zero) + 1 (if "ifrq" is
                                       & greater than zero) = %(i1).  This sum
                                       & must be greater than or equal to 2 and
                                       & less than "x_col_dim" = %(i2).
20502    IMSLS_D5CRM_7                 "igrp" = %(i1).  "igrp" must be greater
                                       & than or equal to 1 and less than
                                       & "x_col_dim" = %(i2).
20503    IMSLS_RANK_DEFICIENT_WARN     The model is rank deficient (rank =
                                       & %(i1)).  Computations will proceed per
                                       & setting of IMSLS_TOLERANCE.  Check
                                       & accuracy of results.
20504    IMSLS_RANK_DEFICIENT_TERM     The model is rank deficient (rank =
                                       & %(i1)).  No solution will be computed.
                                       &  Refer to documentation of optional
                                       & argument IMSLS_TOLERANCE for other
                                       & options.
20510    IMSLS_N_EQUALITY_TOO_LARGE    The number of linear equality 
                                       & constraints "n_equality" = %(i1) is
                                       & greater than the number of linear
                                       & constraints "n_constraints" = %(i2).
                                       & "n_equality" must be less than or
                                       & equal to "n_constraints".
20511    IMSLS_BAD_N_CONSTRAINTS       "The number of linear constraints must
                                       & not exceed the leading dimension of
                                       & "a", yet "n_constraints" = %(i1) and
                                       & "LDA" = %(i2) are given.
20512    IMSLS_NEGATIVE_TOLERANCE_1    The first order tolerance "acc" = %(r1).
                                       &  It must be greater than or equal to
                                       & zero.
20513    IMSLS_BAD_BOUNDS_1            The bounds given for "theta[%(i1)]" are
                                       & inconsistent:  "xlb[%(i1)]" = %(r2)
                                       & must not exceed "xub[%(i1)] = %(r3).
20514    IMSLS_NOTE_1                  "theta" is feasible and the condition
                                       & that depends on acc is satisfied.
20515    IMSLS_NOTE_2                  "theta" is feasible but rounding errors
                                       & are preventing further progress.
20516    IMSLS_NOTE_3                  "theta" is feasible but the objective
                                       & function fails to decrease.  Using
                                       & double precision may help.
20517    IMSLS_BAD_CONSTRAINTS_1       The equality constraints are
                                       & inconsistent.
20518    IMSLS_BAD_CONSTRAINTS_2       The equality constraints and the bounds
                                       & on the variables are found to be
                                       & inconsistent.
20519    IMSLS_BAD_CONSTRAINTS_3       No vector "theta" satisfies all of the
                                       & constraints.  Specifically, the
                                       & current active constraints prevent any
                                       & change in "theta" that reduces the sum
                                       & of constraint violations.
20520    IMSLS_TOO_MANY_ITERATIONS_1   Number of function evaluations exceeded
                                       & "maxfcn" = %(i1).
20521    IMSLS_BAD_CONSTRAINTS_4       The variables are determined by the
                                       & equality constraints.
20522    IMSLS_CONDITION_VIOLATION     A condition on "n_parameters" = %(i3),
                                       & "n_constraints" = %(i1), or
                                       & "n_equality" = %(i2) is violated.
20523    IMSLS_BAD_N_PARAMETERS        The number of parameters must be
                                       & positive while "n_parameters" = %(i1)
                                       & is given.
20524    IMSLS_BAD_N_INDEX             "n_index" = %(i1) and "n_columns" =
                                       & %(i2).  The number of columns to be
                                       & sorted, "n_index", must be less than
                                       & or equal to "n_columns".
20525    IMSLS_BAD_COLUMN_INDEX        "index_columns[%(i1)]" = %(i2) and
                                       & "n_columns" = %(i3).  The elements
                                       & of "index_columns" must be greater
                                       & than or equal to 0 and less than
                                       & "n_columns".
20530    IMSLS_ALL_0_OR_1              "x" consists of either all ones or all
                                       & zeros.  "q" is set to NaN (not a
                                       & number).  "pq" is set to 1.0.
20531    IMSLS_INVALID_X_VALUES        "x[%(i1),%(i2)]" = %(r1).  "x" must
                                       & consist of zeros and ones only.
20540    IMSLS_NO_COUNTS_IN_TABLE      There are no observed counts in "table".
                                       &  The output variables "prt",
                                       & "p_value", and "numerical_error_check"
                                       & are set to NaN (not a number).
20541    IMSLS_MAX_ATTEMPTS_EXCEEDED   "n_attempts" = %(i1) and "max_attempts"
                                       & = %(i2).  The algorithm has failed to
                                       & allocate sufficient memory in %(i2)
                                       & attempts.  Try setting larger values
                                       & for "factor1", "factor2", and/or
                                       & "max_attempts".
20542    IMSLS_NO_COUNTS_IN_TABLE_2    There are no observed counts in "table".
                                       &  The output variables "prt", and
                                       & "p_value" are set to NaN (not a
                                       & number).
20543    IMSLS_HASH_TABLE_ERROR_1      The hash table key cannot be computed
                                       & because the largest key is larger than
                                       & the largest representable integer.
                                       &  The algorithm cannot proceed.
20544    IMSLS_HASH_TABLE_ERROR_2      The value "ldkey" = %(i1) is too small.
                                       &  "ldkey" is calculated as "factor1" *
                                       & pow(10,"n_attempt"-1).  Ending this
                                       & execution attempt.
20545    IMSLS_HASH_TABLE_ERROR_3      The value "ldstp" = %(i1) is too small.
                                       &  "ldstp" is calculated as "factor2" *
                                       & pow(10,"n_attempt"-1).  Ending this
                                       & execution attempt.
20546    IMSLS_STACK_ERROR             Stack length exceeded in C3EPR.  This
                                       & problem should not occur.  Please
                                       & contact your product support
                                       & personnel.
20547    IMSLS_WRONG_COLUMN_1          "%(l1)" = %(i1), but "n_class" +
                                       & "n_continuous" = %(i2).  Unless
                                       & IMSLS_X_COL_VARIABLES is specified,
                                       & "%(l1)" must be greater than "n_class"
                                       & + "n_continuous".
20548    IMSLS_WRONG_COLUMN_2          "%(l1)" = %(i1).  "%(l1)" must be less
                                       & than "x_col_dim" = %(i2).
20549    IMSLS_WRONG_COLUMN_3          "%(l1)" = %(i1).  "%(l1)" must be
                                       & greater than or equal to zero and less
                                       & than "x_col_dim" = %(i2).
20551    IMSLS_INVALID_DATA_9          "iclass[%(I1)]" = %(i2).  The column
                                       & numbers must greater than or equal
                                       & to zero and less than "x_col_dim".
20552    IMSLS_INVALID_DATA_10         "icontinuous[%(I1)]" = %(i2).  The
                                       & column numbers must greater than or
                                       & equal to zero and less than
                                       & "x_col_dim".
20560    IMSLS_DF_LE_0                 "df" = %(r1).  "df" must be greater than
                                       & 0.0.
20561    IMSLS_POCH_1                  If A+X (=%(r1)) is a nonpositive
                                       & integer, then A = %(r2) must also be a
                                       & nonpositive integer.
20562    IMSLS_POCH_2                  The result is accurate to less than one
                                       & half precision because ABS(%(r1)) is
                                       & larger than %(r2) which prevents A+X
                                       & from being computed accurately.
20563    IMSLS_POCH_3                  All precision is lost.  A = %(r1) or A+X
                                       & (=%(r2)) is too close to a negative
                                       & integer.
20564    IMSLS_POCH_4                  The result is accurate to less than one
                                       & half precision because A = %(r1) or
                                       & A+X (=%(r2)) is too close to a
                                       & negative integer.
20565    IMSLS_A1COS_1                 The result is accurate to less than one
                                       & half precision because ABS(%(r1)) +
                                       & PI/2(=%(r3)) is greater than %(r2).
20566    IMSLS_A1COS_2                 All precision is lost.  ABS(%(r1)) +
                                       & PI/2(= %(r3)) must be less than %(r2).
20567    IMSLS_A1SIN_1                 The result is accurate to less than one
                                       & half precision because ABS(%(r1)) is
                                       & greater than %(r2).
20568    IMSLS_A1SIN_2                 All precision is lost.  ABS(%(r1)) must
                                       & be less than %(r2).
20569    IMSLS_NEGATIVE_VARIANCE_2     "variance" = %(r1).  The variance must
                                       & be greater than zero.
20570    IMSLS_BAD_PARAMETER_A         "a" = %(r1).  The shape parameter, "a",
                                       & must be positive.
20571    IMSLS_SMALL_A                 "a" = %(r1).  The shape parameter is so
                                       & small that a relatively large
                                       & proportion of the values of deviates
                                       & from the Weibull cannot be
                                       & represented.  The proportion of the
                                       & distribution truncated is %(r2).
20572   IMSLS_BAD_PARAMETER_C          "c" = %(r1).  Parameter "c" must be
                                       & greater than one half of the square
                                       & root of the machine epsilon.
20573   IMSLS_P_LT_0                   "p" = %(r1).  The mixing parameter must
                                       & be nonnegative.
20574   IMSLS_THETA1_LE_0              "theta1" = %(r1).  "theta1" must be
                                       & positive.
20575   IMSLS_THETA2_GT_THETA1         "theta1" = %(r1) and "theta2" = %(r2).
                                       &  "theta2" must be positive and less
                                       & than or equal to "theta1".
20576   IMSLS_P_TOO_BIG                "p" = %(r1), "theta1" = %(r2) and
                                       & "theta2" = %(r3).  "p" must be less
                                       & than or equal to theta1/(theta1 -
                                       & theta2).
20580   IMSLS_INVALID_FAILURE_TIME_1   "x[%(i1)]["irt"=%(i2)]" = %(r1).  All
                                       & failure times must be greater than
                                       & zero when using model "model" = %(i3).
20581   IMSLS_INVALID_FAILURE_TIME_2   "x[%(i1)]["ilt"=%(i2)]" = %(r1).  All
                                       & failure times must be greater than
                                       & zero when using model "model" = %(i3).
20582   IMSLS_INVALID_FAILURE_TIME_3   "x[%(i1)]["irt"=%(i3)]" = %(r2) and
                                       & "x[%(i1)]["ilt"=%(i2)]" = %(r1).  The
                                       & upper endpoint of the censoring
                                       & interval, "x[(%(i1)]["ilt"]", must be
                                       & greater than the lower endpoint,
                                       & "x[%(i1)]["irt"]".
20583   IMSLS_INVALID_FAILURE_TIME_4   "x[%(i1)]["ilt"=%(i2)]" = %(r1) and
                                       & "x[%(i1)]["irt"=%(i3)]" = %(r2).  The
                                       & censoring interval has length 0.0.
                                       &  The censoring code for this
                                       & observation is being set to 0.0.
20584   IMSLS_TOO_FEW_COEF             IMSLS_INITIAL_EST_INPUT is specified,
                                       & and "n_coef_input" = %(i1).  The model
                                       & specified requires %(i2) coefficients.
20585   IMSLS_SVGLM_1                  For the exponential model ("model" = 0)
                                       & with "n_effects" = %(i1) and 
                                       & no intercept, "n_coef" has been
                                       & determined to equal 0.  With no
                                       & coefficients in the model, processing
                                       & cannot continue.
20586   IMSLS_SVGLM_2                  LDCOEF = %(i1).  LDCOEF must be greater
                                       & than or equal to "n_coef" = %(i2).
20588   IMSLS_BAD_INITIAL_EST_1        "estimates[0]" = %(r1).  The initial
                                       & estimate for the coefficient for the
                                       & quadradic term in time must be greater
                                       & than or equal to zero for the linear
                                       & hazard model.
20589   IMSLS_BAD_INITIAL_EST_2        "estimates[0]" = %(r1).  The initial
                                       & estimate for the scale parameter for
                                       & the Weibull distribution must be
                                       & greater than zero.
20590   IMSLS_TOO_FEW_VALID_OBS        "n_observations" = %(i1) and
                                       & "n_rows_missing" = %(i2).
                                       &  "n_observations"-"n_rows_missing"
                                       & must be greater than or equal to 2 in
                                       & order to estimate the coefficients.
20591   IMSLS_CONVERGENCE_ASSUMED_1    Too many step halvings.  Convergence
                                       & assumed.
20592   IMSLS_NO_PREDICTED_1           "estimates[0]" > 1.0.  The expected
                                       & value for the log logistic
                                       & distribution ("model" = 4) does not
                                       & exist.  Predicted values will not be
                                       & calculated.
20593   IMSLS_NO_PREDICTED_2           "estimates[0]" > 1.0.  The expected
                                       & value for the log extreme value
                                       & distribution ("model" = 8) does not
                                       & exist.  Predicted values will not be
                                       & calculated.
20594   IMSLS_INCREASE_LP_MAX          Too many observations are to be deleted
                                       & from the model.  Either use a
                                       & different model or increase the
                                       & workspace.
20595   IMSLS_NEG_EIGENVALUE           The hessian has at least one negative
                                       & eigenvalue.  An upper bound on the
                                       & absolute value of the minimum
                                       & eigenvalue is %(r1) corresponding to
                                       & variable index %(i1).
20596   IMSLS_PSI_1                    Error while calculatng the logarithmic
                                       & derivative of the gamma function.  The
                                       & argument for function l_psi can not be
                                       & zero.
20597   IMSLS_PSI_2                    Error while calculatng the logarithmic
                                       & derivative of the gamma function.
                                       & The argument for the function can not
                                       & be a negative integer.  Argument "x" =
                                       & %(r1).
20598   IMSLS_PSI_3                    Error while calculatng the logarithmic
                                       & derivative of the gamma function.  The
                                       & result is accurate to less than one
                                       & half precision because "x" = %(r1) is
                                       & too close to a negative integer.
20599   IMSLS_COT_1                    Error while calculating the cotangent.
                                       &  All precision is lost.  fabs(%(r1))
                                       & must be less than %(r2).
20600   IMSLS_COT_2                    Error while calculating the cotangent.
                                       & The function overflows because
                                       & fabs(%(r1)) is less than %(r2).
20601   IMSLS_COT_3                    Error while calculating the cotangent.
                                       & The result is accurate to less than
                                       & one half precision because
                                       & fabs(%(r1)) is too large or because
                                       & "x" is nearly a multiple of pi.
20602   IMSLS_COT_4                    Error while calculating the cotangent.
                                       &"x" = %(r1) can not be a multiple of pi.
20603   IMSLS_MCHOL_1                  Error while calculating Cholesky
                                       & factorization. "tol" = %(r1).  "tol"
                                       & must be between 0.0 and 1.0,
                                       & inclusive.
20604   IMSLS_0_OR_1_ONLY              "%(S1)" = %(i1).  "%(S1)" must be equal
                                       & to 0 or 1.
20605   IMSLS_SMKEY_2                  "ldx" = %(i2) and "nrx" = %(i1).  The
                                       & leading dimension of "x", "ldx", must
                                       & be greater than or equal to the number
                                       & of rows  of "x", "nrx".
20609   IMSLS_SMKEY_6                  The number of keys, "nkey", must not be
                                       & equal to 0.
20610   IMSLS_SMKEY_7                  "nkey" is wrong!
20611   IMSLS_KM_NOBS_GT_ONE           Error while calculating K-M estimates.
                                       & "n_observations" = %(I1).
                                       &   "n_observations" must be greater
                                       & than or equal to 2.
20612   IMSLS_KM_LDX_GE_NOBS           Error while calculating K-M estimates.
                                       &  "n_observations" = %(I1) and "ldx" =
                                       & %(I2).  The leading dimension of "x",
                                       & "ldx", must be greater than or equal
                                       & to the number of observations,
                                       & "n_observations".
20613   IMSLS_KM_LDSPRO_GE_NOBS        Error while calculating K-M estimates.
                                       & The leading dimension of "sprob",
                                       & "ldspro", must be greater than or
                                       & equal to the number of observations,
                                       & "n_observations".
20614   IMSLS_KM_X_NCOL_GE_ONE         Error while calculating K-M estimates.
                                       & "ncol" = %(I1).  The number of columns
                                       & in "x", "ncol", must be greater than
                                       & or equal to 1.
20615   IMSLS_KM_IRT_LT_NCOL           Error while calculating K-M estimates.
                                       &  "ncol" = %(I1) and "irt" = %(I2).
                                       &  The column number in "x" containing
                                       & the response variable, "irt", must
                                       & be greater than or equal to 0 and less
                                       & than the number of columns in X,
                                       & "ncol".
20616   IMSLS_KM_IFRQ_LT_NCOL          Error while calculating K-M estimates.
                                       &  "ncol" = %(I1) and "ifrq" = %(I2).
                                       &  The column number in "x" containing
                                       & the frequency of each response,
                                       & "ifrq", must be greater than or equal
                                       & to 0 and less than the number of
                                       & columns in "x", "ncol".
20617   IMSLS_KM_ICEN_LT_NCOL          Error while calculating K-M estimates.
                                       &  "ncol" = %(I1) and "icen" = %(I2).
                                       &  The column number in "x" containing
                                       & the censoring codes, "icen", must be
                                       & greater than or equal to 0 and less
                                       & than the number of columns in "x",
                                       & "ncol"
20618   IMSLS_KM_IGRP_LT_NCOL          Error while calculating K-M estimates.
                                       &  "ncol" = %(i1) and "igrp" = %(i2).
                                       &  The column number in "x" containing
                                       & the stratum numbers, "igrp", must be
                                       & greater than or equal to 0 and less
                                       & than the number of columns in "x",
                                       & "ncol".
20619   IMSLS_KM_FREQ_INVALID          Error while calculating K-M estimates.
                                       &  Observation %(i1) has an invalid
                                       & frequency.
20620   IMSLS_KM_EVENT_INVALID         Error while calculating K-M estimates.
                                       &  Observation %(i1) has an invalid
                                       & event time.
20621   IMSLS_KM_FATAL_ERRORS          Error while calculating K-M estimates.
                                       &  Over 10 fatal errors of code 9 and/or
                                       & 10 have occured.  Execution
                                       & terminated.
20622   IMSLS_KM_NOT_SORTED            Error while calculating K-M estimates.
                                       &  The data should be sorted on column
                                       & "irt" because "isrt"=1, but it is not
                                       & sorted.
20623   IMSLS_M_GT_K                   "m" = %(i1).  The number of
                                       & classification variables, "m", must be
                                       & greater than 0.
20624   IMSLS_K_GT_ZERO                "k" = %(i1).  The number of cells, "k",
                                       & must be greater than 0.
20625   IMSLS_LDCELI_GT_ZERO           "ldceli" = %(i1).  The leading dimension
                                       & of the matrix "celif", "ldceli", must
                                       & be greater than 0.
20626   IMSLS_LDCELI_GE_M              "ldceli" = %(i1) and "m" = %(i2).  The
                                       & leading dimension of the matrix
                                       & "celif", "ldceli", must be greater
                                       & than or equal to the number of
                                       & classification variables, "m".
20628   IMSLS_CONVERGENCE_ASSUMED_2    Too many step iterations.  Convergence
                                       & is assumed.
20630   IMSLS_STBLE_1                  "survival_info->coef[0]" = %(r1) and
                                       & "model" = 1.  The nuisance parameter
                                       & must be greater than or equal to zero.
20631   IMSLS_STBLE_2                  "survival_info->coef[0] = %(r1) and
                                       & "model" = %(i2).  The nuisance
                                       & parameter must be greater than zero.
20632   IMSLS_STBLE_3                  A value of the input array
                                       & "survival_info->indcl" is equal to
                                       & %(i1).  All elements must be less than
                                       & the number of columns, NCOL = %(i2).
20633   IMSLS_STBLE_4                  "model" = %(i1).  The model specified is
                                       & not defined for negative time.
20634   IMSLS_STBLE_5                  & "nrmiss" = %(i1).  Row %(i2) of "xpt"
                                       & contains a missing value or a value of
                                       & one of the classification variables in
                                       & the model is not given by
                                       & "survival_info->clval".
20635   IMSLS_STBLE_6                  "survival_info->ncoef" = %(i1).  The
                                       & model specified requires %(i2)
                                       & coefficients.
20636   IMSLS_ZERO_PROB                Some survival probabilities are computed
                                       & to be equal to zero.  The
                                       & corresponding hazard values cannot be
                                       & computed.
20640   IMSLS_BAD_INDICES_1            "n_dependent" = %(i1), but there are
                                       & %(i2) dependent variables specified in
                                       & array "indices".
20641   IMSLS_INVALID_MATRIX_1         The input matrix "x" is incorrectly
                                       & specified.  A computed correlation is
                                       & greater than 1 for variables %(i1) and
                                       & %(i2).
20642   IMSLS_NO_HYP_TESTS             The input matrix "x" has %(i1) degrees
                                       & of freedom, and the rank of the
                                       & dependent variables is %(i2).  There
                                       & are not enough degrees of freedom for
                                       & hypothesis testing.  The elements of
                                       & "p_values" are set to NaN (not a
                                       & number).
20643   IMSLS_INVALID_PARTIAL          A computed partial correlation for
                                       & variables %(i1) and %(i2) is greater
                                       & than 1.  The input matrix "x" is not
                                       & positive semi-definite.
20644   IMSLS_BAD_X_COL_DIM_3          "x_col_dim" = %(I1).  The column
                                       & dimension of "x" must greater than or
                                       & equal to the sum of "n_independent"
                                       & and "n_dependent".
20645    IMSLS_IGRP_RANGE_1            "igrp" = %(i1) and "x_col_dim" = %(i2).
                                       &  "igrp" must be in the range 0 to
                                       & "x_col_dim"-1.
20646    IMSLS_BAD_IDO_4               "ido" = %(i1).  Initial allocations must
                                       & be performed by making a call to
                                       & pooled_covariances with "ido" = 1.
20647    IMSLS_BAD_IDO_5               "ido" = %(i1).  A new analysis may not
                                       & begin until the previous analysis is
                                       & terminated by a call to
                                       & pooled_covariances with "ido" equal
                                       & to 3.
20649    IMSLS_BAD_IND_VALUE_1         "ind[%(i1)]" = %(i2) and "x_col_dim" =
                                       & %(i3).  Elements of "ind" must be
                                       & non-negative and less than
                                       & "x_col_dim".
20650    IMSLS_BAD_IND_VALUE_2         "ind[%(i1)]" = %(i2) and "igrp" = %(i3).
                                       &  Elements of "ind" cannot be equal to
                                       & "igrp".
20651    IMSLS_BAD_IND_VALUE_3         "ind[%(i1)]" = "ind[%(i2)]" = %(i3).
                                       &  Each element of "ind" must be unique.
20652    IMSLS_OBSERVATION_IGNORED     In call %(i2), row %(i3) of the matrix
                                       & "x" has group number = %(i1).  The
                                       & group number must be between 1 and
                                       & %(i4), the number of groups.  This
                                       & observation will be ignored.
20660    IMSLS_BAD_P                   The probability "p" = %(r1), but "p"
                                       & must be greater than %(r2),
                                       & imsls_f_machine(4), and less than 1.0.
20661    IMSLS_BAD_RK                  The parameter "rk" = %(r1), but "rk"
                                       & must be positive.
20662    IMSLS_BAD_PROBABILITY         The probability "p" = %(r1), but "p"
                                       & must be greater than 0.0 and less than
                                       & 1.0.
20664    IMSLS_BAD_PARAMETER_2         The scale parameter "s" = %(r1), but "s"
                                       & must be positive.
20670    IMSLS_NEED_AT_LEAST_2_PTS     The number of data points must be 2 or
                                       & more while the number of data points
                                       & specified is %(I1).
20671    IMSLS_WRONG_ILEFT_VALUE       The argument "ileft" = %(I1).  It must
                                       & be 0, 1 or 2.
20672    IMSLS_WRONG_IRIGHT_VALUE      The argument "iright" = %(I1).  It must
                                       & be 0, 1 or 2.
20673    IMSLS_NINTV_NOT_POSITIVE      The number of intervals must be at least
                                       & one while "nintv" = %(I1) is given.
20674    IMSLS_KORDER_NOT_POSITIVE     The order of the interpolating
                                       & polynomial must be positive while
                                       & "korder" = %(I1) is given.
20675    IMSLS_DUPLICATE_XDATA_VALUES  Points in the data point abscissas array
                                       & must be distinct, but "xdata[%(I1)]" =
                                       & "xdata[%(I2)]" = %(F1).
20676    IMSLS_IDERIV_NOT_POSITIVE     The order of the derivative must be
                                       & positive while "ideriv" = %(I1) is
                                       & given.
20677    IMSLS_NO_CONVERGE_MAX_ITER    Failure to converge within "maxit" =
                                       & %(I1) iterations for at least one of
                                       & the "nroot" = %(I2) roots.
20680    IMSLS_ZERO_VARIANCE_1         The variance of the variable in column
                                       & %(i1) is very close to zero when
                                       & compared to the maximum variance.
                                       & Either re-scale the input data, or
                                       & eliminate variable %(i1) from the
                                       & analysis.
20681    IMSLS_NO_VALID_OBS_1          The number of valid observations for
                                       & group %(i1) is zero.  The mean for
                                       & this group is set to NaN (not a
                                       & number).
20682    IMSLS_MAXIT_EXCEEDED          Maximum number of iterations has been
                                       & reached for "maxit" = %(i1).
                                       &  Convergence is assumed.
20690    IMSLS_ILLEGAL_KEYWORD_1       Optional Keywords IMSLS_ANOVA_TABLE and
                                       & IMSLS_RESIDUAL may not be specified
                                       & when "ido" is greater than zero.
20691    IMSLS_BAD_IDO_6               "ido" = %(i1).  Initial allocations must
                                       & be performed by invoking the function
                                       & with "ido" = 1.
20692    IMSLS_BAD_IDO_7               "ido" = %(i1).  A new analysis may not
                                       & begin until the previous analysis is
                                       & terminated by invoking the function
                                       & with "ido" equal to 3.
20693    IMSLS_INVALID_INDEX           "idep" = %(i1).  "idep", the index of
                                       & the regression for which summary
                                       & statistics are to be computed, must be
                                       & greater than or equal to zero and less
                                       & than "n_dependent".
20694    IMSLS_INVALID_INDEX_1         "idep" = %(i1).  "idep", the index of
                                       & the regression for which summary
                                       & statistics are to be computed, must be
                                       & greater than or equal to zero and less
                                       & than "y_col_dim".
20695    IMSLS_INVALID_INDEX_2         "idep" = %(i1).  "idep", the index of
                                       & the regression for which summary
                                       & statistics are to be computed, must be
                                       & greater than or equal to zero and less
                                       & than "x_col_dim".
20696    IMSLS_SPECIFY_OBSERVED        The observed values are required when
                                       & optional argument %(S1) is specified.
                                       &  Specify the column of "x" containing
                                       & the observed values using vector
                                       & "inddep" and (optionally) keyword
                                       & IMSLS_INDEX_REGRESSION.
20697    IMSLS_MUTUALLY_EXCLUSIVE_1    Keywords IMSLS_Y and IMSLS_X_INDICES
                                       & are mutually exclusive.
20700  IMSLS_NRA_EXCEEDS_LDA_VALUE     The number of rows of the matrix must
                                       & be less than or equal to its leading
                                       & dimension while "nra" = %(I1) and
                                       & "lda" = %(I2) are given.
20701  IMSLS_POSITIVE_NRB_NCB_VALUES   Both the number of rows and the number
                                       & of columns of a matrix have to be
                                       & positive while "nrb" = %(I1) and
                                       & "ncb" = %(I2) are given.
20702  IMSLS_NRB_EXCEEDS_LDB_VALUE     The number of rows of the matrix must
                                       & be less than or equal to its leading
                                       & dimension while "nrb" = %(I1) and
                                       & "ldb" = %(I2) are given.
20703  IMSLS_BAD_DIMENSIONS_FOR_TRANS  The following must hold "nrb" = "nca"
                                       & and "ncb" = "nra" while "nrb" = %(I3),
                                       & "nca" = %(I2), "ncb" = %(I4) and "nra"
                                       & = %(I1).
20704  IMSLS_NUM_OF_EQUATIONS          The number of equations must be positive
                                       & while "n" = %(I1) is given.
20705  IMSLS_SINGULAR_TRI_MATRIX       The input triangular matrix is singular.
                                       &  The index of the first zero diagonal
                                       & element is equal to %(I1).
20706  IMSLS_IPATH_RANGE_4             "ipath" must be either 1, 2, 3 or 4
                                       & while a value of %(I1) is given.
20707  IMSLS_HYP_NOT_TESTABLE          The hypothesis is not completely
                                       & testable within the computed
                                       & tolerance.  Each row of "h" must be a
                                       & linear combination of the rows of "r".
20708  IMSLS_HYP_NOT_CONSISTENT        The hypothesis is inconsistent within
                                       & the computed tolerance.
20710  IMSLS_INVALID_NU                "nu" = %(i1) and "n_dependent" = %(i2).
                                       &  "nu" must be greater than or equal to
                                       & 0 and less than "n_dependent".
20711  IMSLS_L3VRR_1                   Convergence can only be obtained for the
                                       & %(i1), ..., %(i2) singular values and
                                       & their corresponding singular vectors.
20715  IMSLS_DFH_LT_0                  "dfh" = %(r1).  The degrees of freedom
                                       & for hypothesis, "dfh", must be greater
                                       & than 0.
20716  IMSLS_DFE_LT_0                  "dfe" = %(r1).  The degrees of freedom
                                       & for error, "dfe", must be greater than
                                       & 0.
20717  IMSLS_DFE_DFH_TOO_SMALL_1       "dfe" = %(r1), "dfh" = %(r2), and
                                       & "n_dependent" = %(i1).  For the case
                                       & "nu" = 0, "dfe"+"dfh" must be greater
                                       & than or equal to "n_dependent".
20718  IMSLS_DFE_DFH_TOO_SMALL_2       "dfe" = %(r1), "dfh" = %(r2), and "nu" =
                                       & %(i1).  "dfe"+"dfh" must be greater
                                       & than or equal to "nu".
20719  IMSLS_NO_STAT_1                 "scpe" + "scph" is singular.  No tests
                                       & can be computed."
20720  IMSLS_NO_STAT_2                 No statistics can be computed.
                                       &  Iterations for eigenvalues for the
                                       & generalized eigenvalue problem
                                       & "scph"*x = (lambda)*("scph"+"scpe")*x
                                       & failed to converge.
20721  IMSLS_SINGULAR_1                "u"*"scpe"*"u" is singular.  Only
                                       & Pillais trace can be computed.  Other
                                       & statistics are set to NaN.
20722  IMSLS_SINGULAR_2                "u"*"scpe"*"u" + "scph" is singular.  No
                                       & tests can be computed.
20723  IMSLS_NO_STAT_3                 No statistics can be computed.
                                       &  Iterations for eigenvalues for the
                                       & generalized eigenvalue problem
                                       & "scph"*x = (lambda)*("scph" + "u" *
                                       & "scpe" * "u") * x failed to converge.
20724  IMSLS_HOTELLING_P_VALUE         The p-value for Hotellings trace cannot
                                       & be computed.  The p-value is set to
                                       & NaN (not a number).
20725  IMSLS_G2LSP_1                   The argument "n" = %(i1).  The order of
                                       & the matrix must be at least 1.
20726  IMSLS_G2LSP_2                   The argument "lda" = %(i1).  The leading
                                       & dimension of the matrix "a" must be at
                                       & least equal to the order of the
                                       & matrix, "n" = %(i2).
20727  IMSLS_G2LSP_3                   The argument "ldb" = %(i1).  The leading
                                       & dimension of the matrix "b" must be at
                                       & least equal to the order of the
                                       & matrix, "n" = %(i2).
20728  IMSLS_G2LSP_4                   Matrix "b" is not positive definite.
20729  IMSLS_E2LSF_1                   The argument "n" = %(i1).  The order of
                                       & the matrix must be at least 1.
20730  IMSLS_E2LSF_2                   The argument "lda" = %(i1).  The leading
                                       & dimension of the matrix must be at
                                       & least equal to the order of the
                                       & matrix, "n" = %(i2).
20731  IMSLS_IOPT_NEED_2_INTERVALS_2   "nx" = %(i1) and "ny" = %(i2).  Since
                                       & %(s1) is specified, there must be at
                                       & least two intervals for both the "x"
                                       & and "y" variables.
20732 IMSLS_NAN_NOT_ALLOWED_X          "x" contains missing values.  Missing
                                       & values are not allowed.
20733 IMSLS_NAN_NOT_ALLOWED_Y          "y" contains missing values.  Missing
                                       & values are not allowed.
20734  IMSLS_IOPT_NEED_3_INTERVALS_2   "nx" = %(i1) and "ny" = %(i2).  Since
                                       & IMSLS_KNOWN_BOUNDS is specified, there
                                       & must be at least three intervals for
                                       & both the "x" and "y" variables.
20735 IMSLS_XHI_LT_XLO_X               "xlo" = %(r1) and "xhi" = %(r2).  The
                                       & lower bound must be less than the
                                       & upper bound.
20736 IMSLS_XHI_LT_XLO_Y               "ylo" = %(r1) and "yhi" = %(r2).  The
                                       & lower bound must be less than the
                                       & upper bound.
20737 IMSLS_NOT_MONOTONIC_X            "cx[%(i1)]" = %(r1) and "cx[%(i2)]" =
                                       & %(r2).  The elements of "cx" must be
                                       & monotonically increasing.
20738 IMSLS_NOT_MONOTONIC_Y            "cy[%(i1)]" = %(r1) and "cy[%(i2)]" =
                                       & %(r2).
                                       & The elements of "cy" must be
                                       & monotonically increasing.
20739 IMSLS_CANNOT_COMPUTE_COV         No groups have two or more observations.
                                       &  The matrix "cov" cannot be computed.
20741 IMSLS_BAD_GROUP_2                The group number for observation %(i3)
                                       & is equal to %(i1).  It must be greater
                                       & than or equal to one and less than or
                                       & or equal to %(i2), the number of
                                       & groups.
20742 IMSLS_RESCALE                    The variance of the variable in column
                                       & %(i1) is very close to zero when
                                       & compared to the maximum variance.
                                       &  Either rescale the input data, or
                                       & eliminate variable %(i1) from the
                                       & analysis.
20743 IMSLS_RBCOV_1                    UU = %(r1).  Negative values of the
                                       & covariance matrix weighting function
                                       & are allowed in robust_covariances, but
                                       & they are not recommended.
20744 IMSLS_RBCOV_2                    WW = %(r1).  Negative values of the mean
                                       & vector weighting function are allowed,
                                       & but they are not recommended.
20745 IMSLS_RBCOV_3                    "The derivative of UU with respect to
                                       & "r" is not correctly specified.
                                       &  Rewrite function "wghts".
20746 IMSLS_RBCOV_4                    The derivative disagrees with the
                                       & numerical derivative, but the ratio of
                                       & the curvature to the slope is large.
                                       &  Therefore, it might be impossible to
                                       & calculate the numerical derivative.
20747 IMSLS_RBCOV_5                    The numerical integration to determine
                                       & the coefficient "beta" has relative
                                       & error = %(r1).  The estimate of "cov"
                                       & may be a multiple of its correct
                                       & value.
20748 IMSLS_CHI_DF                     "df" = %(F1).  "df", must be greater
                                       & than zero.
20749 IMSLS_RETURN_STRING_ONLY         Both "IMSLS_RETURN_STRING" and
                                       & "IMSLS_WRITE_TO_CONSOLE" cannot be
                                       & specified.
30001 IMSLS_BAD_VALUE_GE               "%(s1)" = %(i1).  %(s1) must be greater
                                       & than or equal to %(i2).
30002 IMSLS_LARGE_ARG_WARN             The result is accurate to less than one
                                       & half precision because %(F1) is
                                       & greater than %(F2).
30003 IMSLS_ERF_ALGORITHM              Sufficiently accurate result was not
                                       & achieved.  An algorithmic problem
                                       & exists.
30004 IMSLS_BAD_LAGS                   "lagmax" = %(i1), "lagmin" = %(i2), and
                                       & "n_observations" = %(i3).  The maximum
                                       & lag of the correlation function must
                                       & be greater than or equal to the
                                       & minimum lag and less than
                                       & "n_observations".
30005 IMSLS_BAD_NPFREE                 "npfree" = %(i1) and "lagmax" = %(i2).
                                       &  The number of free parameters must be
                                       & greater than or equal to zero and less
                                       & than "lagmax"
30006 IMSLS_BAD_CF                     cf[%(i1)] = %(r1).  The correlation
                                       & function must be in the inclusive
                                       & range (-1.0,1.0).
30007 IMSLS_BAD_X_COL_DIM_4            "x_col_dim" = %(i1) must be at least as
                                       & large as "n_independent" = %(i2).
30008 IMSLS_NO_REGRESSORS              IMSLS_NO_INTERCEPT is specified and
                                       & "n_independent" = %(i1).  There are no
                                       & regressors in the model.
30009 IMSLS_BAD_SEA_OPTION             The optional argument IMSLS_SEA is valid
                                       & only if the criterion is least
                                       & absolute values.
30010 IMSLS_BAD_LMV_OPTION             The optional argument IMSLS_MAX_RESIDUAL
                                       & is valid only if the criterion is
                                       & minimax.
30011 IMSLS_BAD_LLP_OPTION             The optional argument %(s1) is valid
                                       & only if the criterion is Lp norm.
30012 IMSLS_BAD_LLP_OPTION_2           The %(s1) can only be returned if the
                                       & criterion is Lp norm.
30013 IMSLS_BAD_N_INDEPENDENT          "n_independent" = %(i1).  The number of
                                       & independent variables must be greater
                                       & than or equal to %(i2).
30014 IMSLS_BAD_INDIND_1               indind[%(i1)] = %(i2) and "ncol" =
                                       & %(i3).  indind[%(i1)] must be greater
                                       & than or equal to one and less than or
                                       & equal to NCOL.
30015 IMSLS_BAD_INDIND_2               INDIND[%(i1)] = %(i2) and "irsp" =
                                       & %(i3).  indind[%(i1)] must not be
                                       & equal to "irsp".
30016 IMSLS_NO_REGRESSORS_2            "intcep" = %(i1) and "iind" = %(i2).
                                       &  There are no regressors in the model.
30017 IMSLS_ROUNDING_1                 Calculations terminated prematurely due
                                       & to rounding.
30018 IMSLS_NON_UNIQUE_SOLUTION        The solution may not be unique.
30019 IMSLS_NO_COEFFS                  "ncoef" = ABS(iind) + ""intcep" = %(i1).
                                       &  With no coefficients in the model the
                                       & computations cannot proceed.
30020 IMSLS_BAD_LDR                    "ncoef" = %(i1) and "ldr" = %(i2).  The
                                       & leading dimension of R, "ldr", must be
                                       & greater than or equal to the number of
                                       & coefficients in the model, "ncoef".
30021 IMSLS_BAD_IRSP                   IRSP = %(i1) and NCOL = %(i2).  The
                                       & column number containing the response
                                       & variable in X, IRSP, must be greater
                                       & than 0 and less than or equal to the
                                       & number of columns in X, NCOL.
30022 IMSLS_BAD_P_LPNORM               P = %(r1).  The p in the Lp norm must be
                                       & greater than or equal to 1.
30023 IMSLS_MAXIT_GE_2                 "maxit" = %(i1).  The maximum number of
                                       & iterations permitted, "maxit", must be
                                       & greater than or equal to 2.
30024 IMSLS_MAXIT_GE_1_P_2             "maxit" = %(i1).  The maximum number of
                                       & iterations permitted, "maxit", must be
                                       & greater than or equal to 1 when "p" =
                                       & 2.
30025 IMSLS_ELP_ITER                   On iteration %(i1) "elp"=%(r1).  On
                                       & "iter" = %(i2) the step was multiplied
                                       & by %(r2) in order to backtrack; still
                                       & the norm is too big (%(r3)).
                                       &  Convergence is not declared.  "eps" =
                                       & %(r4) may be too small.
30026 IMSLS_MAXIT_CONVERGE             Convergence has not been achieved after
                                       & "maxit" = %(i1) iterations.  Try
                                       & increasing "maxit" or "eps" = %(r1).
30027 IMSLS_NO_CONVERGENCE_P           "p" = %(r1).  A solution cannot be
                                       & computed because of a serious loss of
                                       & accuracy.  The p-th power of the
                                       & absolute value of one or more of the
                                       & current residuals will result in
                                       & overflow or underflow in subsequent
                                       & computations.
30028 IMSLS_BAD_P_ARG                  The argument to the function must be
                                       & greater than 0.0 and less than 1.0.
                                       &  "p" = %(r1).
30029 IMSLS_BAD_N_FACTORS              "n_factors" = %(i1).  There must be at
                                       & least two factors.
30030 IMSLS_TWO_LEVELS_PER_FACTOR      "n_levels[%(i1)]" = %(i2).  There must
                                       & be at least two levels per factor.
30031 IMSLS_BAD_FACTORS                "n_random" = %(i1) and "n_factors" =
                                       & %(i2).  The number of random factors
                                       & cannot be greater than the total
                                       & number of factors.
30032 IMSLS_INDEX_RANDOM_FACTORS       "index_random_factors[%(i1)]" = %(i2).
                                       & It must the be in the inclusive range
                                       & (1,%(i3)).
30033 IMSLS_BAD_FACTORS_PER_EFFECT     "n_factors_per_effect[%(i1)]" = %(i2).
                                       &  There must be at least one factor in
                                       & each effect.
30034 IMSLS_BAD_FACTOR_PER_EFFECT      "index_factor_per_effect[%(i1)]" =
                                       & %(i2).  It must be in inclusive range
                                       & (1,"n_factors").
30035 IMSLS_EFFECTS_ORDER              Effects are not in standard order: main
                                       & effects must appear before their
                                       & interactions.  In general, an effect E
                                       & cannot appear after an effect F if all
                                       & of the indices for E also appear in F.
30036 IMSLS_N_LEVELS_LT_ONE            An element of "n_levels" was specified
                                       & less than one.
30037 IMSLS_DF_ZERO                    The degrees of freedom for one effect is
                                       & zero.  "n_levels" may have been
                                       & incorrectly specified.
30038 IMSLS_NOBS_LESS_THAN_THREE       The number of observations must be at
                                       & least one,  while "n_observations" =
                                       & %(I1) is given.
30039 IMSLS_NOBS_LT_50                 "n_observations" = %(i1).  The number of
                                       & observations is less than 50, and
                                       & exact tables should be referenced for
                                       & probabilities.
30040 IMSLS_TOO_MANY_NANS              There are too many missing (NaN, not a
                                       & number) values in Y.  At least 3 valid
                                       & observations are necessary.
30041 IMSLS_ALL_Y_WITHIN_FUZZ          Each element of Y is within "fuzz" of 0.
                                       &  "stat[0]" to "stat[7] are set to NaN
                                       & (not a number).
30042 IMSLS_BAD_STAT_VALUE             "stat[0]" = %(i1).  The total number of
                                       & sequences, "stat[0]", used for
                                       & determining "stat[2]" and "stat[3]" is
                                       & less than 8
30043 IMSLS_BAD_N_GROUPS               "n_group" = %(i1).  The number of groups
                                       & must be greater than or equal to 2.
30044 IMSLS_BAD_NI_VALUE               Each element of "ni" must be greater
                                       & than 0.
30045 IMSLS_ALL_Y_TIED                 All elements of "y" are tied.  "stat[0]"
                                       & - "stat[3]" are set to -1.0.
30046 IMSLS_CHISQ_DF_LT_5              The chi-squared degrees of freedom are
                                       & less than 5, so the Beta approximation
                                       & is used.
30047 IMSLS_NT_LT_TWO                  "n_treatments" = %(i1).  The number of
                                       & treatments must be greater than or
                                       & equal to 2.
30048 IMSLS_N_BLOCKS_LT_TWO            "n_blocks" = %(i1).  The number of
                                       & blocks must be greater than or equal
                                       & to 2.
30049 IMSLS_BAD_ALPHA                  "alpha" = %(r1).  The critical level for
                                       & multiple comparisons must be between 0
                                       & and 1 exclusive.
30050 IMSLS_AT_LEAST_ONE_NAN           "y[%(i1)]" is a missing value (NaN, not
                                       & a number).  Other elements of Y may be
                                       & missing.  No missing values are
                                       & permitted in this routine.
30051 IMSLS_SUM_OVER_BLOCKS            The sum over blocks of the ranks of the
                                       & treatments were exactly the same.
                                       &  "stat[0]" and "stat[1]" are set to
                                       & machine infinity.
30052 IMSLS_BAD_N_GROUPS_3             "n_group" = %(i1).  The number of groups
                                       & must be greater than or equal to 3.
30053 IMSLS_TIES_RANDOMIZATION         At least one tie is detected.
                                       &  Randomization is used to break all
                                       & ties.
30054 IMSLS_DF_T_STATS                 The degrees of freedom for the
                                       & t-statistic are 0.  "stat[2]" through
                                       & "stat[5]") are set to 0.
30055 IMSLS_BAD_DISPERSION             "k" = %(i1) and "n_observations" =
                                       & %(i2).  The number of consecutive "x"
                                       & elements to be used to measure
                                       & dispersion must be greater than 0 and
                                       & less than or equal to
                                       & "n_observations".
30056 IMSLS_STAT_TOO_SMALL             "nstat[3]"= %(i1).  n"stat[3]" is too
                                       & small to continue with a dispersion
                                       & test when "k" = %(i2) and
                                       & "n_observations" = %(i3).
30057 IMSLS_X_NOT_MONOTONIC            x[%(i2)] = %(r2) and x[%(i1)] = %(r1).
                                       &  "x" must be ordered monotonically
                                       & increasing.
30058 IMSLS_F_GT_ZERO                  F = %(r1) when X = %(r2).  F must be
                                       & greater than or equal to 0 and less
                                       & than or equal to 1 (by definition of a
                                       & probability distribution function).
30059 IMSLS_F_DECREASING               When X = %(r3), F = %(r1).  When X =
                                       & %(r4), F = %(r2).  F cannot be
                                       & decreasing with X (by definition of a
                                       & probability distribution function).
30060 IMSLS_BRACKET_VALUE              Unable to bracket the value of the
                                       & inverse noncentral t at "P" = %(r1),
                                       & with parameters "df" = %(i2) and
                                       & "delta" = %(r3).
30063 IMSLS_EFMS2_GE_EFMS1             "efms1" = %(r1) and "efms2" = %(r2).
                                       &  The mean square for effect one must
                                       & be greater than the mean square for
                                       & effect two.
30064 IMSLS_EST_VARCOMP                "vchat" = %(r1).  The estimated
                                       & variance component must be positive.
30065 IMSLS_ENDPNTS_NEGATIVE           One or more endpoints are negative and
                                       & are set to zero.
30066 IMSLS_DF_RANGE                   "The number of degrees of freedom, "df"
                                       & = %(r1), must be in the range (0.,
                                       & 200000].
30067 IMSLS_ALAM_GE_ZERO               The noncentrality parameter, "delta" =
                                       & %(r1), must be at least 0.
30068 IMSLS_DF_ALAM_SUM                The sum of the number of degrees of
                                       & freedom and the noncentrality
                                       & parameter, "df" = %(r1), "delta" =
                                       & %(r2), must be no greater than
                                       & 200,000.
30069 IMSLS_CHISQ_ZERO                 Since "chi_squared" = %(r1) is less than
                                       & or equal to zero, the distribution
                                       & function is zero at "chi_squared".
30070 IMSLS_CONV_NOT_OBTAINED          Convergence was not obtained.  The best
                                       & approximation to the probability is P
                                       & = %(r1).
30071 IMSLS_NOBSX_LT_ONE               "n_observations_x" = %(i1).  The number
                                       & of observations for sample "x",
                                       & "n_observations_x", must be greater
                                       & than 0.
30072 IMSLS_NOBSY_LT_ONE               "n_observations_y" = %(i1).  The number
                                       & of observations for sample "y",
                                       & "n_observations_y", must be greater
                                       & than 0.
30073 IMSLS_NO_VALID_X_VALUES          After removing all missing values from
                                       & "x", no valid observations exist.  At
                                       & least one valid observation for sample
                                       & "x" is necessary to continue.
30074 IMSLS_NO_VALID_Y_VALUES          After removing all missing values from
                                       & "y", no valid observations exist.  At
                                       & least one valid observation for sample
                                       & "y" is necessary to continue.
30075 IMSLS_NOBSX_NOBSY_LE_ZERO        Both "n_observations_x" = %(i1) and
                                       & "n_observations_y" = %(i2) must be
                                       & greater than 0.
30076 IMSLS_GT_ONE_AT_X                Since "x" = %(r1) is greater than one,
                                       & the distribution function is one at
                                       & "x".
30077 IMSLS_ONE_TESTING_METHOD         At most one testing method may be
                                       & specified.
30078 IMSLS_EXPECT_NOT_ALLOWED         The optional argument IMSLS_EXPECT is
                                       & not allowed when a runs test is
                                       & performed.
30079 IMSLS_N_RUN_LENGTH_1             "n_run" = %(i1).  The length of the
                                       & longest run for tabulation, "n_run",
                                       & must be greater than or equal to 2 and
                                       & less than or equal to 25.
30080 IMSLS_RUNS_NOT_ALLOWED           The optional argument IMSLS_RUNS_EXPECT
                                       & is not allowed when a runs test is not
                                       & performed.
30081 IMSLS_N_RUN_LENGTH_2             "n_run" = %(i1).  The length of the
                                       & longest run for tabulation, "n_run",
                                       & must be greater than or equal to 2.
30082 IMSLS_LDCOVA_VALUE               "dcova" = %(i2) and "n_run" = %(i1).
                                       &  The leading dimension of "covar",
                                       & "ldcova", must be greater than or
                                       & equal to the length of the longest
                                       & run, "n_run".
30083 IMSLS_IDO_0_THRU_3               "ido" = %(i1).  The processing option,
                                       & "ido", must be either 0, 1, 2, or 3.
30084 IMSLS_NOBS_NRUN                  The total number of observations in "x"
                                       & is equal to %(i1) which must be at
                                       & least twice as large as "n_run" =
                                       & %(i2).
30085 IMSLS_COV_NOT_POSDEF             The covariance matrix of the runs score
                                       & is not positive definite.  Use a
                                       & smaller value of "n_run" (= %(i1)).
30086 IMSLS_NEGATIVE_FACTORIAL         The factorial of a negative integer
                                       & is undefined.  N = %(i1).
30087 IMSLS_FACTORIAL_TOO_LARGE        The factorial of the argument is so
                                       & large it would overflow.  N = %(i1).
                                       &  It must be less than %(i2).
30088 IMSLS_N_CELL_VALUE               "n_run" = %(i1).  The number of cells
                                       & used for tabulation, "n_run", must
                                       & be greater than or equal to 2.
30089 IMSLS_NCELL_VS_LDCOUN            "ncell" = %(i2) and "ldcoun" = %(i1).
                                       &  The leading dimension of "count",
                                       & "ldcoun", must be greater than or
                                       &  equal to the number of cells,
                                       & "ncell".
30090 IMSLS_PAIRS_LAG_VALUE            "pairs_lag" = %(i1) and "n_observations"
                                       & = %(i2).  When "pairs_lag" is equal to
                                       & 1, "n_run" must be an even number.
30091 IMSLS_LAG_VS_NRUN                "pairs_lag" = %(i1) and "n_observations"
                                       & = %(i2).  The lag used in computing
                                       & pairs statistics, "pairs_lag", must be
                                       & greater than 0 and less than
                                       & "n_observations".
30092 IMSLS_X_VALUE_GT_1               At least one element of "x" is greater
                                       & than 1.0.  Each element of "x" must be
                                       & between 0.0 and 1.0, inclusive.
30093   IMSLS_X_VALUE_LT_0             "At least one element of "x" is less
                                       & than 0.0.  Each element of "x"
                                       & must be between 0.0 and 1.0,
                                       & inclusive.
30094   IMSLS_LAG_RECOMMEND            "n_observations" = %(i1) and
                                       & "pairs_lag" = %(i2).  For better
                                       & results it is recommended that
                                       & "n_observations" be at least twice
                                       & as large as "pairs_lag".
30095   IMSLS_SUM_OF_COUNTS_ZERO       The sum of the counts of the number of
                                       & pairs in each cell is zero.  There are
                                       & no observations so the chi-squared
                                       & statistic cannot be computed.  CHISQ
                                       & and PROB are set to NaN (not a
                                       & number).
30096   IMSLS_NOBS_MULT_OF_4           "n_observations" must be a miltiple of 4
                                       & when a d-squared test is performed.
30097   IMSLS_EXPECTED_VALUE_LT_5      The expected value of each cell is less
                                       & than 5.0.  The chi-squared
                                       & approximation may not be good.
30098   IMSLS_NCELL_DIFFERENT          "n_cell" = %(i1) is different from its
                                       & previous value, %(i2), when IDO is
                                       & greater than 1.  The value of "n_cell"
                                       & must not change in successive calls
                                       & for the same test problem.
30099   IMSLS_NVAR_LT_1                "n_variables" = %(i1).  The number of
                                       & variables, "n_variables", must be at
                                       & least 1.
30100   IMSLS_NCOL_LT_1                "ncol" = %(i1).  The number of columns
                                       & in "x" must be greater than or equal
                                       & to 1.
30101   IMSLS_NVAR_VS_NCOL             "n_variables" = %(i1) and "ncol"
                                       & = %(i2).  The number of variables,
                                       & "n_variables", must be at least 1 and
                                       & no greater than the number of columns
                                       & in "x", "ncol".
30102   IMSLS_LDR_VS_NVAR              "ldr" = %(i1) and  "n_variables" =
                                       &  %(i2).  The leading dimension of "r",
                                       & "ldr", must be greater than or equal
                                       & to the number of variables, 
                                       & "n_variables"
30103   IMSLS_IFRQ_VS_NCOL             IFRQ = %(i1) and NCOL = %(i2).  The
                                       & frequency option, IFRQ must be
                                       & positive and less than or equal to the
                                       & number of columns, NCOL.
30104   IMSLS_IWT_VS_NCOL              IWT = %(i1) and NCOL = %(i2).  The
                                       & weighting option, IWT, must be
                                       & positive and less than or equal to the
                                       & number of columns, NCOL.
30105   IMSLS_BAD_NVARPM               The number of variables plus one
                                       & each for the  weight and frequency
                                       & variable (if defined) is %(i1).  This
                                       & sum must be at least 1 and no
                                       & greater than the number of columns,
                                       & NCOL = %(i2).
30106   IMSLS_BAD_IND_VALUE            IND[%(i1)] = %(i2) and NCOL = %(i3).
                                       &  Elements of IND must be positive and
                                       & not greater than NCOL.
30107   IMSLS_IND_VALS_NONUNIQUE       IND[%(i1)] = IND[%(i2)] =%(i3).
                                       &  Each element of IND must be unique.
30108   IMSLS_ICMPUT_VALUE             ICMPUT = %(i1).  ICMPUT must be equal to
                                       & 0, 1, or 2.
30109   IMSLS_X_COL_LINEARLY_RELATED   Column %(i1) of "x" is numerically
                                       & linearly related to the other columns
                                       & in X.
30110   IMSLS_SUM_FREQ_VALUE           "sum_frequencies" = %(i1) and
                                       & "n_variables" = %(i2).  The sum of the
                                       & frequencies, "sum_frequencies", must
                                       & be greater than the maximum of 3 and
                                       & ("n_variables"+1), the number of
                                       & variables plus one.
30111   IMSLS_EFMS1_GT_ZERO            "efms1" = %(r1).  The mean square must
                                       & be positive.
30112   IMSLS_NOBS_NOT_MULT_OF_3       "n_observations" = %(i1)  .The number of
                                       & data elements currently input in X,
                                       & "n_observations", must be a positive
                                       & multiple of three on each call with
                                       & IMSLS_DCUBE.
30113   IMSLS_M_TOO_SMALL              The length of the series, "m" = %(i1),
                                       & must be larger than the number of
                                       & parameters, %(i2).
30114   IMSLS_P_TOO_SMALL              "p" = %(i1) must be nonnegative.
30115   IMSLS_Q_TOO_SMALL              "q" = %(i1) must be nonnegative.
30116   IMSLS_SUM_LT_ONE               The sum of the initial guess of the last
                                       & (p+q) coefficients must be less than
                                       & one.
30117   IMSLS_XLB_NONNEGATIVE          "xlb[%(i1)]" = %(r1) must be
                                       & nonnegative.
30118   IMSLS_SMALL_SERIES             Results may be unreliable for series
                                       & with a length less than 200.
30119   IMSLS_NVAR_GT_ZERO             The number of variables NVAR = %(i1).
                                       &  It must be greater than zero.
30120   IMSLS_NCON_GE_ZERO             The number of linear constraints
                                       & NCON = %(i1).  It must be at least
                                       & zero.
30121   IMSLS_NEQ_NONNEGATIVE          The number of linear equality
                                       & constraints NEQ = %(i1).  It must be
                                       & greater than or equal to zero.
30122   IMSLS_MEQ_GT_M                 The number of linear equality
                                       & constraints NEQ = %(i1) is greater
                                       & than the number of linear constraints
                                       & NCON = %(i2).  NEQ must be less than
                                       & or equal to NCON.
30123   IMSLS_LDA_ZERO                 The leading dimension of A must be
                                       & greater than zero, yet LDA = %(i1) is
                                       & given.
30124   IMSLS_NCON_GT_LDA              The number of linear constraints must
                                       & not exceed the leading dimension of A,
                                       & yet NCON = %(i1) and LDA = %(i2) are
                                       & given.
30125   IMSLS_ACC_GE_ZERO              The first order tolerance ACC = %(r1).
                                       &  It must be greater than or equal to
                                       & zero.
30126   IMSLS_BAD_BOUNDS               The bounds given for X(%(i1)) are
                                       & inconsistent:  XLB(%(i1)) = %(r2) must
                                       & not exceed XUB(%(i1)) = %(r3).
30127   IMSLS_BAD_MAXFCN               The maximum number of function
                                       & evaluations MAXFCN = %(i1).  It must
                                       & be greater than zero.
30131   IMSLS_CONSTR_INCONSISTENT      The equality constraints are
                                       & inconsistent.
30132   IMSLS_EQ_CONSTR_INCONSISTENT   The equality constraints and the bounds
                                       & on the variables are found to be
                                       & inconsistent.
30133   IMSLS_NO_VECTOR_X              No vector X satisfies all of the
                                       & constraints.  Specifically, the
                                       & current active constraints prevent any
                                       & change in X that reduces the sum of
                                       & constraint violations
30134   IMSLS_VARS_DETERMINED          DL2ONF finds that the variables are
                                       & determined by the equality
                                       & constraints.
30135   IMSLS_NVAR_NCON_NEQ            A condition on NVAR = %(i3), NCON =
                                       & %(i1), or NEQ = %(i2) is violated.
30136   IMSLS_NVAR_POSITIVE            The number of variables must be positive
                                       & while N = %(i1) is given.
30137   IMSLS_NVAR_LDA_HESS            The number of variables must be less
                                       & than or equal to the leading dimension
                                       & of the Hessian while N = %(i2) and
                                       & LDH = %(i1) are given.
30138   IMSLS_BAD_EPSFCN               The estimate for the relative noise in
                                       & the function must be between 0.0 and
                                       & 0.1 while EPSFCN = %(d1) is given.
30139   IMSLS_NEG_XSCALE               The values for the diagonal scaling
                                       & matrix must be positive while
                                       & XSCALE(%(i1)) = %(d1) is given.
40001   IMSLS_X_COL_DIM_LT_NCOL        "x_col_dim" = %(I1) must be greater than
                                       & or equal to "ncol" = %(I2).
40002   IMSLS_BAD_LDDIST               LDDIST = %(i1).  The leading dimension
                                       & of DIST must be greater than or equal
                                       & to NROW = %(i2) when IROW = 1.
40003   IMSLS_BAD_NDSTM_W_COL          "ndstm" = %(i1).  "ndstm" must be
                                       & greater than or equal to 1 and less
                                       & than or equal to "nrow" = %(i2) when
                                       & distances are computed  between
                                       & columns.
40004   IMSLS_BAD_NDSTM_W_ROW          "ndstm" = %(i1).  "ndstm" must be
                                       & greater than or equal to 1 and less
                                       & than or equal to "ncol" = %(i2) when
                                       & distances are computed between rows.
40005   IMSLS_BAD_IND_VAL_1            "ind[%(i3)]" = %(i1).  All elements of
                                       & "ind" must be greater than or equal to
                                       & 0 and less than "nrow" = %(i2).
40006   IMSLS_BAD_IND_VAL_2            "ind"[%(i3)] = %(i1).  All elements of
                                       & "ind" must be greater than or equal to
                                       & 0 and less than "ncol" = %(i2) when
                                       & distances are computed between rows.
40007   IMSLS_BAD_LDDIST_2             LDDIST = %(i1).  The leading dimension
                                       & of DIST must be greater than or equal
                                       & to NCOL = %(i2) when IROW is not equal
                                       & to 1.
40008   IMSLS_BAD_IMETH                "imeth" = %(i1).  "imeth" must be
                                       & greater than or equal to 0 and less
                                       & than or equal to 8.
40009   IMSLS_BAD_ISCALE               "iscale" = %(i1).  "iscale" must be
                                       & either 0, 1, or 2 when "imeth" =
                                       & %(i2).
40010   IMSLS_SCALE_FACTOR_ZERO        The computations cannot continue because
                                       & the %(i1)-th scale factor is zero.
40011   IMSLS_VAR_LINEAR_DEP           The %(i1)-th variable is (numerically)
                                       & linearly dependent on the preceeding
                                       & variables.  This variable (and all the
                                       & linearly dependent variables) will be
                                       & ignored in the computation of the
                                       & Mahalanobis distances.
40012   IMSLS_NO_POS_VARIANCE          No variable in "ind" has a positive
                                       & variance.  The Mahalanobis distances
                                       & cannot be computed.
40013   IMSLS_ZERO_NORM                The computations cannot continue because
                                       & the Euclidean norm of the %(i1)-th
                                       & column is equal to zero.
40014   IMSLS_CLUSTER_PTS              There must be at least 3 data points for
                                       & hierarchical clustering.  The number
                                       & of data points is "npt" = %(i1).
40015   IMSLS_BAD_IMETH_2              "imeth" = %(i1).  "imeth" must be
                                       & between 0 and 4, inclusive
40016   IMSLS_BAD_ITRANS               "itrans" = %(i1) must be 0, 1, or 2.
40017   IMSLS_BAD_LDDIST_3             LDDIST = %(i1).  The leading dimension
                                       & of the input matrix DIST must be greater
                                       & than or equal to the number of data
                                       & points, NPT = %(i2).
40018   IMSLS_WARDS_EXPECTS            Wards method expects positive Euclidean
                                       & distances in the dist matrix.
                                       &  dist[%(i1)][%(i2)] = %(r1) is an
                                       & invalid value.
40019   IMSLS_ICLSON_VALS              "iclson[%(i1)]" = %(i2).  All elements
                                       & of "iclson" must be between 1 and 2 *
                                       & "npt" - 1.
40020   IMSLS_ICRSON_VALS              "icrson[%(i1)]" = %(i2).  All elements
                                       & of "icrson" must be between 1 and 2 *
                                       & "npt" - 1.
40021   IMSLS_BAD_TREE_STRUCT          The tree structure specified by "iclson"
                                       & and "icrson" is incorrect because an
                                       & attempt to assign observation %(i1) to
                                       & more than one cluster is being made.
40022   IMSLS_BAD_TREE_STRUCT_2        The tree structure specified by "iclson"
                                       & and "icrson" is incorrect because
                                       & observation %(i1) has not been
                                       & assigned to a cluster.
40023   IMSLS_ARG_A_OVERFLOW           Since "a" = %(r1) is greater than %(r2),
                                       & the function will overflow.
40024   IMSLS_ARG_A_TOO_SMALL          Since "a" = %(r1) is so small, the
                                       & initial guess will overflow.
40025   IMSLS_UNABLE_TO_BRACKET        Unable to bracket the value of the
                                       & inverse gamma at "p" = %(r1), with
                                       & parameter "a" = %(r2).
40050   IMSLS_TOO_MANY_MISSING_2       There are too many missing (NaN, not a
                                       & number) values in "x".  At least 2
                                       & valid observations are necessary.
40051   IMSLS_INPUT_N_CLASSES_NEEDED   Optional argument IMSLS_INPUT_N_CLASSES
                                       & must be used if IMSLS_INPUT_CUTPOINTS
                                       & is used.
40052   IMSLS_EQ_FREQ_ERR_1            Optional argument
                                       & IMSLS_EQUAL_FREQUENCIES cannot be used
                                       & if one of IMSLS_N_CLASSES or
                                       & IMSLS_INPUT_CUTPOINTS is used.
40053   IMSLS_BAD_N_FREQUENCY          "n_frequency" = %(i1) is not in the
                                       & allowable range.
40054   IMSLS_N_FREQ_ERR_1             Computed "n_classes" = %(i1) is not
                                       & exactly "n_valid"/"n_frequency" =
                                       & %(i2)/%(i3) = %(i4).  The last class
                                       & will have fewer than "n_frequency"
                                       & observations.
40055   IMSLS_CLASSES_STRADDLED        Classes %(i1) and %(i2) both contain
                                       & observations with the value %(r1).
40056   IMSLS_CUTPOINTS_NOT_INCR       Cutpoints must be strictly increasing,
                                       & but "cutpoints[%(i2)]" = %(r1) <
                                       & "cutpoints[%(i1)]" = %(r2).
40057   IMSLS_ALL_OBS_EQUAL            All valid observations are equal to
                                       & %(r1).  Cutpoints will all be set to
                                       & %(r1), and all valid observations will
                                       & be assigned to class number 1.
40061   IMSLS_BAD_SCALING_METHOD       The scaling method must be between -5
                                       & and 5 but "method"= %(I2).
40062   IMSLS_SCALE_RELATIONSHIP       The scale limits are invalid.  real_min
                                       & = %(R1), real_max = %(R2), target_min
                                       & = %(R3), target_max = %(R4).
40063   IMSLS_X_STATS_NAN              Values of "center" = %(R1) and "spread"
                                       & = %(R2) must be valid when the
                                       & "method" = %(I1) is less than -1.
40067   IMSLS_INVALID_METHOD           The value of "method" = %(I1) must be
                                       & one of -2, -1, 1, 2.
40068   IMSLS_INVALID_N_CLASSES        The value of "n_classes" = %(I1) must be
                                       & greater than zero.
40069   IMSLS_X_OUT_OF_RANGE           The value of "x[%(I1)]" = %(I2) must be
                                       & greater than zero and less than or
                                       & equal to "n_classes" = %(I3).
40070   IMSLS_INVALID_METHOD_0_1       The value of "method" = %(I1) must be
                                       & either 0 or 1.
40071   IMSLS_INVALID_M_TRANSFORM      The value of "m_transform" = %(I1) must
                                       & be one of 0, 1, 2.
40073   IMSLS_Z_LE_ZERO                All values in "z" must be greater than
                                       & zero, but "z[%(I1)]" = %(R2).
40074   IMSLS_INVALID_MAX_LAG          The number of lags must be greater than
                                       & zero and less than "n_obs"=%(I2), but
                                       & "max_lag"=%(I1).
40076   IMSLS_INVALID_BINARY_ROW       Binary unfiltering requires that each
                                       & row of "x" contain at most element set
                                       & to 1, but row %(I1) contains more than
                                       & one element equal to 1.
40077   IMSLS_INVALID_BINARY_VALUE     Binary unfiltering requires that
                                       & elements of "x" be set to either 0 or
                                       & 1, but x[%(I2)][%(I3)] = %(I4).
40078   IMSLS_I_CLASS_DECREASING       The values in "i_class" must be
                                       & nondecreasing, but "iclass[%(I1)] =
                                       & %(I2) and "iclass[%(I3)] = %(I4).
40079   IMSLS_LAG_GE_OBS               Class %(I1) has %(I2) observations and
                                       & "lag[%(I3)]"=%(I4).  This will result
                                       & in all observations for class %(I1) in
                                       & column %(I3) of "z" being set to
                                       & missing (NaN).
40080   IMSLS_N_OBS_PER_CLASS_ZERO     Class %(I1) does not have any
                                       & observations.  All classes must have
                                       & at least one observation.
40081   IMSLS_CENTER_SPREAD_REQUIRED   The optional argument
                                       & IMSLS_SUPPLY_CENTER_SPREAD is required
                                       & when "method" = %(I1) is one of -2,
                                       & -3, -4, -5.
40082   IMSLS_CENTER_SPREAD_NOT_ALLOWED The optional argument
                                       & IMSLS_RETURN_CENTER_SPREAD is not
                                       & valid when "method" = %(I1) is one of
                                       & 1, -1, -2, -3, -4, -5.
40083   IMSLS_SCALE_LIMITS_REQUIRED    The optional argument IMSLS_SCALE_LIMITS
                                       & is required when "method" = %(I1) is
                                       & one of -1, 1, -4, 4, -5, or -5.
40084   IMSLS_INVALID_EPOCH_SIZE       The number of epochs for Stage I
                                       & optimization is %(I1), but the epoch
                                       & size is not between 0 and %(I2).
40085   IMSLS_VAR1VAR2_NE_VAR3         "n_nominal" + "n_continuous" = %(I1).
                                       &  "n_nominal" + "n_continuous"  must be
                                       & equal to the number of inputs, %(I2).
40086   IMSLS_NN_TRAINING_OVERFLOW     Numerical Overflow Condition
                                       & Encountered.
40087   IMSLS_NN_OUT_OF_RANGE_1        %(S1) = %(I1) and %(S2) = %(I2) for
                                       & perceptron %(I3).  Both %(S1) and
                                       & %(S2) cannot be less than %(I4)"
40088   IMSLS_NN_OUT_OF_RANGE_2        %(S1) = %(I1) for layer %(I2).  %(S1)
                                       & must be between %(I1) and %(I2).
40089   IMSLS_INT_ARRAY_OUT_OF_RANGE   "%(S1)[%(I1)]" = %(I2).  "%(S1)" must be
                                       & between %(I3) and %(I4).
40091   IMSLS_NN_INVALID_NODE_1        "%(S1)" = %(I1).  Invalid "%(S1)" node.
                                       &  Cannot link to the %(S2) layer.
40092   IMSLS_NN_INVALID_NODE_2        "%(S1)" = %(I1) and "%(S2)" = %(I2).
                                       & Cannot link to the same layer.
40093   IMSLS_NN_INVALID_NODE_3        "%(S1)" = %(I1).  Invalid "%(S1)" node.
                                       &  Cannot link from the %(S2) layer.
40094   IMSLS_NN_INVALID_NODE_4        "%(S1)" = %(I1).  Cannot remove link
                                       & "%(S1)".  "%(S1)" must be between
                                       & %(I2) and %(I3).
40095   IMSLS_NN_INVALID_LINK          "%(S1)" = %(I1). "%(S2)" = %(I2).  Link
                                       & does not exist between these nodes.
40096   IMSLS_NN_LINK_EXISTS           "%(S1)" = %(I1). "%(S2)" = %(I2).  Link
                                       & already exists.
40097   IMSLS_NN_INVALID_LAYER_1       "%(S1)" = %(I1).  "%(S1)" must be
                                       & greater than zero but less than %(I2).
40098   IMSLS_NN_INVALID_LAYER_2       "%(S1)" = %(I1).  "%(S1)" must be
                                       & greater than or equal to zero but less
                                       & than %(I2).
40099   IMSLS_N_OBS_PER_CLASS          Class %(i1) has %(i2) observation(s). All
                                       & classes must have at least %(i3)
                                       & observations.
40100   IMSLS_INVALID_WEIGHT_METHOD_1  The value input for "method" is not
                                       & recognized.  Valid optons must be one
                                       & of IMSLS_EQUAL, IMSLS_RANDOM,
                                       & IMSLS_PRINCIPAL_COMPONENTS, OR
                                       & IMSLS_DISCRIMINANT.
40101   IMSLS_INVALID_WEIGHT_METHOD_2  n_classes = %(I1), n_classes must be
                                       & greater than or equal to 2 when method
                                       & = IMSLS_DISCRIMINANT.
40102   IMSLS_NOBS_TOO_SMALL           "%(S1)" = %(I1).  "%(S1)" is smaller
                                       & than the total number of network
                                       & inputs = %(I2).
40104   IMSLS_NCLASS_INVALID_1         n_classes = %(I1) and n_outputs = %(I2).
                                       & Binary classification requires
                                       & n_classes = 2 and n_outputs =1.
40105   IMSLS_NCLASS_INVALID_2         n_classes = %(I1) and n_outputs = %(I2).
                                       & Multi-classification requires
                                       & n_classes = n_outputs.
40106   IMSLS_CANNOT_USE_DISCRIMINANT  Discriminant analysis failed with error
                                       & = %(I1).  This can occur when binary
                                       & encoding of nominal inputs is being
                                       & used.  Setting weights using method =
                                       & IMSLS_RANDOM.
40107   IMSLS_HIGH_ERROR_RATE          Discriminant analysis encountered a high
                                       & missclassification error rate = %(R1).
40109   IMSLS_INVALID_ACTIVATION_FCN   ACTIVATION = %(I1) for PERCEPTRON =
                                       & %(I2) is invalid.  Activation function
                                       & must be between %(I3) and %(I4).
40110   IMSLS_CANNOT_BUILD_TABLE       Insufficient memory for
                                       & IMSLS_LOGISTIC_TABLE_LOOKUP option.
                                       & Try using logistic function
                                       & calculation instead.
40111   IMSLS_NOT_BINARY_ENCODED       n_nominal = %(I1) but the values in the
                                       & matrix nominal[] are inconsistent with
                                       & binary encoding.
40114   IMSLS_MISSING_CLASSIFICATION   Optional argument IMSLS_CLASSIFICATION
                                       & required when method =
                                       & IMSLS_DISCRIMINANT.  method =
                                       & IMSLS_RANDOM will be used.
40115   IMSLS_ATTRIBUTES_INVALID       n_continuous and n_nominal cannot both
                                       & be zero.
40116   IMSLS_INVALID_SPREAD           "spread" = 0 is not valid for "method" =
                                       & %(I1) z-score calculation.  Select an
                                       & alternate method.
40117   IMSLS_INTERNAL_ERROR           An unexpected error has occurred.
                                       &  Please contact your product support
                                       & personnel.
40120 IMSLS_NO_CONV_SEP                Convergence did not occur in %(i1)
                                       & iterations.  "tolerance"=%(r3), the
                                       & error between estimates=%(r1), and the
                                       & gradient has norm=%(r2).  Adjust
                                       & "tolerance" or "max_iter", or there
                                       & may be a separation problem in the
                                       & data.
40121 IMSLS_ZERO_COUNT                 Class %(I1) has a count of 0.  The model
                                       & is not estimable.
40122 IMSLS_PERFECT_COUNT              Class %(I1) occurs in every
                                       & case.max_grou
40123 IMSLS_WRONG_COUNT                The sum of responses, %(R1), exceeds the
                                       & given frequency of %(R2) at
                                       & observation %(I1).  There is an error
                                       & in the input data or "y" is
                                       & misspecified.
40124 IMSLS_MISSING_X                  "x[%(i1)]" = NaN (not a number). "x" may
                                       & not contain missing values.  There may
                                       & be other elements of "x" equal to NaN.
40125 IMSLS_MISSING_Y                  "y[%(i1)]" = NaN (not a number).  "y"
                                       & may not contain missing values.  There
                                       & may be other elements of "y" equal to
                                       & NaN.
40126 IMSLS_NO_CONV_OVERFLOW           The linear predictor =%(R1) is too large
                                       & and will lead to overflow when
                                       & exponentiated.  The algorithm fails to
                                       & converge.
40127 IMSLS_AMBIG_FORMAT               Values in "y" cannot be both group id
                                       & and group counts.  Please check the
                                       & input format for "y" and specify
                                       & correctly.
40128 IMSLS_MAX_GROUP                  The maximum group id, %(I1), should be
                                       & equal to the number of classes, %(I2).
                                       &  Please check the inputs "y" and
                                       & "n_classes".
40130 IMSLS_NO_ACTUALS                 The average squared prediction error
                                       & cannot be calculated because no actual
                                       & "y" values are given.
40131 IMSLS_OVERFLOW                   The linear predictor =%(R1) is too large
                                       & and will lead to overflow when
                                       & exponentiated.
50000   IMSLS_BCTR_ILLEGAL_NOBS        "n_observations" = %(i1).
                                       &  "n_observations" must be greater than
                                       & or equal to 1.
50001   IMSLS_BCTR_CONTAINS_NAN        "z[%(i1)]" = NaN (not a number).  "z"
                                       & may not contain missing values.  There
                                       & may be other elements of "z" that are
                                       & equal to NaN.
50002   IMSLS_BCTR_ILLEGAL_SHIFT       "shift" = %(r1) and the smallest element
                                       & of z is "z[%(i1)]" = %(r2).
                                       &  "shift" + "z[%(i1)]" = %(r3).
                                       &  "shift" + "z[i]" must be greater than
                                       & 0 for i = 0, ..., "n_observations"-1.
                                       &  "n_observations" = %(i2).
50004   IMSLS_BCTR_F_UNDERFLOW         Forward transformation.  "power" =
                                       & %(r3).  "shift" = %(r2).  The minimum
                                       & element of "z" is "z[%(i1)]" = %(r1).
                                       & ("z[%(i1)]" + "shift")^"power" will
                                       & underflow.
50005   IMSLS_BCTR_F_OVERFLOW          Forward transformation.  "power" =
                                       & %(r3). "shift" = %(r2).  The maximum
                                       & element of "z" is "z[%(i1)]" = %(r1).
                                       & ("z[%(i1)]" +"shift")^"power" will
                                       & overflow.
50006   IMSLS_BCTR_I_UNDERFLOW         Inverse transformation.  "power" =
                                       & %(r2).  The minimum element of "z" is
                                       & "z[%(i1)]" = %(r1).  exp("z[%(i1)]")
                                       & will underflow.
50007   IMSLS_BCTR_I_OVERFLOW          Inverse transformation.  "power" =
                                       & %(r2).  The maximum element of "z" is
                                       & "z[%(i1)]" = %(r1).  exp("z[%(i1)]")
                                       & will overflow.
50008   IMSLS_BCTR_I_ABS_UNDERFLOW     Inverse transformation.  "power" =
                                       & %(r2).  The element of "z" with the
                                       & smallest absolute value is "z[%(i1)]"
                                       & = %(r1).  "(z[%(i1)]")^(1/"power")
                                       & will underflow.
50009   IMSLS_BCTR_I_ABS_OVERFLOW      Inverse transformation.  "power" =
                                       & %(r2).  The element of "z" with the
                                       & largest absolute value is "z[%(i1)]"
                                       & = %(r1).  ("z[%(i1)]")^(1/"power")
                                       & will overflow.
50020 IMSLS_RNARM_NEG_VAR              "a_variance" = %(r1), The variance of
                                       & "a" must be greater than 0.  The
                                       & absolute value of %(r1) is used for
                                       & the variance.
50021 IMSLS_RNARM_IO_NOISE             Both IMSLS_INPUT_NOISE and
                                       & IMSLS_RETURN_NOISE are specified.
                                       &  IMSLS_INPUT_NOISE is used.
50024 IMSLS_RNARM_NEG_NP               NPAR = %(i1).  The number of
                                       & autoregressive parameters must be
                                       & nonnegative.
50025 IMSLS_RNARM_ILLEGAL_LAGAR        LAGAR(%(i1)) = %(i2).  It must be at
                                       & least one.
50026 IMSLS_RNARM_NEG_NQ               NPMA = %(i1).  The number of moving
                                       & average parameters must be
                                       & nonnegative.
50027 IMSLS_RNARM_ILLEGAL_LAGMA        LAGMA(%(i1)) = %(i2).  It must be at
                                       & least one.
50028 IMSLS_RNARM_INPUT_NOISE          The noise array is provided.  Ignore the
                                       & METHOD and/or VAR_NOISE arguments.
50036 IMSLS_ALL_NAN                    All the observations are missing.
50043 IMSLS_BAD_CONFIDENCE_LEVEL       The specified confidence level is %(r1)
                                       & which is not between 0.0 and 100.0.
50047 IMSLS_NUMBER_EQUN_UNKN_LT_1      The argument "n" = %(i1).  The number of
                                       & equations to be solved and the number
                                       & of unknowns must be at least equal to
                                       & 1.
50048 IMSLS_ERRREL_LESS_THAN_ZERO      The argument "rel_err" = %(r1).  The
                                       & bound for the relative error should be
                                       & at least equal to 0.
50049 IMSLS_ITMAX_LESS_THAN_ZERO       The argument "max_it" = %(i1).  The
                                       & maximum number of iterations must
                                       & be at least one.
50050 IMSLS_TOO_MANY_FCN_EVALS         The number of calls to the function has
                                       & exceeded "max_it"*("n"+1) = %(i1).
50051 IMSLS_NO_BETTER_POINT            The bound for the relative error,
                                       & "rel_err" = %(r1), is too small.  No
                                       & further improvement in the approximate
                                       & solution is possible.  The user should
                                       & increase "rel_err".
50052 IMSLS_NO_PROGRESS                The iteration has not made good
                                       & progress.  The user may try a new
                                       & initial guess.
50053 IMSLS_LDFAC_LESS_ORDER           The order of the matrix must be less
                                       & than or equal to its leading dimension
                                       & while "n" = %(i1) and "ldfac" = %(i2)
                                       & are given.
50054 IMSLS_NONPOSITIVE_MATRIX         The leading %(i1) by %(i1) submatrix of
                                       & the input matrix is not positive
                                       & definite.
50055 IMSLS_INVALID_LDA_VALUE_GIVEN    "lda" must be greater than or equal to
                                       & "n" and greater than zero while "lda"
                                       & = %(i1) and "n" = %(i2) are given.
50056 IMSLS_INVALID_UPLO_VALUE         "uplo" must be set equal to "u" or "l"
                                       & while "%(s1)" is given.
50057 IMSLS_TOO_MANY_GRAD_EVAL         Maximum number of gradient evaluations
                                       & exceeded.az
50058 IMSLS_TOO_MANY_HESSIAN_EVAL      Maximum number of Hessian evaluations
                                       & exceeded.
50059 IMSLS_INEFFICIENT_PROB_SIZE      This routine may be inefficient for a
                                       & problem of size "n" = 1.
50060 IMSLS_SCALING_WITH_IDENT_MATRIX  The diagonal scaling matrix for the
                                       & variables must be positive while some
                                       & of the entries are less than or equal
                                       & to zero.  The algorithm will use the
                                       & identity scaling matrix for "xscale".
50061 IMSLS_MAXGRAD_VALUE_TOO_SMALL    The maximum number of gradient
                                       & evaluations must be positive while
                                       & "max_grad" = %(i1) is given.  The
                                       & algorithm will use "max_grad" = 400.
50062 IMSLS_MAXHES_VALUE_TOO_SMALL     The maximum number of Hessian
                                       & evaluations must be positive while
                                       & "max_hes" = %(i1) is given.  The
                                       & algorithm will use "max_hes" = 100.
50063 IMSLS_FSCALE_VALUE_TOO_SMALL     The estimate of the scale of the
                                       & objective function must be positive
                                       & while "fscale" = %(r1) is given.  The
                                       & algorithm will use "fscale" = 1.0.
50064 IMSLS_NO_FURTHER_PROGRESS        The last global step failed to locate a
                                       & lower point than the current X value.
                                       &  The current X may be an approximate
                                       & local minimizer and no more accuracy
                                       & is possible or the step tolerance may
                                       & be too large where "step_tol" = %(r1)
                                       & is given.
50065 IMSLS_REL_FCN_TOLERANCE          Relative function convergence - Both the
                                       & actual and predicted relative
                                       & reductions in the function are less
                                       & than or equal to the relative
                                       & function convergence tolerance
                                       & "rfcn_tol" = %(r1).
50066 IMSLS_EXCEEDED_MAX_LOOP_COUNTER  Solution for the damped least squares
                                       & problem has not occurred within %(i1)
                                       & iterations.  IMSLS_CHANGE_LOOP_MAXIMUM
                                       & can be used to adjust the iteration
                                       & limit.
50067 IMSLS_NONNEGATIVE_CONSTRAINTS    The number of constraints must be
                                       & nonnegative while "m" = %(I1) is
                                       & given.
50068 IMSLS_WRONG_IBTYPE_VALUE         The bounds indicator must be equal to 0,
                                       & 1, 2, or 3 while "ibtype" = %(i1) is
                                       & given.
50069 IMSLS_XSCALE_DIAGONAL_LT_ZERO    The values for the diagonal scaling
                                       & matrix, "xscale", must be greater than
                                       & zero.  "xscale[%(i1)]" = %(f1) was
                                       & given.
50070 IMSLS_UPHILL_DIRECTION           The algorithm calculated an uphill
                                       & search direction.
50071 IMSLS_TOO_MANY_LINESEARCH        The line search used  more than %(i1)
                                       & function calls, therefore it has been
                                       & declared unsuccessful.
50072 IMSLS_NO_PROGRESS_MADE           The search direction is close to zero.
50073 IMSLS_QP_INCONSISTENT            The constraints for the QP subproblem
                                       & are inconsistent.
50074 IMSLS_POLYNOMIAL_DEGREE          The degree of the polynomial must be
                                       & less than 100 and greater than zero.
                                       & "ndeg" is given as %(i1).
50075 IMSLS_ZERO_COEFF                 The %(i1) leading coefficients of the
                                       & polynomial are equal to zero.  The
                                       & last %(i2) roots will be set to
                                       & ("infinity",0.0) where "infinity" is
                                       & the largest machine constant.
50076 IMSLS_FEWER_ZEROS_FOUND          Only %(i1) roots were found.  The "root"
                                       & vector will contain the value for
                                       & machine infinity in the last %(i2)
                                       & locations.
50077 IMSLS_COL_DIM_LESS_ORDER         The order of the matrix must be less
                                       & than or equal to its column dimension
                                       & while for "%(S1)" the order is %(i1)
                                       & and the column dimension is %(i2).
50078 IMSLS_MATRIX_ORDER_TOO_SMALL     The argument "n" = %(i1).  The order of
                                       & the matrix must be at least 1.
50079 IMSLS_LDA_VALUE_TOO_SMALL        The argument "lda" = %(i1).  The leading
                                       & dimension of the matrix must be at
                                       & least equal to the order of the
                                       & matrix, "n" = %(i2).
50080 IMSLS_SLOW_CONVERGENCE_GEN       The iteration for the eigenvalues did
                                       & not converge after %(i1) iterations.
50098 IMSLS_ILLEGAL_TOL                TOL = %(r1).  TOL must be greater than
                                       & or equal to 0.0 and less than or equal
                                       & to 1.0.
50105 IMSLS_MORE_THAN_ONE_METHODS      The optional arguments IMSLS_SUM_METHOD
                                       & and/or IMSLS_MEAN_METHOD are specified
                                       & %(i1) times.  The IMSLS_SUM_METHOD is
                                       & used.
50106 IMSLS_X_CONTAINS_NAN             At least one element of X is equal to
                                       & NaN (not a number).  The first element
                                       & of X to equal NaN is X[%(i1)].
50108 IMSLS_X_CONSTANT_SERIES          The minimum element of X is X[%(i1)] =
                                       & %(r1).  This equals the maximum
                                       & element of X.  The series is constant.
50109 IMSLS_Y_CONSTANT_SERIES          The minimum element of Y is Y(%(i1)) =
                                       & %(r1).  This equals the maximum
                                       & element of Y.  The series is constant.
50110 IMSLS_VARIANCE_X_TOO_SMALL       The variance of series X = XVAR = %(r1).
                                       &  This is too small to work with.
50111 IMSLS_VARIANCE_Y_TOO_SMALL       The variance of series Y = YVAR = %(r1).
                                       &  This is too small to work with.
50115 IMSLS_AR_NON_STATIONARY          Input values for Autoregressive
                                       & coefficients do not represent a
                                       & stationary time series.
50116 IMSLS_NON_STATIONARY_CONVERGE    Estimation process converged
                                       & to a non-stationary solution.
50117 IMSLS_MA_NON_INVERTIBLE          Input values for Moving Average
                                       & coefficients do not represent an
                                       & invertible time series.
50118 IMSLS_BAD_IMETHOD                IMETHOD = %(i1).  IMETHOD must be 0, 1
                                       & or 2.
50121 IMSLS_IGNORE_SEASON              N_S_INITIAL = %(i1).  Ignoring
                                       & S_INITIAL.  A season of 0 will be
                                       & calculated.
50125 IMSLS_IGNORE_SEASON_2            Row %(i1) of S_INITIAL is skipped.  The
                                       & differenced series would have fewer
                                       & observations than 2*maxlag = %(i2).
50126 IMSLS_IGNORE_SEASON_3            Row %(i1) of S_INITIAL is skipped
                                       & because of problems computing the
                                       & optimum AIC.
50200 IMSLS_SECC_NOT_PRINTED           "iprint" = %(i1) and "iseopt" = %(i2).
                                       &  The "secc" array is not calculated so
                                       & it can't be printed.
50201 IMSLS_NOBSX_NOBSY_LT_TWO         "%(S1)" = %(i1).  The number of
                                       & observations in each channel of the
                                       & time series "%(S2)" must be greater
                                       & than or equal to 2.
50202 IMSLS_NCHANX_NCHANY_LT_ONE       "%(S1)" = %(i1).  The number of channels
                                       & in the time series "%(S2)" must be
                                       & greater than or equal to 1.
50203 IMSLS_MAXLAG_OUT_OF_RANGE_2      "lagmax" = %(i1).  "lagmax" must be
                                       & greater than 0 and less than the
                                       & minimum of ("n_observations_x" and
                                       & "n_observations_y") = %(i2).
50204 IMSLS_X_Y_CHANNEL_CONSTANT       The variance of channel %(i1) of "%(S1)"
                                       & is 0.0 which implies the series is
                                       & constant.
50205 IMSLS_RATIO_ERR                  "ratio" = %(r1).  If "ration" is less
                                       & than zero, it must be equal to -1.0.
50206 IMSLS_INVALID_CENSORING_CODE_3   "x[%(I1)]["icen"=%(I2)]" = %(r1).  All
                                       & censoring codes must be equal to 0 or
                                       & 1.
50207 IMSLS_STRATA_FORMED              One or more groups have been detected in
                                       & the failure times.  Additional strata
                                       & have been formed.
50208 IMSLS_NO_VALID_OBS_2             After eliminating observations with
                                       & missing values, no valid observations
                                       & remain.
50209 IMSLS_ONE_COVARIATE              After eliminating observations with
                                       & missing values, only one covariate
                                       & vector remains.
50210 IMSLS_DATA_NOT_SORTED            "itie" = 1 but the data are not sorted
                                       & by time within group on column "irt"
                                       & = %(i1) of "x".
50211 IMSLS_INDCL_VALUES_1             "index_class_var[%(i1)]" = %(i2).  All
                                       & indices for the classification
                                       & variables must be greater than or
                                       & equal to 0 and less than or equal to
                                       & "n_columns"-1 = %(i3).
50212 IMSLS_NO_COVARIATE               The model specified by "n_class_var" =
                                       & %(i1), "nef" = %(i2), and the elements
                                       & in "index_class_var", "n_var_effects",
                                       & and "indices_effects" yields no
                                       & covariates.
50213 IMSLS_INDEX_4                    "indices_effects[%(i5)]" = %(i3).
                                       &  Variable %(i2) in effect %(i1) is
                                       & given as %(i3).  An index greater than
                                       & "n_columns"-1 = %(i4) or less than 0
                                       & is not allowed.
50214 IMSLS_AGE_CLASS                  "n_classes" = %(i1).  The number of age
                                       & classes must be greater than or equal
                                       & to 1.
50215 IMSLS_POPU_SIZE                  "initial_pop" = %(i1).  The population
                                       & size must be greater than or equal to
                                       & 1.
50216 IMSLS_COHORT_SIZE                "n_cohort[0]" = %(i1).  The size of the
                                       & cohort at the beginning of the first
                                       & interval must be greater than or equal
                                       & to 1.
50217 IMSLS_AGE_ERROR                  "age[%(i1)]" = %(r1) must be greater
                                       & than "age[%(i2)]" = %(r2).
50218 IMSLS_A_ERROR                    "a[0]" is positive but "a[%(i1)]" =
                                       & %(r1).  "a[i]" must be between 0.0 and
                                       & 1.0 when "a[0]" is positive.
50219 IMSLS_SIZE_GT_ZERO               "n_cohort[%(i1)]" = %(i2) must be
                                       & greater than zero.
50220 IMSLS_DEATH_GT_ZERO              "n_deaths[%(i1)]" = %(i2) must be
                                       & greater than zero and less than
                                       & "n_cohort[%(i1)]" = %(i3).
50221 IMSLS_DIFF_GT_ZERO               "n_cohort[%(i1)]-n_cohort[%(i2)]" =
                                       & %(i3).  When getting a cohort table,
                                       & this difference must always be
                                       & positive.
50222   IMSLS_KM_VAR_UNIQUE            "irt" = %(i2), "ifrq" = %(i1), "icen" =
                                       & %(i3) and "igrp" = %(i4).  Each column
                                       & indicator of "x" must be unique.
50223   IMSLS_KM_NO_OBS                After eliminating rows of "x" with
                                       & missing values, no observations remain
                                       & for group value %(r1).
50224   IMSLS_KM_INVALID_EST           K-M estimates for observation %(i1) =
                                       & %(r1) is an invalid value.  The
                                       & estimated survival probability must be
                                       & in the inclusive range (0,1) and
                                       & nonincreasing with failure time within
                                       & each group.
50225   IMSLS_KM_EST_MISSING           K-M estimates for observation %(i1) is
                                       & missing but later failures occur.  A
                                       & missing value is not allowed prior to
                                       & the last failed observation.
50300  IMSLS_UNABLE_TO_BRACKET_VALUE2  Unable to bracket the value of the
                                       & inverse chi-squared
                                       & at "p" = %(F1), with
                                       & "df" = %(F2).
50310  IMSLS_NEED_A_PREDICTOR          Decision tree generation requires at least
                                       & one predictor but "ncols" = %(i1).
50311  IMSLS_INVALID_VAR_TYPE          Variable type must be between 0 and 3
                                       & but "var_type"[%(i1)] = %(i2).
50312  IMSLS_VAR_TYPE_MISMATCH         Variable type mismatch between input
                                       & tree and new data.
50313 IMSLS_NO_SURROGATES              The selected method = %(i1) does not
                                       & find surrogate splits. Only method =
                                       & 1 finds surrogate splits.
50314 IMSLS_NULL_ARG                   The required argument %(s1) is NULL.
50315 IMSLS_INVALID_METHOD2            A valid tree generation method is 0
                                       & (C4.5), 1 (alaCART), 2 (CHAID) or 3
                                       & (QUEST), but "method" = %(i1).
50316 IMSLS_BAD_RESPONSE_TYPE          The %(s1) method requires a categorical
                                       & response variable, but "response_type"
                                       & = %(i1).
50317 IMSLS_BAD_VAR_TYPE               The %(s1) method requires variables of
                                       & type %(i1) or %(i2), but
                                       & "var_type"[%(i3)] = %(i4).
50318 IMSLS_INVALID_PARAM              The parameter "%(s1)" must be between
                                       & %(i1) and %(s2) = %(i2), but %(s1) =
                                       & %(i3).
50319 IMSLS_INVALID_PARAM1             The parameter %(s1)[%(i1)] must be
                                       & greater than %(s2)[%(i2)] = %(i3), but
                                       & %(s1)[%(i1)] = %(i4).
50320 IMSLS_INVALID_PARAM2             The parameter %(s1)[%(i1)] must be
                                       & between %(i2) and %(s2)= %(i3), but
                                       & %(s1)[%(i1)]=%(i4).
50321 IMSLS_INVALID_PARAM3             The parameter %(s1) must be between
                                       & %(i1) and %(i2) inclusive, but %(s1)
                                       & = %(i3).
50322 IMSLS_INVALID_PARAM4             The parameter %(s1)[%(i1)] must be
                                       & between %(r1) and %(r2), but
                                       & %(s1)[%(i1)] = %(r3).
50323 IMSLS_INVALID_PARAM5             The parameter %(s1)[%(i1)] must be less
                                       & than or equal to %(r1), but
                                       & %(s1)[%(i1)] = %(r2).
50324 IMSLS_INVALID_PARAM6             The parameter %(s1)[%(i1)] = %(r1) must
                                       & be greater than %(s2)[%(i2)], but
                                       & %(s2)[%(i2)]= %(r2).
50325 IMSLS_INVALID_PARAM8             The parameter %(s1)[%(i1)] = %(i2) must
                                       & be greater than %(i3).
50326 IMSLS_INVALID_PARAM9             The parameter %(s1)[%(i1)] = %(r1) must
                                       & be greater than %(r2).
50327 IMSLS_INVALID_CRITERIA           Valid splitting criteria are 0
                                       & (entropy), 1 (Gini index), 2
                                       & (deviance), but "criteria" = %(i1).
50328 IMSLS_PURE_NODE                  Nothing to split.  The root node is
                                       & already pure.
50329 IMSLS_PROBS_SUM_TO_ONE           The probabilities given in %(s1) must
                                       & sum to 1.0, but the sum is %(r1).
50330 IMSLS_VALUE_GT_ZERO              The %(s1) must be greater than 0, but
                                       & the value is %(r1).
50331 IMSLS_NONZERO_COST               On the diagonal, the misclassification
                                       & cost should be 0.0, but %(s1)[%(i1)] =
                                       & %(r1).
50332 IMSLS_TOO_MANY_CATEGORIES        The categorical variable in column index
                                       & %(i1) has more than the maximum number
                                       & of categories where %(s1) = %(i2).
50333 IMSLS_EXCEEDS_MAX_SIZE           Splitting the current node will cause
                                       & the number of nodes to exceed %(s1)=
                                       &%(i1) before the stopping criteria can
                                       &be checked. Increase the maximum size.
50334 IMSLS_NO_SURROGATE_RULE          The tree does not contain surrogate
                                       & rules.
50335 IMSLS_NUM_CLASSES_ERROR          The number of classes specified
                                       & ("n_classes" = %(i1)) differs from the
                                       & number of unique classes identified
                                       & in the training data (%(i2)).
50336 IMSLS_NUM_CLASSES_CONFLICT       Two differnet values have been specified
                                       & for n_classes in the optional
                                       & arguements. "n_classes"(1) = %(i1) and
                                       & "n_classes"(2) = %(i2).
50340 IMSLS_TOO_FEW_OBS_1               The number of observations (%(i1)) is less  
                                       & than the size of the pre-sample (%(i2)).
50341 IMSLS_TOO_FEW_OBS_2               The number of observations (%(i1)), less the
									   & presample size (%(i2)) is not 
                                       & sufficient for estimating the %(S1) model
                                       & which has %(i3) parameters.
60000 IMSLS_NESTED_TOO_DEEP            IMSLS routines are nested too deeply.
60001 IMSLS_ERROR_STACK_MISMATCH       Stack error.  Trying to pop "%(S1)", but
                                       & "%(S2)" is on the top of the stack.
60002 IMSLS_SMALL_ARGUMENT             The argument "x" = %(F1) must be greater
                                       & than or equal to %(F2).
60003 IMSLS_BAD_ARGUMENT_TO_N1RNOF     The argument passed to N1RNOF must be
                                       & 1 or 2.
63000 IMSLS_BAD_CHECKSUM               The pre-determined value is %(F1) and
                                       & the computed value is %(F2).
63001 IMSLS_BAD_CHECKSUM_1             The pre-determined value is %(F1) and
                                       & the scalar value is %(I2).
63002 IMSLS_BAD_CHECKSUM_2             The pre-determined value is %(F1) and
                                       & the scalar value is %(F2).
63005 IMSLS_BAD_IOP_VALUE              "iop" must contain the value 1, 2, 3,
                                       & or, 4.  "iop" currently contains the
                                       & value %(I1).
63006 IMSLS_BAD_IOP_VALUE_2            "iop" must contain the value 1, 2, 3,
                                       & or, 4.  "iop" currently contains the
                                       & value %(I1) for test %(I2).

65000 IMSLS_INADEQUATE_SPACE           NH = %(i1), LDH = %(i2), and LDG =
                                       & %(i3).  There is inadequa space to
                                       & store the completely testable
                                       & hypothesis.
                                       & Increase LDH or LDG so that they are
                                       & both greater than or equal to NH.
65001 IMSLS_POSITIVE_NRC_NCC_VALUES    Both the number of rows and the number
                                       & of columns of a matrix have to be
                                       & positive while NRC = %(i1) and NCC
                                       & = %(i2) are given.
65002 IMSLS_NRC_EXCEEDS_LDC_VALUE      The number of rows of the matrix must be
                                       & less than or equal to its leading
                                       & dimension while NRC = %(i1) and LDC
                                       & = %(i2) are given.
65003 IMSLS_DIM_INCONSISTENT           Some of the dimensions are not
                                       & consistent.  The following must hold
                                       & NRB = NRA, NRC = NCA and NCC = NCB
                                       & while NRA = %(i1), NCA = %(i2), NRB
                                       & = %(i3), NCB = %(i4), NRC = %(i5) and
                                       & NCC = %(i6) are given.
65004 IMSLS_ERR_FLAG                   Error in computation control flag.  The
                                       & IJ decimal expansion of IPATH is I =
                                       & %(i1) and J = %(i2).  I must be either
                                       & 0, 1 or 2 and J must be either 0 or
                                       & F_ONE
65005 IMSLS_POSITIVE_NM                N = %(i1), M = %(i2) and L = %(i3), but
                                       & both N and M must be no greater than
                                       & L, and N and M must be positive.
65006 IMSLS_HYPERGEOMETRIC             The hypergeometric probability
                                       & associated with MAX(0, N-L+M) is
                                       & computed to be %(r1).  This does not
                                       & allow the generation algorithm to
                                       & process, that is N = %(i1), M = %(i2)
                                       & and L = %(i3) are not acceptable in
                                       & this algorithm.
65007 IMSLS_LOT_SIZE_GT                "l" = %(i1) and "n" = %(i2).  The lot
                                       & size must be greater than the sample
                                       & size.
65008 IMSLS_LOT_SIZE_GT_DEF            "l" = %(i1) and "m" = %(i2).  The lot
                                       & size must be greater than the number
                                       & of defectives in the lot.
65009 IMSLS_ARG_LT_ZERO                "k" = %(i1).  Since the argument to the
                                       & argument is less than 0, the
                                       & probability is set to 0.
65010 IMSLS_ARG_FCN_GT_SAMPLE          "k" = %(i1) and "n" = %(i2).  Since the
                                       & argument to the function is greater
                                       & than the sample size, the probability
                                       & is set to 0.
65100 IMSLS_NO_SHUFFLE_SUBSTREAM       The specified uniform multiplicative
                                       & congruential pseudorandom number
                                       & generator is shuffled.
                                       & imsls_random_substream_seed_get does
                                       & not work when shuffling is used.
                                       & imsls_random_option allows you to
                                       & select the type of generator.
65101 IMSLS_NO_GFSR_SUBSTREAM          The specified uniform pseudorandom
                                       & number generator uses generalized
                                       & feedback shift register (GFSR) method.
                                       & imsls_random_substream_seed_get does
                                       & not work when this method is used.
                                       & imsls_random_option allows you to
                                       & select the type of generator.
65102 IMSLS_NONPOSITIVE_TABLE          table[%(i2)] = %(i1).  All elements of
                                       & "table" must be positive.
65103 IMSLS_BAD_PROBABILITY2           The probability p[%(i1)] = %(r1), but
                                       & each element of "p" must be greater
                                       & than 0.0 and less than 1.0.
65104 IMSLS_BAD_PROBABILITY_SUM        The total of the elements in "p", is
                                       & %(r1), but this total must be 1.0.
65105 IMSLS_BAD_FIRST_LAST             "ifirst" = %(i1), "ilast" = %(i2), and
                                       & "n" = %(i3), but these variables must
                                       & satisfy the relationship 0 < "ifirst"
                                       & <= "ilast" <= "n".
65106 IMSLS_BAD_SAMPLE_SIZE            The sample size requested is %(i1) and
                                       & the population size is %(i2).  "nsamp"
                                       & and "npop" both must be positive, and
                                       & "nsamp" must be less than or equal to
                                       & "npop".
65107 IMSLS_BAD_TIME1                  "tbegin" = %(r1) and "tend" = %(r2).
                                       &  "tbegin" must be nonnegative and
                                       & "tend" must be greater than "tbegin".
65108 IMSLS_BAD_TIME2                  "theta_min" = %(r1) and "theta_max" =
                                       & %(r2).  "theta_min" must be
                                       & nonnegative and "theta_max" must be
                                       & greater than "theta_min".
65109 IMSLS_BAD_RATE_FCN1              The rate function evaluated at %(r2) is
                                       & equal to %(r1).  The rate function
                                       & value must be nonnegative.
65110 IMSLS_BAD_RATE_FCN2              The rate function evaluated at %(r2) is
                                       & equal to %(r1).  The rate function
                                       & value must not be greater than
                                       & "theta_max".
65111 IMSLS_BAD_ALPHA2                 The characteristic exponent, "alpha" =
                                       & %(r1), but "alpha" must be positive
                                       & and less than or equal 2.0.
65112 IMSLS_BAD_BPRIME                 The skewness parameter, "bprime" =
                                       & %(r1), but "bprime" must be in the
                                       & inclusive range (-1.0, 1.0).
65113 IMSLS_BAD_ROW_TOTALS             nrtot[%(I1)] = %(I2).  The row totals
                                       & must be nonnegative.
65114 IMSLS_BAD_COL_TOTALS             nctot[%(I1)] = %(I2).  The column totals
                                       & must be nonnegative.
65115 IMSLS_BAD_SUM_ROW_TOTALS         The sum of the row totals is %(I1).  It
                                       & must be at least one.
65116 IMSLS_BAD_SUM_COL_TOTALS         The sum of the column totals is %(I1).
                                       &  It must be at least one.
65117 IMSLS_BAD_DIMENSION_K            The value of "k" is %(i1) but the number
                                       & of dimensions must be greater than 1.
65118 IMSLS_BAD_NR_AND_LDZ             The value of "nr" is %(i1) and the value
                                       & of "ldz" is %(i2), but both must be
                                       & positive, and "nr" must not be greater
                                       & than "ldz".
65119 IMSLS_COL_DIM_TABLE              The column dimension of table must be
                                       & greater than or equal to five
65120 IMSLS_FIRST_COL_TABLE            The abscissas in the first column of
                                       & "table" are not increasing.
                                       &  table[%(i2)][0] = %(r2) and
                                       & table[%(i1)][0] = %(r1).
65121 IMSLS_SECOND_COL_TABLE           The values of the CDF in the second
                                       & column of TABLE are not increasing.
                                       &  table[%(i2)][1] = %(r2) and
                                       & table[%(i1)][1] = %(r1).
65122 IMSLS_SECOND_COL_TABLE2          table[0][1] = %(r1) and
                                       & table[ndata-1][1] = %(r2).  Since the
                                       & entries in the second column of
                                       & "table" represent a CDF, they must
                                       & begin with 0.0 and end at 1.0.
65123 IMSLS_PROBS_LT_ZERO              probs[%(i1)] = %(r1).  The values for
                                       & "probs" must be positive.
65124 IMSLS_PROBS_SUM_NOT_ONE          The values in "probs" sum to %(r1).
                                       &  The values in "probs" must sum 1.0.
65125 IMSLS_BAD_CUMPR_RANGE            cumpr[%(i1)] = %(r1), but the value
                                       & of cumpr["nmass"] must be in the range
                                       & from 0 to "nmass", since it is the
                                       & number of indexes to the CDF stored in
                                       & "cumpr".
65126 IMSLS_CUMPR_NMASSM1_NE_ONE       cumpr[NMASS-1] = %(r1), but this value
                                       & should be 1.0, since it is the value
                                       & of the CDF at the upper limit of the
                                       & range of the distribution.
65127 IMSLS_CUMPR_NMASSM1_NE_ONE2      cumpr[NMASS-1]= %(r1), but this value
                                       & should be 1.0.  It is set to 1.0.
65128 IMSLS_SECOND_COL_TABLE3          The values of the CDF in the second
                                       & column of TABLE did not begin at 0.0
                                       & and end at 1.0, but they have been
                                       & adjusted.  Prior to adjustment,
                                       & table[0][1] = %(r1) and
                                       & table[ndata-1][1] = %(r2).
65129 IMSLS_BAD_X_COL_DIM_5            x_col_dim = %(I1).  x_col_dim must be
                                       & greater than or equal to ndim.
65130 IMSLS_NROW_LT_1                  "nrow" = %(i1).  The number of rows
                                       & of "x" must be greater than 0.
65131 IMSLS_BAD_NBUCK                  "nbuck" = %(i2), "nrow" = %(i1).
                                       &  The bucket size, "nbuck", must be
                                       & greater than zero and less than or
                                       & equal to the number of rows, "nrow"
65132 IMSLS_NROW_GT_LDX                "ldx" = %(i2) and "nrow" = %(i1).  The
                                       & leading dimension of "x", must be
                                       & greater than or equal to the number of
                                       & rows of "x", "nrow".
65133 IMSLS_NCOL_GT_ZERO               "ncol" = %(i1).  The number of columns
                                       & of "x", "ncol", must be greater than
                                       & 0.
65134 IMSLS_NVAR_GT_ZERO2              "nvar" = %(i1).  The number of
                                       & variables, "nvar", to be used in
                                       & forming the tree must be greater than
                                       & zero.
65135 IMSLS_LDX_LT_NROW                "ldx" = %(i1).  The leading dimension of
                                       & "x", "ldx", must be greater than or
                                       & equal to "nrow" = %(i2).
65136 IMSLS_BAD_K_RANGE                "nrow" = %(i1), "k" = %(i2).  The number
                                       & of nearest neighbors, "k", must be
                                       & greater than zero and less than or
                                       & equal to the number of rows, "nrow".
65137 IMSLS_BAD_NVAR_RANGE             "nvar" = %(i1), "ncol" = %(i2).  The
                                       & number of variables of "x", "nvar",
                                       & must be greater than zero and less
                                       & than or equal to the number of
                                       & columns of "x", "ncol".
65138 IMSLS_BAD_METRIC                 "metric" = %(i1).  "metric" is an
                                       & unknown measure for finding the
                                       & nearest neighbor.  "metric" must be 0,
                                       & 1, or 2.
65139 IMSLS_FIRST_ROW_NAN              x[%(i1)][%(i2)] = NaN (Not a Number).
                                       &  Missing values are not allowed in the
                                       & first "nrow" = %(i3) rows of "x"
                                       & for the columns specified by "ind".
65140 IMSLS_BAD_K_D_TREE               The data structure input is not
                                       & a k-d tree.
65141 IMSLS_BAD_INDEX_VECTOR           %(l1)(%(i1)) = %(i2) and %(l2) = %(i3).
                                       &  %(l1)(%(i1)) must be between 1
                                       & and %(l2), inclusive.
65142 IMSLS_BAD_INDEX_VECTOR2          There are %(i1) elements of %(l1) out
                                       & of range.  Elements must be between
                                       & 1 and %(l2), inclusive.
65143 IMSLS_EIG_AND_A_MATRIX           The optional argument IMSLS_EIGENVALUES
                                       & is required if IMSLS_A_MATRIX is used.
65144 IMSLS_A_COL_DIM_LT_N             "a_col_dim" = %(i1) must be at least
                                       & as large as "n", but "a_col_dim" =
                                       & %(i1) and "n" = %(i2).
65145 IMSLS_BAD_MATRIX_ORDER           "n" = %(i1).  The order of the matrices
                                       & must be at least 2.
65146 IMSLS_BAD_LDA_LDCOR              N = %(i1), LDA = %(i2), and LDCOR =
                                       & %(i3).  Both LDA and LDCOR must be at
                                       & least as large as N, and both must be
                                       & at least 2.
65147 IMSLS_EIGENVALUE_NOT_POS         eigenvalues[%(i1)] = %(r2).  Eigenvalues
                                       & must be positive.
65148 IMSLS_BAD_EIG_SUM                The sum of the eigenvalues is %(r1).
                                       &  The sum must be equal to "n".
65149 IMSLS_EIGS_NOT_DIFFERENT         The eigenvalues are not sufficiently
                                       & different from one another.
65150 IMSLS_PRECISION_LOSS             Loss of precision occurred in the
                                       & rotations used to form the
                                       & correlation matrix.  Some of the
                                       & diagonals of "cor" differ from 1.0 by
                                       & more than ten times machine epsilon.
65151 IMSLS_NE_ROW_COL_TOTALS          The sum of the row totals is %(I1) and
                                       & the sum of the column totals is %(I2).
                                       &  The two must be equal.
65152 IMSLS_ONLY_ONT_TABLE             The row totals and/or the column totals
                                       & are such that the probability
                                       & distribution of tables is degenerate,
                                       & that is, only one such table is
                                       & possible.
65153 IMSLS_INDEX_AND_RETURN_USER      The argument IMSLS_INDEX_ONLY can only
                                       & be used if the argument
                                       & IMSLS_RETURN_USER is also used.
65154 IMSLS_CUMPR_NOT_INCREASING       cumpr[%(i2)] = %(r2) and cumpr[%(i1)] =
                                       & %(r1).  "cumpr" contains cumulative
                                       & probabilities and therefore, the
                                       & values must be increasing.
65155 IMSLS_CUMPR_NOT_DEL_FROM_ONE     cumpr[nmass-1] = %(r1) and "del" =
                                       & %(r2).  cumpr[nmass-1] must be within
                                       & the maximum error allowed, "del", from
                                       & 1.0.
65156 IMSLS_BAD_CUMPR_LENGTH           The length of "cumpr" must be greater
                                       & than or equal to "nmass" + "nndx",
                                       & but "nmass" = %(i1), "nndx" = %(i2),
                                       & and "lcumpr" = %(i3).
65157 IMSLS_CUMPR_TOO_SHORT            "lcumpr" = %(i1), "nndx" = %(i2); hence
                                       & there are %(i3) positions available
                                       & in "cumpr" to hold the cumulative
                                       & probabilities.  However, cumpr[%(i3)]
                                       & = %(r1), but it should be 1.0.
                                       &  Futhermore, "prf" did not increase
                                       & for ten successive call beyond %(i4).
65158 IMSLS_INCREASE_LCUMPR            On input LCUMPR = %(i1), NNDX = %(i2)
                                       & and as computed NMASS = %(i3).  But,
                                       & NMASS + NNDX must be less than or
                                       & equal to LCUMPR.  The length of CUMPR
                                       & should be increased.
65159 IMSLS_BAD_CUMPR_VAL              For some I, cumpr[i] is computed to be
                                       & less than 1.0-"del", and yet
                                       & cumpr[I+1] - 1.0 is greater than 1.0 -
                                       & cumpr[i].  In this case, the maximum
                                       & value that the random variable is
                                       & allowed to take on is I; that is,
                                       & cumpr[i] is set to 1.0.
65160 IMSLS_CUMPR_NOT_POSITIVE         cumpr[%(i1)] = %(r1).  All probabilities
                                       & must be positive.
65161 IMSLS_NROW_NONNEGATIVE           "nrow" = %(i1).  The number of rows
                                       & must be nonnegative.
65162 IMSLS_BAD_SAMPLE_SIZE2           "nsamp" = %(i1).  The sample size must
                                       & be at least one.
65163 IMSLS_NVAR_LT_ONE                "nvar" = %(i1).  There must be at least
                                       & one variable.
65164 IMSLS_BAD_NROW_NSAMP             "nrow" = %(i1) and "nsamp" = %(i2).
                                       &  Since there is only one invocation of
                                       & this function, "nrow" must be greater
                                       & than or equal to "nsamp".
65165 IMSLS_BAD_LDPOP                  LDPOP = %(i1) and NROW = %(i2).  LDPOP,
                                       & the leading dimension of POP, must be
                                       & greater than or equal to NROW.
65166 IMSLS_BAD_LDSAMP                 LDSAMP = %(i1) and NSAMP = %(i2).
                                       &  LDSAMP, the leading dimension of
                                       & SAMP, must be greater than or equal to
                                       & NSAMP.
65167 IMSLS_NY_GT_ZERO                 "ny" = %(i1).  "ny" must be greater than
                                       & or equal to 0.
65168 IMSLS_NY_LDZ_LDR_ETC             NY = %(i1), LDZ = %(i2), LDR = %(i3),
                                       & and LDCOVV = %(i4).  LDZ, LDR, and
                                       & LDCOVV must be greater than or equal
                                       & to NY.
65169 IMSLS_Y_I_IS_NAN                 "y[%(i1)]" = NaN (not a number).  No
                                       & element of "y" may equal NaN.  There
                                       & may be other elements of "y" equal to
                                       & NaN.
65170 IMSLS_NB_GT_ONE                  "nb" = %(i1).  "nb" must be greater than
                                       & or equal to 1.
65171 IMSLS_BAD_IT_VALUE               IT = %(i1).  IT must equal 0 or 1.
65172 IMSLS_BAD_IQ_VALUE               IQ = %(i1).  IQ must equal 0 or 1.
65173 IMSLS_NONNEG_DEF                 The matrix "r" + "z"*"covb"*"z" is not
                                       & nonnegative definite within the
                                       & tolerance defined by "tol" ( = %(r1)).
                                       &  Either "tol" is too small, or "r" or
                                       & "covb" is not nonnegative definite.
65174 IMSLS_REDUCE_TOL                 The system of equations trans(covvch) *
                                       & x = z*covb is inconsistent.  The
                                       & Cholesky factorization to compute
                                       & covvch may be based on too large a
                                       & value of tol ( = %(r1)).  The input of
                                       & a smaller value for tol may be
                                       & appropriate.
65175 IMSLS_INCONSISTENT_VAR_COVAR     The system of equations trans(covvch) *
                                       & x = v is inconsistent.  The
                                       & variance-covariance matrix of the
                                       & observations is inconsistent with the
                                       & observations in y.
65180 IMSLS_QPROP_OUT_OF_RANGE         qprop[%(i1)] = %(r1).  The quantile
                                       & proportion must be greater than 0.0
                                       & and less than 1.0.
65181 IMSLS_ALL_OBS_MISSING_1          All of the observations are missing
                                       & values.  The elements of "q", "xlo"
                                       & and "xhi" have been set to NaN (not a
                                       & number).
65200 IMSLS_N_EXP_OBS_GT_1             The number of experimental observations
                                       & must be greater than 1, but n = %(I1)
                                       & supplied.
65201 IMSLS_N_LOC_GT_1                 The number of locations must be greater
                                       & than 0, but n_locations = %(I1)
                                       & supplied.
65202 IMSLS_N_LEVELS_1                 The number of levels for the whole-plot
                                       & factor must be greater than one, but
                                       & n_whole = %(I1) is supplied.
65203 IMSLS_N_SPLIT_1                  The number of levels associated with the
                                       & split-plot factor must be greater than
                                       & 1, but n_split = %(I1) supplied.
65204 IMSLS_OPT_ARG_LOC_1              Optional argument IMSLS_LOCATIONS
                                       & required when n_locations = %(I1) is
                                       & greater than 1.
65205 IMSLS_SS_CALC_1                  Sum of squares calculations are
                                       & inaccurate.  Corrected Total SS=%(R1),
                                       & Sum of other SS = %(R2).
65206 IMSLS_INPUT_ERROR_1              Input Error: Incomplete Data.  Possibly
                                       & data with missing values have not been
                                       & included in y.
65207 IMSLS_INPUT_ERROR_2              Input Error: Number of observations not
                                       & equal to N
65208 IMSLS_NO_REPS_IN_TREATMENT       Unable to compute estimate for missing
                                       & data.  There is at least one treatment
                                       & with no replicates.
65210 IMSLS_N_TREATMENT_GT_1           The number of treatments must be greater
                                       & than 1, but n_treatment = %(I1)
                                       & supplied.
65211 IMSLS_TOO_FEW_VALID_OBS_1        Treatment number %(I1) contains fewer
                                       & than two valid observations.
65212 IMSLS_N_TREATMENTS_2             The number of treatments, n_treatment =
                                       & %(I1) does not match the number of
                                       & unique treatment identifiers in
                                       & argument treatment.
65220 IMSLS_N_MISSING_POS              Number of missing values, n_missing =
                                       & %(I1), must be positive when 
                                       & IMSLS_INITIAL_ESTIMATES is used.
65221 IMSLS_N_INDEP_AND_DESIGN_1       Argument n_independent = %(I1) must be
                                       & equal to one when design = %(I2).
65222 IMSLS_N_INDEP_AND_DESIGN_2       Argument n_independent = %(I1) must be
                                       & equal to two when design = %(I2).
65223 IMSLS_OPT_ARG_GET_SS             Optional argument IMSLS_GET_SS must be
                                       & supplied if design = 2.
65224 IMSLS_OPT_ARG_DESIGN             Optional argument design = %(I1) must be
                                       & one of 0, 1, or 2.
65225 IMSLS_OPT_ARG_DESIGN_REQ         Optional argument IMSLS_DESIGN is
                                       & required if n_independent = %(I1) is
                                       & greater than 2.
65226 IMSLS_NO_OBS_IN_TREATMENT        No valid observations in treatment
                                       & %(I1).
65227 IMSLS_NOBS_ERROR_1               The number of blocks times treatments
                                       & do not match the number of
                                       & observations as required for a
                                       & Randomized Complete Block Design.
65228 IMSLS_BAD_BLOCK_IDS              Inconsistent block identifiers for
                                       & Randomized Complete Block Design.
                                       &  Check that treatment and block
                                       & identifiers are specified correctly.
65229 IMSLS_BAD_N_MISSING              Argument n_missing = %(I1) does not
                                       & match the actual number of missing
                                       & observations.
65230 IMSLS_NO_OBS_IN_BLOCK            No valid observations in block %(I1).
65231 IMSLS_ESTIMATES_NOT_FOUND        Algorithm failed to converge to an
                                       & estimate for missing values.  This may
                                       & be an indication of too many missing
                                       & observations.  In some cases using
                                       & higher precision may help.
65232 IMSLS_NO_VALID_OBS               All observations are missing values.
65233 IMSLS_BAD_HESSIAN_EIG            The eigenvalues of the computed Hessian
                                       & indicate too many missing values to
                                       & compute a valid approximation.  This
                                       & may be caused by a treatment or block
                                       & without any non-missing observations,
                                       & or a programming error in the
                                       & user-supplied get_ss function.  In
                                       & some cases using higher precision may
                                       & help.
65240 IMSLS_INTERVAL_TOO_SMALL         The interval between bounds is too
                                       & small.  No change in "x" can be made.
65241 IMSLS_INIT_GUESS_OUT_BOUNDS      The initial guess is out of bound.
                                       &  Rerun with a new guess.
65242 IMSLS_NO_MORE_PROGRESS           Due to the effect of computer rounding
                                       & error, a change in the variables fail
                                       & to improve the objective function
                                       & value.  Usually the solution is close
                                       & to optimum.
65243 IMSLS_MIN_AT_BOUND               The final value for "x" is at a bound.
65244  IMSLS_MAX_SUBINTER_SMALL        The maximum number of subintervals
                                       & "maxsubinter" = %(I1).  It must be at
                                       & least 1.
65245  IMSLS_RULE_SMALL                The quadrature rule "irule" = %(I1).
                                       & It must be in the range 1 to 6.
65246  IMSLS_ERR_ABS_SMALL             The absolute error desired "err_abs" =
                                       & %(F1).  It must be at least zero.
65247  IMSLS_ERR_REL_SMALL             The relative error desired "err_rel"
                                       & = %(F1).  It must be at least zero.
65248  IMSLS_ERR_TOL_ZERO              The error tolerance arguments "err_abs"
                                       & and "err_rel" are both equal to zero.
                                       &  At least one of them must be greater
                                       & than zero.
65249  IMSLS_ERR_REL_BIG               The relative error desired "err_rel" =
                                       & %(F1).  When "err_rel" is greater than
                                       & or equal to one zero can always be
                                       & returned as an answer.
65250  IMSLS_MAX_SUBINTERVALS          The maximum number of subintervals
                                       & allowed "maxsub" = %(I1) has been
                                       & reached.  Increase "maxsub".
65251  IMSLS_PRECISION_DEGRADATION     Precision is degraded due to too fine a
                                       & subdivision relative to the requested
                                       & tolerance.  This may be due to bad
                                       & integrand behavior in the interval
                                       & (%(F1),%(F2)).  Higher precision may
                                       & alleviate this problem.
65252  IMSLS_EXTRAPOLATION_ROUNDOFF    Roundoff error has been detected in the
                                       & extrapolation table.  The requested
                                       & tolerances, "err_abs" = %(F1) and
                                       & "err_rel" = %(F2) cannot be reached.
65253  IMSLS_DIVERGENT                 Integral is probably divergent or slowly
                                       & convergent.
65254  IMSLS_INTERVAL_BOUNDS           Invalid choice for "interval".  Valid
                                       & choices for the variable "interval"
                                       & include "IMSLS_INF_BOUND",
                                       & "IMSLS_BOUND_INF", and
                                       & "IMSLS_INF_INF".
65255  IMSLS_NUM_BREAK_POINTS          The number of break points "%(S1)" =
                                       & %(I1).  It must be at least zero.
65256  IMSLS_ROUNDOFF_CONTAMINATION    Roundoff error has been detected.  The
                                       & requested tolerances, "err_abs" =
                                       & %(F1) and "err_rel" = %(F2) cannot be
                                       & reached.
65260  IMSLS_N_FACTORS_LABELS          ANOVA table row labels are are not
                                       & available if n_facors is greater than
                                       & 99.
65262 IMSLS_CANNOT_EST_SS              Unable to estimate error sum of square.
                                       &  Data contains missing observations
                                       & and only one factor with no
                                       & replication, i.e. n_factors = 1, and
                                       & n_obs = n_levels[0].  The error sums
                                       & of squares can not be estimated
65265 IMSLS_OBS_IN_BLOCK               Number of observations in a block are
                                       & not the same for every block at this
                                       & location.
65266 IMSLS_BAD_NOBS_1                 Number of observations is not equal to
                                       & (n_blocks)(n_whole)(n_split)(n_sub)
65270 IMSLS_LEVELS_STRIP_FACTOR        Number of levels associated with the
                                       & strip factor "%(l1)" must be greater
                                       & than one, but %(l2) = %(I1).
65275 IMSLS_N_NE_NLOC_NTREAT_2         Number of observations, n = %(I1) is not
                                       & equal to n_locations*n_treatments^2
65276 IMSLS_BAD_LOC_IDS                Location identifiers are incorrect.
                                       &  They should have values from k to
                                       & n_locations+k.  In these data, the
                                       & smallest identifier is %(I1) and the
                                       & largest is %(I2).
65277 IMSLS_BAD_TREATMENT_IDS          Treatment identifiers are incorrect.
                                       &  They should have values from k to
                                       & n_treatments+k.  In these data, the
                                       & minimum identifier is %(I1) and the
                                       & maximum is %(I2).
65278 IMSLS_BAD_ROW_IDS                Row identifiers are incorrect.  They
                                       & should have values from 1 to
                                       & n_treatments.  In these data, the
                                       & minimum identifier is %(I1) and the
                                       & maximum is %(I2).
65279 IMSLS_BAD_COL_IDS                Column identifiers are incorrect.  They
                                       & should have values from 1 to
                                       & n_treatments.  In these data, the
                                       & minimum identifier is %(I1) and the
                                       & maximum is %(I2).
65280 IMSLS_ROWS_NE_N_TREATMENTS       Number of rows is not equal to
                                       & n_treatments in location %(I1).
65281 IMSLS_COLS_NE_N_TREATMENTS       Number of columns is not equal to
                                       & n_treatments in location %(I1).
65282 IMSLS_NOBS_NE_N_TREATMENTS_2     Number of observations at location %(I1)
                                       & not equal to n_treatments^2.
65283 IMSLS_NOBS_NE_PRODUCT_1          Number of observations "n" = %(I1) must
                                       & be equal to n_locations * n_treatments
                                       & * n_reps = %(I2) * %(I3) * %(I4).
65284 IMSLS_BAD_REP_IDS                Replicate identifiers are incorrect.  In
                                       & these data, the minimum identifier is
                                       & %(I1) and the maximum is %(I2).
65285 IMSLS_BAD_BLOCK_IDS_2            Inconsistent block identifiers.  Check
                                       & that treatment and block identifiers
                                       & are specified correctly.
65286 IMSLS_IDS_DIFFERENT              Replicate, block or treatment
                                       & identifiers are different between
                                       & repetitions.
65287 IMSLS_N_SUB_1                    The number of levels associated with the
                                       & sub-plot factor must be greater than
                                       & 1, but n_sub = %(I1) supplied.
65288  IMSLS_TOO_MANY_ROTATION_OPT     IMSLS_FACTOR_VARIANCE option requires
                                       & one and only one rotation option.
                                       &  Please try again.
65289  IMSLS_NO_NONNEGATIVE_2          "%(s1)[%(i1)]" = %(r1).  Negative values
                                       & for "%(s1)[%(i1)]" are not allowed.
65290  IMSLS_INVALID2_CENSORING_CODE   "censor_codes[%(I1)]" = %(r1).  All
                                       & censoring codes must be equal to 0 or
                                       & 1.
65291  IMSLS_INVALID_X                 One or more elements of "%(s1)" is
                                       & incorrectly specified.
65292  IMSLS_DATA_NOT_SORTED_2         "%(s1)[%(i1)]" = %(r1) and
                                       & "%(s1)[%(i2)]" = %(r2) when "%(s2)" is
                                       & not 1.  When "%(s2)" is not 1, "%(S1)"
                                       & should be sorted.
65293  IMSLS_MAX_GRID_PT               The maximum grid point for "k" must be
                                       & less than the total number of failing
                                       & events = %(r1) minus 1.  The largest
                                       & possible value will be used.
65294  IMSLS_INVALID_KMIN              "%(s1)" = %(i1) is not greater than the
                                       & maximum number of tied failures =
                                       & %(i2).  The smallest k-grid point
                                       & greater than the maximum number of
                                       & tied failures will be used for
                                       & "%(s1)".
65295  IMSLS_INVALID_BSTART            A user-defined grid starting at "%(S1)"
                                       & = %(r1) is not allowed since negative
                                       & "%(S1)" would result.  "%(S1)" =
                                       & 0.0001 will be used.
65296  IMSLS_INVALID_BSTART_2          The %(i1)-th grid point after the
                                       & starting grid point is negative and
                                       & equal to %(r1).  "%(S1)" must always
                                       & be positive, so this grid point will
                                       & not be used.
65297  IMSLS_STEP_SIZE                 A step size of .00001 times the gradient
                                       & divided by the second partial
                                       & derivative failed to lead to a larger
                                       & "likelihood".  Convergence is assumed
                                       & for %(S1) = %(i1).
65298  IMSLS_NO_CONVERGENCE_2          Convergence was not achieved after %(i1)
                                       & iterations for %(S1) = %(I2).  No
                                       & further attempt at convergence for
                                       & this number of nearest failures will
                                       & be made.
65299  IMSLS_FAILING_OBS               The number of failing observations is
                                       & %(i1).  This is not enough failures to
                                       & continue.
65300  IMSLS_NO_NONNEGATIVE_1          "%(S1)[%(I1)]" = %(R1).  Negative values
                                       & for "%(S1)" are not allowed.
65301  IMSLS_INCORRECT_VALUES          One or more elements of "%(S1)" or
                                       & "%(S2)" is incorrectly specified.
65302  IMSLS_NOT_SORTED                "%(S1)" must be sorted from smallest to
                                       & largest.  %(S1)[%(I1)] = %(R1) is less
                                       & than %(S1)[%(I2)] = %(R2).
65303  IMSLS_K_LT_FAILURES             %(S1) = %(i1).  %(S1) must be less than
                                       & the number of failures (%(i2)) minus
                                       & one.
65304  IMSLS_K_GT_TIED_FAIL            %(S1) = %(i1).  %(S1) must be greater
                                       & than the number of tied failures
                                       & (%(i2)).
65305  IMSLS_NO_HAZARD                 Hazard rate cannot be computed because
                                       & the optimal value for %(S1) is less
                                       & than or equal to zero.
65306  IMSLS_TOO_MANY_MISSING_1        The number of maximum consecutive
                                       & missing values in the time series is
                                       & greater than %(i1).
65307  IMSLS_NOT_ASCENDING_ORDER       "%(S1)[%(i1)]"=%(r1) and "%(S1)[%(i2)]"
                                       & = %(r2).  The time points for the time
                                       & series must be in strictly ascending
                                       & order.
65308  IMSLS_NOT_PERIODIC              The function values at smallest and
                                       & largest "xdata" points, %(F1) and
                                       & %(F2), are not equal.  They are %(F3)
                                       & and %(F4), respectively.  %(F3) is
                                       & used.
65309  IMSLS_XVEC_LENGTH               The length of xvec must be at least 1
                                       & while "nx" = %(i1) is given.
65310  IMSLS_XVEC_NOT_INCREASING       The X data values must be strictly
                                       & increasing, but "xvec[%(i1)]" = %(r1)
                                       & and "xvec[%(i2)]" = %(r2).
65311  IMSLS_NEED_AT_LEAST_4_PTS       The number of data points must be 4
                                       & or more while the number specified
                                       & is %(I1).
65312  IMSLS_BAD_DELTA                 The value of the parameter delta
                                       & controlling the dynamic dampening
                                       & effect of a TC outlier is %(F1).  Its
                                       & value must lie in the open interval
                                       & (0.0, 1.0.).
65313  IMSLS_MAXLAG_OUT_OF_RANGE_1     "maxlag" = %(i2).  "maxlag" must be
                                       & greater than or equal to 1 and less
                                       & than "n_observations" = %(i1).
65314 IMSLS_NEED_RARG_GT_ZERO          "%(S1)" = %(F1).  "%(S1)" must be
                                       & greater than zero.
65315 IMSLS_AR_LT_ZERO                 "p_initial[%(i1)]" = %(i2).  All
                                       & elements of p_initial must be
                                       & non-negative.
65316 IMSLS_MA_LT_ZERO                 "q_initial[%(i1)]" = %(i2).  All
                                       & elements of q_initial must be
                                       & non-negative.
65317 IMSLS_MODEL_REQUIRED             The choice of method = 3 requires
                                       & optional argument IMSLS_MODEL.
65318 IMSLS_P_Q_INITIAL_REQUIRED       The choice of method=2 requires optional
                                       & arguments IMSLS_P_INITIAL and
                                       & IMSLS_Q_INITIAL.
65319 IMSLS_BAD_OUTLIER_TYPE           "outlier_stat[%(i1)]" = %(i2).  Feasible
                                       & values for the different outlier types
                                       & are 0, 1, 2, 3 and 4.
65320 IMSLS_BAD_OUTLIER_TIME_POINT     "outlier_stat[%(i1)]" = %(i2).  The time
                                       & points outliers can occur, must lie in
                                       & the closed interval [1, n_obs]=[1,
                                       & %(i3)].
65321 IMSLS_NO_ACCEPTABLE_MODEL_FOUND  For the given time series and values in
                                       & p_initial, q_initial, s_initial and
                                       & d_initial no acceptable ARIMA
                                       & representation could be computed.
65322 IMSLS_D_INITIAL_NEGATIVE         "d_initial[%(i1)]" = %(i2).  All
                                       & elements of "d_initial" must be
                                       & non-negative.
65323 IMSLS_S_INITIAL_NON_POSITIVE     "s_initial[%(i1)]" = %(i2).  All
                                       & elements of "s_initial" must be
                                       & positive.
65325 IMSLS_MAXLAG_OUT_OF_RANGE_4      "maxlag" = %(i2).  "maxlag" must be
                                       & greater than or equal to 1 and less
                                       & than or equal to "nobs/2" = %(i1).
65326 IMSLS_NOT_ASCENDING_ORDER_1      "%(S1)[%(i1)]"= %(i2) and "%(S1)[%(i3)]"
                                       & = %(i4).  The time points for the time
                                       & series must be in strictly ascending
                                       & order.
65327 IMSLS_BAD_CONFIDENCE_LEVEL_1     The specified confidence level is %(r1)
                                       & which is not in the exclusive range
                                       & 0.0 to 100.0.
65328 IMSLS_MAX_VAR_EXCEEDED           N_CANDIDATE = %(i1) is larger than the
                                       & maximum allowed (%(i2)) for this
                                       & algorithm.  Results can be incorrect.
65329 IMSLS_MATRIX_NOT_SYMMETRIC       "sigma" is not symmetric.  sigma[%(I1),
                                       & %(I2)] = %(R1) is not equal to
                                       & sigma[%(I2), %(I1)] = %(R2)
65330 IMSLS_SIGMA_SINGULAR             "sigma" is not positive definite.  Its
                                       & smallest eigenvalue is "e[%(I1)]" =
                                       & %(R1) which is less than "%(S1)" =
                                       & %(R2).
65331 IMSLS_VARIANCE_NONPOSITIVE       sigma[%(I1), %(I1)] = %(R1).  All
                                       & diagonal elements must be greater than
                                       & zero.
65332 IMSLS_CORRELATION_INVALID        The correlation between variables %(I1)
                                       & and %(I2) is invalid, r=%(R1).  All
                                       & correlations must be less than 1 and
                                       & greater than -1.
65333 IMSLS_NOMINAL_NULL               Required input "nominal"=NULL but
                                       & n_nominal = %(I1) > 0.
65334 IMSLS_CONTINUOUS_NULL            Required input "continuous" = NULL but
                                       & n_continuous=%(I1) > 0.
65335 IMSLS_MAX_EVALS_EXCEEDED         The number of iterations for the cdf
                                       & calculation has exceeded MAX_EVALS =
                                       & %(I1).  Required accuracy may not have
                                       & been achieved.
65336 IMSLS_MAX_EIGEN_GT_ZERO          The maximum number of function
                                       & evaluations "max_eval" = %(I1).  It
                                       & must be greater than zero.
65337 IMSLS_MAX_EVALS_TOO_LARGE        The maximum number of function
                                       & evaluations "max_eval" = %(I1), "n" =
                                       & %(I2).  "maxfcn" was greater than
                                       & 256**n.  It is reset to 256**n.
65338 IMSLS_USE_IMSLS_VECTORS_OPTION   Optional arguments "IMSLS_RANGE" and
                                       & "IMSLS_VECTORS_USER" are incompatible.
                                       & Use "IMSLS_VECTORS" instead.
65339 IMSLS_NO_EIGENVALUES_RETURNED    The number of eigenvalues in the
                                       & specified interval exceeds "mxeval".
                                       & "neval" contains the number of
                                       & eigenvalues in the interval.  No
                                       & eigenvalues will be returned.
65340 IMSLS_SLOW_CONVERGENCE_2         Inverse iteration did not converge.
                                       &  Eigenvector is not correct for the
                                       & specified eigenvalue.
65341 IMSLS_LOST_ORTHOGONALITY_2       The eigenvectors have lost
                                       & orthogonality.
65342 IMSLS_SLOW_CONVERGENCE_SYM       The iteration for the eigenvalue failed
                                       & to converge in 100 iterations before
                                       & deflating.
65343 IMSLS_LDEVEC_VALUE_TOO_SMALL     The argument "ldevec" = %(I1).  The
                                       & leading dimension of the eigenvector
                                       & matrix must be at least equal to the
                                       & order of the matrix, "n" = %(I2).
65344 IMSLS_NUMBER_MAX_EIGENVALUES     The argument "mxeval" = %(I1).  The
                                       & maximum number of eigenvalues to be
                                       & calculated must be greater than zero
                                       & and less than or equal to "n" = %(I2).
65345 IMSLS_NEED_ELOW_LESS_THAN_EHIGH  The lower limit of the interval in
                                       & which the eigenvalues are to be
                                       & sought, "elow" = %(F1), must be
                                       & strictly less than the upper limit,
                                       & "ehigh" = %(F2).
65346 IMSLS_BAD_SOLVE_FACTOR_INVERSE   Only one of "IMSL_FACTOR_ONLY" or
                                       & "IMSL_SOLVE_ONLY" or
                                       & "IMSL_INVERSE_ONLY" can be specified.
65347 IMSLS_SPECIFY_SOLVE_ONLY         "IMSL_FACTOR_USER" must be specified
                                       & with "IMSL_SOLVE_ONLY".
65348 IMSLS_CONDITION_ONLY_SPECIFIER   "IMSL_CONDITION" cannot be used with
                                       & "IMSL_SOLVE_ONLY".
65349 IMSLS_NO_MEM_FOR_FAC             Not enough memory to perform the
                                       & factorization.
65350 IMSLS_NO_MEM_FOR_SYS             Not enough memory to solve the system.
65351 IMSLS_LOG_NORMAL_INVALID         CONTINUOUS[%(I1),%(I2)]=%(R1) < 0.
                                       &  Since a log-normal distribution is
                                       & specified for attribute = %(I2), all
                                       & of its values must be greater than
                                       & zero.
65352 IMSLS_GAMMA_INVALID              CONTINUOUS[%(I1),%(I2)]=%(R1) < 0.
                                       &  Since a gamma distribution is
                                       & specified for attribute=%(I2), all of
                                       & its values must be greater than zero.
65353 IMSLS_CLASSIFICATION_MISSING     %(I1) pattern(s) detected with a missing
                                       & target classification.
65354 IMSLS_ATTRIBUTE_VALUE_MISSING    %(I1) pattern(s) detected with a missing
                                       & value for nominal attribute %(I2)
                                       & where its target classification =
                                       & %(I3)
65355 IMSLS_PDF_ZERO                   %(I1) conditional pdf calculation(s) for
                                       & %(S1) attribute %(I2) is(are) zero or
                                       & less.
65356 IMSLS_STDEV_NOT_POSITIVE         The standard deviation for continuous
                                       & attribute %(I1) and class %(I2) is
                                       & equal to %(R1).  All standard
                                       & deviations must be greater than zero.
65357 IMSLS_VALUE_MISSING              %(S1) attribute %(I1) has %(I2) missing
                                       & value(s).
65358 IMSLS_ATTRIBUTE_VALUE_NEG        %(I1) non-positive attribute(s) values
                                       & detected for a %(S1) attribute.
                                       &  Unable to classify these patterns.
                                       &  Their classification is set to -1.
65359 IMSLS_FILE_OPEN_FAILURE          Unable to open %(S1) file %(S2).
65360 IMSLS_MISSING_REQ_ARG            %(S1) argument is missing.  This is a
                                       & required argument when %(S2) = %(I1) >
                                       & 0.
65361 IMSLS_INVALID_INT_ARG1           %(S1)[%(I1)]=%(I2) is invalid.  This
                                       & value must be an integer in the
                                       & interval [%(I3), %(I4)].
65362 IMSLS_INVALID_INT_ARG2           %(S1)[%(I1)]=%(I2) is invalid.  This
                                       & value must be %(I3) or greater.
65363 IMSLS_INVALID_INT_ARG3           The lower bound for integer %(I1) is
                                       & equal to %(I2) which is greater than
                                       & %(I3) the upper bound in %(S1).
65364 IMSLS_INVALID_REAL_ARG1          %(S1)[%(I1)]=%(R1) is invalid.  This
                                       & value must be in the interval [%(R2),
                                       & %(R3)).
65365 IMSLS_INVALID_REAL_ARG3          The lower bound for real %(I1) is equal
                                       & to %(R1) which is not less than %(R2)
                                       & the upper bound in %(S1).
65366 IMSLS_INDIVIDUALS_INCONSISTENT   INDIVIDUALS are inconsistent with
                                       & CHROMOSOME.  Found %(I1) individuals
                                       & who not match chromosome data.
65367 IMSLS_STRUCTURES_INCONSISTENT    %(S1)s are inconsistent with one
                                       & another.  %(S2) = %(I1) for %(S1) 1
                                       & and %(S2) = %(I2) for %(S1) 2.
65368 IMSLS_PMX_INVALID                Use of IMSLS_PMX_CROSSOVER option is
                                       & invalid when n_nominal = %(I1).
65369 IMSLS_NO_PHENOTYPES              No phenotypes were specified.  At least
                                       & one binary, nominal, integer or real
                                       & phenotype is required.
65371 IMSLS_MISSING_FILENAME           Argument "filename" is NULL.
65372 IMSLS_INCORRECT_VERSION          Version number found in 1st line of
                                       & %(S1) is incompatible with this
                                       & version of CNL.
65373 IMSLS_NO_PROGRESS_2              Due to the effect of computer rounding
                                       & error, the algorithm has not made good
                                       & progress.
65374 IMSLS_HW_SEASON_SIZE             The number for a Holt-Winters series
                                       & season length must be >= 2.  Input
                                       & value is %(i1).
65375 IMSLS_HW_SERIES_SIZE             The number of observations for a
                                       & Holt-Winters series must be "n_obs" >
                                       & 2*"ns"+3.  Now have "n_obs" = %(I1)
                                       & and nseasons "ns" = %(I2).
65376 IMSLS_HW_SERIES_SIGN             The values of the input series, using
                                       & the Holt-Winters Multiplicative
                                       & method, must be positive.  The series
                                       & entry with index = %(I1) now has the
                                       & non-positive value %(R1).
65377  IMSLS_HW_COV_NOT_EST            The covariance matrix could not be
                                       & estimated.  The parameter estimates
                                       & may be at their upper or lower bounds.
65378 IMSLS_BAY_SEA_SERIES_SIZE        The number of observations ("nobs") for
                                       & a Bayesian Seasonal Adjustment series
                                       & should be >= "%(S1)". Currently "nobs" =
                                       & %(I1) and "%(S1)" = %(I2).
65380   IMSLS_POSITIVE_OBS             The %(l1) distribution requires positive
                                       & observations, while the minimum "x"
                                       & value is %(R1).
65382   IMSLS_BINARY_OBSERVATIONS      The %(l1) distribution requires binary
                                       & (0,1) observations, while the minimum
                                       & "x" value is %(R1) and maximum "x"
                                       & value is %(R2).
65383   IMSLS_INITIAL_LOGLIKE_INF      The initial log-likelihood is infinity.
                                       &  Check starting values or other
                                       & assumptions.
65384   IMSLS_HESSIAN_NOT_CALCULATED   The hessian is not calculated for the
                                       & %(l1) distribution.
65385   IMSLS_NONNEGATIVE_OBS          The %(l1) distribution requires
                                       & non-negative observations, while the
                                       & minimum "x" value is %(R1).
65386   IMSLS_N_TRIALS_REQ             The optional argument
                                       & IMSLS_NUMBER_OF_TRIALS is required for
                                       & binomial distribution.
65387   IMSLS_N_TRIALS_GE_ONE          The binomial distribution requires the
                                       & number of trials to be at least 1,
                                       & while "n_trials" = %(I1).
65388   IMSLS_BINOM_PARAM_EST          The binomial parameter estimate = %(R1)
                                       & is not a valid probability.
                                       &  The number of trials, "n_trials" =
                                       & %(I1) may be incorrect.
65389   IMSLS_N_FAILURES_REQ           The optional argument
                                       & IMSLS_NUMBER_OF_FAILURES is required
                                       & for negative binomial distribution.
65390   IMSLS_N_FAILURES_GT_ZERO       The negative binomial distribution
                                       & requires the number of failures to be
                                       & greater than 0, while "n_failures" =
                                       & %(I1).
65391   IMSLS_MIN_EQ_MAX               The maximum and minimum of the data
                                       & are equal with value equal to %(R1).
                                       &  The MLEs cannot be estimated.
65392   IMSLS_HESSIAN_NOT_USED         The hessian is not used to calculate
                                       & standard errors for the %(L1)
                                       & distribution.
65393   IMSLS_POSITIVE_PARAMS          The %(l1) distribution requires positive
                                       & parameter values, while "param[0]" =
                                       & %(R1) and "param[1]" = %(R2).
65394   IMSLS_POSITIVE_SCALE           The %(l1) distribution requires the
                                       & scale parameter to be positive, while
                                       & "param[1]" = %(R1).
65395   IMSLS_HESSIAN_NOT_CALC_2       For the %(l1) distribution, the hessian
                                       & cannot be calculated because the
                                       & parameter estimate is 0.
65396   IMSLS_SIGMA_GT_ZERO            The parameter SIGMA must be greater than
                                       & 0, while "sigma" = %(r1).
65397   IMSLS_NONNEG_X                 The value of the argument "x" = %(r1)
                                       & must be non-negative.
65398   IMSLS_PROB_NOT_VALID           The probability of success "p" = %(r1)
                                       & must be between 0 and 1, inclusive.
65399   IMSLS_N_FAILURES_NOT_VALID     The number of failures "r"=%(r1) must
                                       & be greater than or equal to 1.
65400   IMSLS_GEN_PARETO_SCALE         The generalized Pareto scale parameter
                                       & must be greater than 0.0, while
                                       & "sigma" = %(r1).
65401   IMSLS_GEN_PARETO_QUANTILE      The generalized Pareto quantile must be
                                       & non-negative, while "x" = %(r1).
65402   IMSLS_IX_GT_ZERO               "ix" = %(i1) must be greater than or
                                       & equal to 0.
65403   IMSLS_PIN_OUT_OF_RANGE         "pin" = %(r1) must be greater than 0
                                       & and less than 1.
65404   IMSLS_X_GT_ZERO                "x" = %(r1) must be greater than 0.0.
65405   IMSLS_INVALID_SCALE            The scale parameter, "b" = %(r1) must
                                       & be greater than 0.0.
65406   IMSLS_A_GT_ZERO                The shape parameter "a" = %(r1) must
                                       & greater than 0.0.
65407   IMSLS_B_GT_ZERO                The shape parameter "b" = %(r1) must
                                       & greater than 0.0.
65408   IMSLS_X_GE_ZERO                "x" = %(r1) must be greater than or
                                       & equal to 0.0.
65409   IMSLS_ALPHA_GT_ZERO            The value, "alpha" = %(r1) must be
                                       & greater than 0.0.
65410   IMSLS_SCALE_A_GT_ZERO          The scale parameter, "a" = %(r1) must
                                       & be greater than 0.0.
65411   IMSLS_PARETO_ALPHA_GT_ZERO     The Pareto parameter, "alpha"=%(r1)
                                       & must be greater than 0.0.
65412   IMSLS_PARETO_XMIN_GT_ZERO      The Pareto parameter "xmin" = %(r1)
                                       & must be greater than 0.0.
65413   IMSLS_PARETO_QUANTILE_XMIN     The Pareto quantile "x" = %(r1) must
                                       & be greater than the parameter
                                       & "xmin" = %(r2).
65414   IMSLS_BETA_GT_ZERO             The parameter "beta" must be greater
                                       & than 0, while "beta" = %(r1).
65415   IMSLS_SCALE_MU_GT_ZERO         The scale parameter MU must be greater
                                       & than 0, while "mu" = %(r1).
65416   IMSLS_LAMBDA_GT_ZERO           The parameter "lambda" must be greater
                                       & than 0, while "lambda" = %(r1).
65417   IMSLS_PIN_GT_ZERO              "pin" = %(r1) must be greater than 0.0.
65418   IMSLS_QIN_GT_ZERO              "qin" = %(r1) must be greater than 0.0.
65419   IMSLS_X_POS_AND_LT_ONE         The value of "x" = %(r1) must be
                                       & positive and less than 1.
65420   IMSLS_BAD_LOWER_BOUND          The lower bound given %(r1) must be >=
                                       & 0.
65421   IMSLS_BAD_UPPER_BOUND          The upper bound given %(r1) must be <=
                                       & 1.
65422   IMSLS_NO_GOOD_ROW              Each row contains missing values.  No
                                       & imputation is performed.
65423   IMSLS_INDEP_HAS_MISSING        At least one of the independent
                                       & variables contains a missing value.
                                       &  No imputation is performed.
65424   IMSLS_OBSERVATIONS_RANGE       The %(l1) distribution requires
                                       & observations between 0 and 1, while
                                       & the minimum "x" value is %(R1) and
                                       & maximum "x" value is %(R2).
65430  IMSLS_BAD_PARAM_VALUE           Parameter %(I1) is given as %(R1), but
                                       & must be between 0 and 1, inclusive.
65431  IMSLS_KBASIS_IS_NEGATIVE        The number of columns of the submatrix
                                       & "ak" of "a" must be positive while
                                       & "kbasis" = %(I1) is given.
65432 IMSLS_LARGER_N_VALUE_NEEDED      The argument "n" = %(I1).  It must be at
                                       & least 1.
65433 IMSLS_MISSING_ASCII_TRIPLET      Missing triplet.  At least one variable
                                       & length, data type, and variable name
                                       & triplets optional argument is
                                       & required.
65434 IMSLS_BAD_PARAM                  Invalid parameter passed to this
                                       & procedure.
65436 IMSLS_M_DT_NO_M                  Month number, %(I1), didn't match any in
                                       & Month Array.
65437 IMSLS_M_DT_BAD_DYR               Invalid number of days, %(I1).  Valid
                                       & days are 1-366.
65438 IMSLS_M_INVALID_BINARY_CHAR      A binary character may have been
                                       & detected: %(I1)
65439   IMSLS_CUDA_INIT                CUDA Library Initialization Failed:
                                       & Error obtaining CUDA handle.  Using
                                       & the CPU version of "%(s1)".
65440 IMSLS_COPY_TO_GPU                Error copying data from the CPU to the
                                       & GPU.  Using the CPU version of
                                       & "%(s1)".
65441 IMSLS_COPY_TO_CPU                Error copying data from the GPU to the
                                       & CPU.  Using the CPU version of
                                       & "%(s1)".
65442 IMSLS_GPU_ALLOCATION             Error allocating memory on the GPU.
                                       &  Using the CPU version of "%(s1)".
65443 IMSLS_DP_MATH_NOT_AVAIL          Double Precision arithmetic is not
                                       & available on the GPU.  Using the CPU
                                       & version of "%(s1)".
65444 IMSLS_FCN_NOT_USED               The specified function name "%(s1)" has
                                       & not yet been used.
65445 IMSLS_CUDA_SET_ERROR             Invalid argument %(i1).  The argument
                                       & must be greater than or equal to zero.
65446 IMSLS_CUDA_ENUM_NAME             The argument specified for "cuda_name" =
                                       & %(i1) is not valid.
65447 IMSLS_GPU_NEGATIVE_INCREMENT     A negative increment for CUDA BLAS are
                                       & not allowed.  Execution is continuing
                                       & using the IMSL version.
65448 IMSLS_CUDA_FREE                  An error was encountered when freeing
                                       & memory from the GPU.  Execution is
                                       & continuing using the CPU version of
                                       & "%(s1)".
65449 IMSLS_USER_CUDA_FREE             An error was encountered freeing memory
                                       & from the GPU.
65450 IMSLS_CUDA_NOT_IMPLEMENTED       The specified function name "%(s1)" does
                                       & not have a CUDA implementation.
65451  IMSLS_BAD_PARAM_VALUE_2         "%(S1)" is given as %(R1), but must be
                                       & between 0 and 1, inclusive.
65452  IMSLS_NULL_PROBABILITY_0        The null probability estimate is <= 0.
                                       &  Check that the p-values are correct
                                       & or try lowering the maximum "lambda"
                                       & value, which is currently = %(R2).
65453  IMSLS_SPLINE_NO_POS_ELMNT       At least one element of the weights must
                                       & be greater than zero, but all weights
                                       & given are equal to zero.
65454  IMSLS_NEGATIVE_WEIGHTS          All weights in the %(S1)-direction must
                                       & be greater than or equal to zero, but
                                       & weight number %(I1) is %(F1).
65455  IMSLS_NEED_AT_LEAST_3_PTS       The number of data points must be at
                                       & least 3 while the number specified is
                                       & %(I1).
65456  IMSLS_NEGATIVE_WEIGHTS_2        An element of the weight vector is not
                                       & positive.  All elements must be
                                       & positive.
65458  IMSLS_CUDA_NOT_AVAIL            The CUDA Toolkit algorithms are not
                                       & implemented using this version of the
                                       & library.  Use the CUDA link
                                       & environment variables to leverage the
                                       & CUDA Toolkit algorithms.
65459  IMSLS_TOO_FEW_ARGUMENTS         Too few non-NULL arguments are given.
65460  IMSLS_EMPTY_INT_RESULTS         Intermediate results given to the
                                       & function are empty and may be expected
                                       & to be non-empty in this scenario.
65461  IMSLS_NO_LRSTAT                 The likelihood ratio statistic is not
                                       & available for no-intercept models.
65462  IMSLS_MODELS_INCOMPATIBLE       The specified model structures are
                                       & different (the number of coefficients
                                       & do not match).
65463  IMSLS_DUPLICATE_XINDICES        There are duplicate indices in
                                       & "xinteract" at locations %(I1) and
                                       & %(I2).
65465 IMSLS_NOBS_SMALLER_MAXMIN        The number of observations ("nobs") is
                                       & smaller than the minimum required to
                                       & fit the highest order AR model.
                                       & "nobs" = %(i1) and max("mspan") =
                                       & %(i2).
65466 IMSLS_FIRST_ARP_BREAK_NONE       The first breakpoint "arp[0]" should be
                                       & 0, while "arp[0]" = %(i1).
65467 IMSLS_AR_MODEL_ORDER_INVALID     The model order must be positive but
                                       & less than or equal to the maximum
                                       & allowed order ("max_ar_order").
                                       &  "arp[%(i1)]" = %(i2) and
                                       & "max_ar_order" = %(i3).
65469 IMSLS_BREAKPOINTS_EXCEED_MAX     "npcs" must be positive but less than or
                                       & equal to the maximum number of
                                       & breakpoints allowed.  The maximum
                                       & allowable number of breakpoints is a
                                       & function of the total number of
                                       & observations and the minimum number of
                                       & observations required to fit the AR
                                       & models.  The maximum number of
                                       & breakpoints allowed is %(i1) while
                                       & "npcs" = %(i2).
65470 IMSLS_ISLAND_NOT_POSITIVE        "island[%(i1)]" must be strictly
                                       & positive while "island[%(i1)]" =
                                       & %(i2).
65471 IMSLS_GA_PARM_NOT_PROB           "gaparm[%(i1)]" is a probability ranging
                                       & inclusively from 0 to 1 while
                                       & "gaparm[%(i1)]" = %(r2).
65472 IMSLS_GA_BAD_PARENT_CHROME_PROB  The sum of probabilities, "gaparm[2]"
                                       & and "gaparm[3]", must be strictly
                                       & between 0.0 and 1.0.  "gaparm[2]" =
                                       & %(r1).  "gaparm[3]" = %(r2).
65473 IMSLS_GA_NOT_PROB_DISTN          "pdistn[%(i1)]" is a probability ranging
                                       & inclusively from 0 to 1 while
                                       & "pdistn[%(i1)]" = %(i2).
65474 IMSLS_GA_MAXMIG_EXCEEDED         "maxmig" migrations or "stopiters"
                                       & iterations were reached in the genetic
                                       & algorithm before the selection
                                       & criterion value converged.  Try
                                       & increasing "maxmig", "stopiters" or
                                       & using the double precision routine.
65475 IMSLS_WORK_SIZE_TOO_SMALL        The sizes of the work[] and iwork[] arrays must be
                                       & at least %(i1) and %(i2) respectively.
65476 IMSLS_INADEQUATE_MODEL           The model used contains inadequate information 
                                       & to compute the requested probability.
65477 IMSLS_NU_INFEASIBLE              The "nu" specified, %(r1), is infeasible for this problem.
                                       & Try a smaller value of "nu".
65478 IMSLS_LABEL_NOT_FOUND            The class label %(F1) specified in "weight" not found. 
65479 IMSLS_LEFT_OPEN_INTERVAL_REAL    "%(S1)" = %(F1).  "%(S1)" must be
                                       & greater than %(F2) but less than or equal to %(F3).  
65480 IMSLS_OPTION_NOT_SUPPORTED       The optional argument %(S1) is not supported for %(S2).
65481 IMSLS_PROBABILITY_NOT_SUPPORTED  The model used does not support probability estimates.
65482 IMSLS_TWO_CLASS_LINE_SEARCH      The line search failed in a two-class probability estimatation
                                       & while performing cross validation.
65483 IMSLS_VALIDATION_MAX_ITERATIONS  The maximum number of iterations was reached in a %(S1)-class
                                       & probability estimatation while performing cross validation.
65484 IMSLS_MUT_EXC_MODEL_OPTIONS      The options
                                       & IMSLS_SVM_C_SVC_TYPE,
                                       & IMSLS_SVM_NU_SVC_TYPE,
                                       & IMSLS_SVM_ONE_CLASS_TYPE,
                                       & IMSLS_SVM_EPSILON_SVR_TYPE, and
                                       & IMSLS_SVM_NU_SVR_TYPE are
                                       & mutually exclusive options.  Only one
                                       & can be specified in a single
                                       & invocation of this function.
65485 IMSLS_MUT_EXC_KERNEL_OPTIONS     The options
                                       & IMSLS_SVM_KERNEL_LINEAR,
                                       & IMSLS_SVM_KERNEL_POLYNOMIAL,
                                       & IMSLS_SVM_KERNEL_RADIAL_BASIS,
                                       & IMSLS_SVM_KERNEL_SIGMOID, and
                                       & IMSLS_SVM_KERNEL_PRECOMPUTED, are
                                       & mutually exclusive options.  Only one
                                       & can be specified in a single
                                       & invocation of this function.
65500 IMSLS_TOO_FEW_OBS                The number of observations cannot be less than
                                       & the number of clusters, while "n_observations" = %(i1)
                                       & and "n_clusters" = %(i2).
65535 IMSLS_LAST_ERROR                 LAST ERROR IN FILE
